{"version":3,"sources":["../../src/dom/getParent.ts","../../src/dom/getVirtualParent.ts","../../src/dom/isVirtualElement.ts","../../src/appendFunction.ts","../../src/extendComponent.ts","../../src/dom/setSSR.ts","../../src/concatStyleSets.ts","../../src/KeyCodes.ts","../../src/extractStyleParts.ts","../../src/components/Image/Image.types.ts","../../src/index.ts","../../src/object.ts","../../src/dom/findElementRecursive.ts","../../src/components/Button/SplitButton/SplitButton.styles.ts","../../src/components/Image/Image.base.tsx","../../src/components/Image/Image.styles.ts","../../src/components/Image/Image.tsx","../../src/hoist.ts","../../src/utilities/decorators/BaseDecorator.ts","../../src/memoize.ts","../../src/GlobalSettings.ts","../../src/components/Icon/FontIcon.tsx","../../src/setFocusVisibility.ts","../../src/customizations/mergeSettings.ts","../../src/components/FocusZone/FocusZone.types.ts","../../src/dom/elementContains.ts","../../src/Async.ts","../../src/warn/warnDeprecations.ts","../../src/hoistStatics.ts","../../src/utilities/positioning/positioning.types.ts","../../src/scroll.ts","../../src/dom/setPortalAttribute.ts","../../src/warn/warnConditionallyRequiredProps.ts","../../src/keyframes.ts","../../src/utilities/buildClassMap.ts","../../src/fontFace.ts","../../src/utilities/icons.ts","../../src/styles/AnimationStyles.ts","../../src/styles/DefaultPalette.ts","../../src/styles/fonts.ts","../../src/styles/DefaultEffects.ts","../../src/language.ts","../../src/styles/DefaultFontStyles.ts","../../src/localStorage.ts","../../src/styles/CommonStyles.ts","../../src/styles/zIndexes.ts","../../src/styles/getFocusStyle.ts","../../src/styles/hiddenContentStyle.ts","../../src/styles/PulsingBeaconAnimationStyles.ts","../../src/styles/getGlobalClassNames.ts","../../src/merge.ts","../../src/styles/DefaultSpacing.ts","../../src/styles/theme.ts","../../src/styles/GeneralStyles.ts","../../src/styles/getPlaceholderStyles.ts","../../src/classNames/AnimationClassNames.ts","../../src/classNames/ColorClassNames.ts","../../src/classNames/FontClassNames.ts","../../src/version.ts","../../src/components/Button/DefaultButton/DefaultButton.styles.ts","../../src/components/Button/ButtonThemes.ts","../../src/components/Button/DefaultButton/DefaultButton.tsx","../../src/setVersion.ts","../../src/rtl.ts","../../src/sessionStorage.ts","../../src/components/Button/PrimaryButton/PrimaryButton.tsx","../../src/styled.tsx","../../src/concatStyleSetsWithProps.ts","../../src/classNamesFunction.ts","../../src/mergeStyleSets.ts","../../src/mergeStyles.ts","../../src/properties.ts","../../src/css.ts","../../src/osDetector.ts","../../src/mobileDetector.ts","../../src/initializeComponentRef.ts","../../src/components/Popup/Popup.tsx","../../src/dom/on.ts","../../src/customizations/customizable.tsx","../../src/dom/portalContainsElement.ts","../../src/array.ts","../../src/aria.ts","../node_modules/tslib/tslib.es6.js","../../src/customizations/Customizer.tsx","../../src/customizations/mergeCustomizations.ts","../../src/components/Fabric/Fabric.styles.ts","../../src/components/Fabric/Fabric.base.tsx","../../src/components/Fabric/Fabric.tsx","../../src/components/Layer/Layer.notification.ts","../../src/components/Layer/Layer.base.tsx","../../src/dom/setVirtualParent.ts","../../src/components/Layer/Layer.styles.ts","../../src/components/Layer/Layer.tsx","../../src/Rectangle.ts","../../src/utilities/positioning/positioning.ts","../../src/components/Callout/CalloutContent.base.tsx","../../src/components/Callout/CalloutContent.styles.ts","../../src/components/Callout/CalloutContent.tsx","../../src/components/Callout/Callout.tsx","../../src/utilities/keytips/KeytipConstants.ts","../../src/utilities/keytips/KeytipManager.ts","../../src/utilities/keytips/KeytipUtils.ts","../../src/components/KeytipData/KeytipData.tsx","../../src/components/Icon/Icon.types.ts","../../src/components/Icon/Icon.base.tsx","../../src/components/Icon/Icon.tsx","../../src/focus.ts","../../src/dom/elementContainsAttribute.ts","../../src/keyboard.ts","../../src/useFocusRects.ts","../../src/BaseComponent.ts","../../src/dom/raiseClick.ts","../../src/components/FocusZone/FocusZone.tsx","../../src/common/DirectionalHint.ts","../../src/dom/getWindow.ts","../../src/Stylesheet.ts","../../src/dom/getDocument.ts","../../src/StyleOptionsState.ts","../../src/warn/warn.ts","../../src/components/Button/BaseButton.styles.ts","../../src/components/ContextualMenu/ContextualMenu.types.ts","../../src/components/Icon/ImageIcon.tsx","../../src/utilities/contextualMenu/contextualMenuUtility.ts","../../src/components/ContextualMenu/ContextualMenuItem.base.tsx","../../src/components/Divider/VerticalDivider.classNames.ts","../../src/components/ContextualMenu/ContextualMenu.cnstyles.ts","../../src/components/ContextualMenu/ContextualMenu.classNames.ts","../../src/components/ContextualMenu/ContextualMenuItem.ts","../../src/components/ContextualMenu/ContextualMenuItemWrapper/ContextualMenuItemWrapper.tsx","../../src/components/ContextualMenu/ContextualMenuItemWrapper/ContextualMenuAnchor.tsx","../../src/components/ContextualMenu/ContextualMenuItemWrapper/ContextualMenuButton.tsx","../../src/components/Divider/VerticalDivider.base.tsx","../../src/components/Divider/VerticalDivider.tsx","../../src/components/Divider/VerticalDivider.styles.ts","../../src/components/ContextualMenu/ContextualMenuItemWrapper/ContextualMenuSplitButton.tsx","../../src/components/ContextualMenu/ContextualMenu.base.tsx","../../src/components/ContextualMenu/ContextualMenu.tsx","../../src/components/ContextualMenu/ContextualMenu.styles.ts","../../src/components/Button/BaseButton.classNames.ts","../../src/components/Button/SplitButton/SplitButton.classNames.ts","../../src/components/Button/BaseButton.tsx","../../src/getVendorSettings.ts","../../src/transforms/kebabRules.ts","../../src/transforms/prefixRules.ts","../../src/transforms/provideUnits.ts","../../src/transforms/rtlifyRules.ts","../../src/styleToClassName.ts","../../src/customizations/Customizations.ts","../../src/customizations/CustomizerContext.ts","../../src/getId.ts","../../src/components/Icon/Icon.styles.ts","../../src/EventGroup.ts","../../src/utilities/decorators/withResponsiveMode.tsx"],"names":["getParent","child","allowVirtualParents","parent","element","_virtual","getVirtualParent","parentNode","appendFunction","functions","length","forEach","f","apply","extendComponent","methods","hasOwnProperty","_isSSR","concatStyleSets","styleSets","subComponentStyles","mergedSet","workingSubcomponentStyles","currentSet","prop","undefined","currentComponentStyles","subCompProp","push","mergedValue","currentValue","Array","isArray","Object","keys","mergedSubStyles","styleProps","map","styleFunctionOrObject","KeyCodes","backspace","tab","enter","shift","ctrl","alt","pauseBreak","capslock","escape","space","pageUp","pageDown","end","home","left","up","right","down","insert","del","zero","one","two","three","four","five","six","seven","eight","nine","a","b","c","d","e","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","leftWindow","rightWindow","select","zero_numpad","one_numpad","two_numpad","three_numpad","four_numpad","five_numpad","six_numpad","seven_numpad","eight_numpad","nine_numpad","multiply","add","subtract","decimalPoint","divide","f1","f2","f3","f4","f5","f6","f7","f8","f9","f10","f11","f12","numlock","scrollLock","semicolon","equalSign","comma","dash","period","forwardSlash","graveAccent","openBracket","backSlash","closeBracket","singleQuote","extractStyleParts","classes","objects","stylesheet","getInstance","_processArgs","argsList","arg","indexOf","split","translatedArgs","argsFromClassName","args","ImageFit","ImageCoverStyle","ImageLoadState","shallowCompare","propName","assign","target","filteredAssign","this","concat","isAllowed","sourceObject","onReset","findElementRecursive","matchFunction","document","body","getStyles","theme","customStyles","effects","palette","semanticColors","splitButtonDividerBaseStyles","position","width","top","bottom","splitButtonStyles","splitButtonContainer","highContrastStyle","border","inset","display","selectors","borderTopRightRadius","borderBottomRightRadius","borderRight","color","backgroundColor","MsHighContrastAdjust","splitButtonContainerHovered","buttonTextDisabled","borderColor","splitButtonContainerChecked","splitButtonContainerCheckedHovered","splitButtonContainerFocused","outline","splitButtonMenuButton","padding","height","boxSizing","borderRadius","roundedCorner2","neutralSecondaryAlt","borderLeft","userSelect","textDecoration","textAlign","cursor","verticalAlign","marginLeft","marginTop","marginRight","marginBottom","splitButtonDivider","splitButtonDividerDisabled","splitButtonMenuButtonDisabled","pointerEvents","splitButtonFlexContainer","flexWrap","justifyContent","alignItems","splitButtonContainerDisabled","getClassNames","classNamesFunction","props","_coverStyle","portrait","_imageElement","_frameElement","_onImageLoaded","ev","src","onLoad","_computeCoverStyle","setState","loadState","loaded","_onImageError","onError","error","state","notLoaded","UNSAFE_componentWillReceiveProps","nextProps","componentDidUpdate","prevProps","prevState","_checkImageLoaded","onLoadingStateChange","render","imageProps","shouldFadeIn","shouldStartVisible","className","imageFit","role","maximizeFrame","styles","coverStyle","classNames","isLoaded","isLandscape","landscape","isCenter","center","isCenterContain","centerContain","isCenterCover","centerCover","isContain","contain","isCover","cover","isNone","none","isError","isNotImageFit","root","style","ref","key","image","current","naturalWidth","naturalHeight","complete","ImageBase","_svgRegex","test","desiredRatio","clientWidth","clientHeight","naturalRatio","defaultProps","GlobalClassNames","rootMaximizeFrame","imageCenter","imageContain","imageCover","imageCenterContain","imageCenterCover","imageNone","imageLandscape","imagePortrait","Image","styled","ImageFitStyles","transform","window","getWindow","supportsObjectFit","navigator","msMaxTouchPoints","fallbackObjectFitStyles","fonts","medium","overflow","fadeIn400","opacity","objectFit","maxWidth","maxHeight","scope","REACT_LIFECYCLE_EXCLUSIONS","_updateComposedComponentRef","bind","composedComponentInstance","source","_composedComponentInstance","_hoisted","destination","exclusions","hoisted","methodName","arguments","hoistMethods","_resetCounter","_emptyObject","empty","_dictionary","_weakMap","WeakMap","memoizeFunction","cb","maxCacheSize","ignoreNullOrUndefinedResult","rootNode","cacheSize","localResetCounter","currentNode","_createNode","_normalizeArg","has","set","get","value","createMemoizer","getValue","cache","input","val","_counter","defaultValue","globalSettings","_getGlobalSettings","setValue","callbacks","oldValue","changeDescription","id","addChangeListener","__id__","_getCallbacks","String","removeChangeListener","globalObj","getIconContent","iconName","code","subset","children","iconClassName","fontFamily","fontFace","FontIcon","iconContent","nativeProps","containerProps","placeholder","ariaLabel","IsFocusVisibleClassName","setFocusVisibility","enabled","win","classList","remove","mergeSettings","oldSettings","newSettings","_isSettingsFunction","settings","_settingsMergeWith","mergeScopedSettings","scopedSettingsFromProps","oldScopedSettings","newScopedSettings","scopeName","_scopedSettingsMergeWith","FocusZoneDirection","FocusZoneTabbableElements","all","inputOnly","elementContains","isContained","nextParent","contains","_timeoutIds","_immediateIds","_intervalIds","_animationFrameIds","_isDisposed","_parent","_onErrorHandler","_noop","dispose","clearTimeout","parseInt","clearImmediate","clearInterval","cancelAnimationFrame","setTimeout","callback","duration","timeoutId","setImmediate","targetElement","immediateId","_logError","setInterval","intervalId","throttle","func","wait","options","lastResult","lastArgs","waitMS","leading","trailing","lastExecuteTime","userCall","now","Date","getTime","delta","waitLength","debounce","noOpFunction","cancel","flush","pending","maxWait","lastCallTime","isNaN","markExecuted","time","invokeFunction","executeImmediately","maxWaitDelta","maxWaitExpired","Math","min","resultFunction","requestAnimationFrame","animationFrameId","animationFrameCallback","warnDeprecations","componentName","deprecationMap","hoistStatics","dest","RectangleEdge","Position","_scrollbarWidth","_bodyScrollDisabledCount","DisabledScrollClassName","allowScrollOnElement","events","_previousClientY","_element","on","event","targetTouches","clientY","passive","stopPropagation","scrollableParent","findScrollableParent","scrollTop","preventDefault","scrollHeight","allowOverscrollOnElement","_disableIosBodyScroll","disableBodyScroll","doc","addEventListener","capture","enableBodyScroll","removeEventListener","getScrollbarWidth","scrollDiv","createElement","setProperty","appendChild","offsetWidth","removeChild","startingElement","el","getAttribute","parentElement","computedStyles","getComputedStyle","overflowY","getPropertyValue","DATA_PORTAL_ATTRIBUTE","setPortalAttribute","setAttribute","warnConditionallyRequiredProps","requiredProps","conditionalPropName","condition","keyframes","timeline","Stylesheet","name","getClassName","rulesArray","rules","join","insertRule","cacheClassName","buildClassMap","styleName","defineProperty","mergeStyles","toString","enumerable","configurable","font","_iconSettings","GlobalSettings","__options","disableWarnings","warnOnMissingIcons","__remapped","normalizeIconName","getIcon","icon","isRegistered","fontWeight","fontStyle","warn","EASING_FUNCTION_1","EASING_FUNCTION_2","FADE_IN","from","to","FADE_OUT","visibility","SLIDE_RIGHT_IN10","_createSlideInX","SLIDE_RIGHT_IN20","SLIDE_RIGHT_IN40","SLIDE_RIGHT_IN400","SLIDE_LEFT_IN10","SLIDE_LEFT_IN20","SLIDE_LEFT_IN40","SLIDE_LEFT_IN400","SLIDE_UP_IN10","_createSlideInY","SLIDE_UP_IN20","SLIDE_DOWN_IN10","SLIDE_DOWN_IN20","SLIDE_RIGHT_OUT10","_createSlideOutX","SLIDE_RIGHT_OUT20","SLIDE_RIGHT_OUT40","SLIDE_RIGHT_OUT400","SLIDE_LEFT_OUT10","SLIDE_LEFT_OUT20","SLIDE_LEFT_OUT40","SLIDE_LEFT_OUT400","SLIDE_UP_OUT10","_createSlideOutY","SLIDE_UP_OUT20","SLIDE_DOWN_OUT10","SLIDE_DOWN_OUT20","SCALE_UP100","SCALE_DOWN98","SCALE_DOWN100","SCALE_UP103","ROTATE90","ROTATE_N90","AnimationVariables","easeFunction1","easeFunction2","durationValue1","durationValue2","durationValue3","durationValue4","AnimationStyles","slideRightIn10","_createAnimation","slideRightIn20","slideRightIn40","slideRightIn400","slideLeftIn10","slideLeftIn20","slideLeftIn40","slideLeftIn400","slideUpIn10","slideUpIn20","slideDownIn10","slideDownIn20","slideRightOut10","slideRightOut20","slideRightOut40","slideRightOut400","slideLeftOut10","slideLeftOut20","slideLeftOut40","slideLeftOut400","slideUpOut10","slideUpOut20","slideDownOut10","slideDownOut20","scaleUpIn100","scaleDownIn100","scaleUpOut103","scaleDownOut98","fadeIn100","fadeIn200","fadeIn500","fadeOut100","fadeOut200","fadeOut400","fadeOut500","rotate90deg","rotateN90deg","animationName","animationDuration","animationTimingFunction","animationFillMode","fromX","fromY","toX","toY","LocalizedFontNames","LocalizedFontFamilies","DefaultPalette","themeDarker","themeDark","themeDarkAlt","themePrimary","themeSecondary","themeTertiary","themeLight","themeLighter","themeLighterAlt","black","blackTranslucent40","neutralDark","neutralPrimary","neutralPrimaryAlt","neutralSecondary","neutralTertiary","neutralTertiaryAlt","neutralQuaternary","neutralQuaternaryAlt","neutralLight","neutralLighter","neutralLighterAlt","accent","white","whiteTranslucent40","yellowDark","yellow","yellowLight","orange","orangeLight","orangeLighter","redDark","red","magentaDark","magenta","magentaLight","purpleDark","purple","purpleLight","blueDark","blueMid","blue","blueLight","tealDark","teal","tealLight","greenDark","green","greenLight","DefaultEffects","elevation4","elevation8","elevation16","elevation64","Arabic","Cyrillic","EastEuropean","Greek","Hebrew","Thai","Vietnamese","WestEuropean","Selawik","Armenian","Georgian","ChineseSimplified","ChineseTraditional","Hindi","Japanese","Korean","FontSizes","FontWeights","IconFontSizes","defaultFontFamily","LanguageToFontMap","ar","bg","cs","et","he","hi","hr","hu","ja","kk","ko","lt","lv","pl","ru","sk","th","tr","uk","vi","hy","ka","_createFont","size","weight","MozOsxFontSmoothing","WebkitFontSmoothing","fontSize","mini","xSmall","small","smallPlus","mediumPlus","large","xLarge","xLargePlus","xxLarge","xxLargePlus","superLarge","mega","light","semilight","regular","semibold","bold","_language","DefaultFontStyles","localeCode","fontFamilyWithFallback","language","lang","_getLocalizedFontFamily","tiny","createFontStyles","getDocument","savedLanguage","result","localStorage","getItem","documentElement","getLanguage","_registerFontFace","url","localFontName","fontDisplay","_registerFontFaceSet","baseUrl","cdnFolder","cdnFontName","urlBase","fontUrl","registerDefaultFontFaces","fabricConfig","fontBaseUrl","_getFontBaseUrl","HighContrastSelector","HighContrastSelectorWhite","HighContrastSelectorBlack","ScreenWidthMinMedium","ScreenWidthMinLarge","ScreenWidthMinXLarge","ScreenWidthMinXXLarge","ScreenWidthMaxSmall","ScreenWidthMaxMedium","ScreenWidthMinUhfMobile","getScreenSelector","max","ZIndexes","getFocusStyle","insetOrOptions","outlineColor","isFocusedOnly","_getFocusStyleInternal","content","zIndex","FocusStyle","focusClear","Nav","ScrollablePane","Coachmark","Layer","KeytipLayer","borderType","borderPosition","isBorderBottom","hiddenContentStyle","margin","_getGlobalClassNames","memoize","disableGlobalClassNames","styleSheet","reduce","acc","getGlobalClassNames","merge","_merge","circularReferences","isCircularReference","pop","DefaultSpacing","s2","s1","l1","l2","_theme","createTheme","_makeSemanticColorsFromPalette","isInverted","Customizations","getSettings","applySettings","depComments","newPalette","newSemanticColors","defaultFontStyles","defaultFontStyle","rtl","spacing","dep","listTextColor","listText","menuItemBackgroundChecked","_fixDeprecatedSlots","bodyBackground","bodyBackgroundHovered","bodyBackgroundChecked","bodyStandoutBackground","bodyFrameBackground","bodyFrameDivider","bodyText","bodyTextChecked","bodySubtext","bodyDivider","disabledBodyText","disabledBodySubtext","disabledBorder","focusBorder","variantBorder","variantBorderHovered","defaultStateBackground","actionLink","actionLinkHovered","link","linkHovered","buttonBackground","buttonBackgroundChecked","buttonBackgroundHovered","buttonBackgroundCheckedHovered","buttonBackgroundPressed","buttonBackgroundDisabled","buttonBorder","buttonText","buttonTextHovered","buttonTextChecked","buttonTextCheckedHovered","buttonTextPressed","buttonBorderDisabled","primaryButtonBackground","primaryButtonBackgroundHovered","primaryButtonBackgroundPressed","primaryButtonBackgroundDisabled","primaryButtonBorder","primaryButtonText","primaryButtonTextHovered","primaryButtonTextPressed","primaryButtonTextDisabled","accentButtonBackground","accentButtonText","inputBorder","inputBorderHovered","inputBackground","inputBackgroundChecked","inputBackgroundCheckedHovered","inputPlaceholderBackgroundChecked","inputForegroundChecked","inputIcon","inputIconHovered","inputIconDisabled","inputFocusBorderAlt","smallInputBorder","inputText","inputTextHovered","inputPlaceholderText","disabledBackground","disabledText","disabledSubtext","listBackground","listItemBackgroundHovered","listItemBackgroundChecked","listItemBackgroundCheckedHovered","listHeaderBackgroundHovered","listHeaderBackgroundPressed","menuBackground","menuDivider","menuIcon","menuHeader","menuItemBackgroundHovered","menuItemBackgroundPressed","menuItemText","menuItemTextHovered","errorText","warningText","successText","errorBackground","blockingBackground","warningBackground","warningHighlight","successBackground","normalize","boxShadow","getPlaceholderStyles","AnimationClassNames","ColorClassNames","_defineGetter","obj","colorName","suffix","isHover","cssProperty","primary","baseButtonStyles","defaultButtonStyles","minWidth","label","rootHovered","rootPressed","rootExpanded","rootChecked","rootCheckedHovered","rootDisabled","splitButtonMenuButtonChecked","splitButtonMenuButtonExpanded","splitButtonMenuIcon","splitButtonMenuIconDisabled","primaryStyles","standardStyles","BaseButton","variantClassName","onRenderDescription","DefaultButton","customizable","packagesCache","_win","setVersion","packageName","packageVersion","packages","__packages__","_isRTL","getRTL","savedRTL","sessionStorage","isRTL","persistSetting","data","setItem","setRTL","getRTLSafeKeyCode","PrimaryButton","DefaultFields","Component","baseStyles","getProps","pure","fields","_inCustomizerContext","_renderContent","context","customizations","inCustomizerContext","dir","additionalProps","_updateStyles","customizedStyles","rest","_styles","_onSettingsChanged","Consumer","componentDidMount","observe","componentWillUnmount","unobserve","__cachedInputs__","displayName","concatStyleSetsWithProps","allStyles","_memoizedClassNames","RetVal","Map","styleCalcCount","getClassNamesCount","currentMemoizedClassNames","disableCaching","_traverseMap","FabricConfig","enableClassNameCacheFullWarning","console","trace","clear","_traverseEdge","_normalizeValue","inputs","mergeStyleSets","mergeCssSets","classNameSet","concatenatedStyleSet","registrations","styleSetArea","registration","mergeCss","styleArgs","htmlElementProperties","anchorProperties","buttonProperties","inputProperties","textAreaProperties","imgProperties","divProperties","getNativeProps","allowedPropNames","excludedPropNames","css","isMacResult","isMac","reset","userAgent","isIOS","initializeComponentRef","_onMount","_onUpdate","_onUnmount","_setComponentRef","componentRef","_root","_disposables","_onKeyDown","which","onDismiss","_onFocus","_containsFocus","_onBlur","relatedTarget","_async","needsVerticalScrollBar","UNSAFE_componentWillMount","_originalFocusedElement","activeElement","currentWindow","_updateScrollBarAsync","shouldRestoreFocus","focus","ariaLabelledBy","ariaDescribedBy","onKeyDown","_getScrollBar","firstElementChild","rootHeight","firstChildHeight","eventName","concatStyles","ComposedComponent","resultClass","_styleCache","_onSettingChanged","componentProps","default","component","mergedStyles","merged","forceUpdate","portalContainsElement","elementMatch","testElement","hasAttribute","findIndex","array","index","find","addElementAtIndex","itemToAdd","copy","slice","splice","mergeAriaAttributeValues","mergedAttribute","ariaAttributes","filter","trim","extendStatics","setPrototypeOf","__proto__","__extends","__","constructor","prototype","create","__assign","call","__rest","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","__spreadArrays","il","jl","_onCustomizationChange","contextTransform","CustomizerContext","parentContext","newContext","scopedSettings","mergeCustomizations","Provider","inheritFont","bodyThemed","applyTheme","getFabricTheme","_rootElement","_removeClassNameFromBody","as","_getClassNames","divProps","contextDir","pageDir","componentDir","rootDir","needsTheme","renderedContent","Root","rootRef","_addClassNameToBody","applyThemeToBody","Fabric","_defaultHostSelector","_layersByHostId","_filteredEventProps","_rootRef","_createLayerElement","hostId","host","_getHost","_removeLayerElement","layerElement","virtualChild","virtualParent","oldParent","setVirtualParent","insertFirst","insertBefore","firstChild","onLayerDidMount","onLayerMounted","registerLayer","eventBubblingEnabled","_getFilteredEvents","idx","unregisterLayer","onLayerWillUnmount","isNotHost","getElementById","defaultHostSelector","querySelector","LayerBase","_onFilterEvent","eventPhase","Event","BUBBLING_PHASE","type","rootNoHost","equals","rect","parseFloat","toFixed","_createPositionData","targetEdge","alignmentEdge","isAuto","DirectionalDictionary","DirectionalHint","topLeftEdge","topCenter","topRightEdge","topAutoEdge","bottomLeftEdge","bottomCenter","bottomRightEdge","bottomAutoEdge","leftTopEdge","leftCenter","leftBottomEdge","rightTopEdge","rightCenter","rightBottomEdge","_isRectangleWithinBounds","boundingRect","_getOutOfBoundsEdges","outOfBounds","_getEdgeValue","edge","_setEdgeValue","_getCenterValue","edges","_getFlankingEdges","positiveEdge","negativeEdge","_getRelativeEdgeValue","_getRelativeRectEdgeValue","_getRelativeEdgeDifference","hostRect","_moveEdge","newValue","difference","_alignEdges","gap","_isEdgeInBounds","bounds","_adjustFitWithinBounds","bounding","positionData","directionalHintFixed","coverTarget","alignTargetEdge","elementEstimate","elementRectangle","directions","currentEstimate","currentEdge","currentAlignment","_estimatePosition","_flipToFit","flippedElementEstimate","oppositeEdge","_flipAlignmentEdge","_alignOutOfBoundsEdges","outOfBoundsEdges","direction","_centerEdgeToPoint","point","elementToPosition","estimatedElementPosition","elementEdge","adjustedGap","_alignOppositeEdges","_finalizeReturnEdge","returnEdge","abs","_calculateActualBeakWidthInPixels","beakWidth","sqrt","_getPositionData","directionalHint","directionalHintForRTL","previousPositions","positionInformation","getClosestEdge","targetCenter","boundingCenter","_positionElementWithinBounds","_finalizeBeakPosition","elementPosition","positionedBeak","actualElement","returnValue","closestEdge","_positionBeak","targetRectangle","beakTargetPoint","elementBounds","beakPosition","_getRectangleFromElement","clientRect","getBoundingClientRect","_getRectangleFromIRect","_getMaxHeightFromTargetRectangle","gapSpace","_positionElementRelative","targetRect","clientX","_getTargetRect","_getAlignmentData","positionedElement","_finalizePositionData","hostElement","doNotFinalizeReturnEdge","elementEdgeString","_finalizeElementPosition","_positionCallout","callout","isBeakVisible","positionProps","innerWidth","innerHeight","finalizedBeakPosition","positionCard","_positionCard","ANIMATIONS","BEAK_ORIGIN_POSITION","OFF_SCREEN_STYLE","ARIA_ROLE_ATTRIBUTES","_hostElement","_calloutElement","_hasListeners","dismiss","_dismissOnScroll","preventDismissOnScroll","positions","_dismissOnClickOrScroll","_dismissOnResize","preventDismissOnResize","_dismissOnLostFocus","preventDismissOnLostFocus","_setInitialFocus","setInitialFocus","_didSetInitialFocus","_onComponentDidMount","_addListeners","_updateAsyncPosition","_setHeightOffsetEveryFrame","_mouseDownOnPopup","_isMouseDownOnPopup","_mouseUpOnPopup","Async","slideDirectionalClassName","calloutElementRect","heightOffset","_positionAttempts","hidden","_removeListeners","shouldComponentUpdate","newProps","newState","shouldUpdateWhenHidden","_setTargetWindowAndElement","_getTarget","UNSAFE_componentWillUpdate","newTarget","_blockResetHeight","_maxHeight","finalHeight","_didPositionPropsChange","_bounds","_targetWindow","calloutWidth","calloutMaxWidth","hideOverflow","calloutMaxHeight","onScroll","getContentMaxHeight","_getMaxHeight","contentMaxHeight","overflowYHidden","beakVisible","_classNames","overflowStyle","visibilityStyle","container","tabIndex","beak","_getBeakPosition","beakCurtain","Popup","calloutMain","onMouseDown","onMouseUp","isEventTargetOutsideCallout","_target","beakPostionStyle","_updatePosition","calloutElement","expectsTarget","currentProps","_getBounds","newPositions","positionCallout","_arePositionsEqual","onPositioned","currentBounds","targetWindow","segments","getWindowSegments","segment","_getBoundsFromTargetWindow","minPagePadding","mouseTarget","elementTarget","pointTarget","boundingRectangle","getMaxHeight","newPosition","_comparePositions","oldPositions","oldPositionEdge","newPositionEdge","currentElement","currentDoc","_setHeightOffsetTimer","calloutMainElem","lastChild","scrollDiff","offsetHeight","oldProps","getBeakStyle","CalloutContent","borderWidth","borderStyle","overflowX","layerProps","doNotLayer","KeytipEvents","KEYTIP_ADDED","KEYTIP_REMOVED","KEYTIP_UPDATED","PERSISTED_KEYTIP_ADDED","PERSISTED_KEYTIP_REMOVED","PERSISTED_KEYTIP_EXECUTE","ENTER_KEYTIP_MODE","EXIT_KEYTIP_MODE","keytips","persistedKeytips","sequenceMapping","inKeytipMode","shouldEnterKeytipMode","delayUpdatingKeytipChange","_instance","init","register","keytipProps","persisted","addParentOverflow","keySequences","uniqueKeytip","_getUniqueKtp","uniqueID","EventGroup","raise","keytip","update","newKeytipProps","oldKeyTip","visible","unregister","keytipToRemove","enterKeytipMode","exitKeytipMode","getKeytips","fullSequence","parentKeytip","overflowSetSequence","menuExecute","overflowButtonSequences","keytipSequences","getId","KeytipManager","sequencesToID","prevValue","keySequence","_keytipManager","_uniqueId","_getKtpProps","disabled","nativeKeytipProps","_getKtpAttrs","describedByPrepend","describedby","getAriaDescribedBy","overflowKeySequences","overflowSequenceLen","overflowSequence","newKeySequences","mergeOverflows","ktpId","IconType","onImageLoadingStateChange","imageLoadError","imageErrorAs","isPlaceholder","isImage","iconType","RootType","ImageType","Icon","getFirstFocusable","rootElement","includeElementsInFocusZones","getNextElement","getLastFocusable","getPreviousElement","getFirstTabbable","checkNode","getLastTabbable","focusFirstChild","focusAsync","suppressParentTraversal","traverseChildren","allowFocusRoot","tabbable","isCurrentElementVisible","isElementVisible","isElementFocusZone","isElementFocusSubZone","childMatch","lastElementChild","isElementTabbable","childMatchSiblingMatch","previousElementSibling","childMatchParent","childMatchParentMatch","siblingMatch","suppressChildTraversal","nextElementSibling","visibilityAttribute","offsetParent","isVisible","checkTabIndex","tabIndexAttributeValue","isFocusableAttribute","isTabIndexSet","tagName","doesElementContainFocus","currentActiveElement","shouldWrapFocus","noWrapDataAttribute","attribute","elementContainsAttribute","targetToFocusOnNextRepaint","getFocusableByIndexPath","path","nextChild","getElementIndexPath","fromElement","toElement","unshift","DirectionalKeyCodes","mountCounters","setMountCounters","currValue","FocusRects","disableFocusRects","count","_onMouseDown","_onPointerDown","useFocusRects","pointerType","methodNames","len","_makeSafe","_makeAllSafe","BaseComponent","_updateComponentRef","__disposables","disposable","__className","results","exec","__async","__events","_resolveRef","refName","__resolves","_warnDeprecations","_warnMutuallyExclusive","mutuallyExclusiveMap","_warnConditionallyRequiredProps","_skipComponentRefResolution","classMethod","prototypeMethod","retVal","nullRender","raiseClick","createEvent","initEvent","createNewEvent","dispatchEvent","focusZoneStyles","_allInstances","_outerZones","Set","ALLOWED_INPUT_TYPES","_portalContainsElement","newActiveElement","onActiveElementChanged","doNotAllowFocusEventToPropagate","onFocusNotification","isImmediateDescendant","_isImmediateDescendantOfZone","initialElementFocused","_activeElement","_setFocusAlignment","_updateTabIndexes","_setParkedFocus","_onKeyDownCapture","zone","_setActiveElement","isInnerZoneKeystroke","isDefaultPrevented","_getDocument","_isInnerZone","innerZone","_getFirstInnerZone","focusElement","altKey","_tryInvokeClickForFocusable","vertical","_preventDefaultWhenHandled","_moveFocusLeft","_moveFocusRight","horizontal","_moveFocusUp","_moveFocusDown","_moveFocusPaging","allowTabKey","handleTabKey","_isElementInput","focusChanged","_processingTabKey","_shouldWrapFocus","shiftKey","_shouldInputLoseFocus","_getHorizontalDistanceFromCenter","isForward","activeRect","leftAlignment","_focusAlignment","targetRectTop","floor","activeRectBottom","targetRectBottom","activeRectTop","_id","getOuterZones","_windowElement","nodeType","defaultActiveElement","shouldFocusOnMount","_lastIndexPath","elementToFocus","delete","_defaultFocusElement","rootProps","Tag","elementType","_evaluateFocusBeforeRender","onFocus","onMouseDownCapture","forceIntoFirstElement","ownerZoneElement","_getOwnerZone","ownerZone","focusLast","onBeforeFocus","setFocusAlignment","focusedElement","isParked","_isParked","_parkedTabIndex","removeAttribute","forceAlignment","previousActiveElement","preventDefaultWhenHandled","match","_moveFocus","getDistanceFromCenter","useDefaultWrap","candidateDistance","candidateElement","changedFocus","isBidirectional","bidirectional","elementDistance","isCircularNavigation","targetTop","distance","shouldWrap","targetBottom","pagesize","isHorizontal","isVertical","childNodes","childIndex","toLowerCase","selectionStart","isRangeSelected","selectionEnd","inputValue","isReadonly","readOnly","shouldInputLoseFocusOnArrowKey","checkForNoWrap","_window","ownerDocument","defaultView","_stylesheet","InjectionMode","REUSE_STYLE_NODE","_global","config","_rules","_preservedRules","_rulesToInsert","_keyToClassName","_onResetCallbacks","_classNameToArgs","_config","injectionMode","defaultPrefix","namespace","cspSettings","classNameCache","_lastStyleElement","setConfig","classNameFromKey","getClassNameCache","entry","insertedRulesFromClassName","rule","preserve","_getStyleElement","sheet","cssRules","createTextNode","onInsertRule","getRules","includePreservedRules","resetKeys","_styleElement","_createStyleElement","head","styleElement","nonce","placeholderStyleTag","_findPlaceholderStyleTag","_rtl","getStyleOptions","message","noOutline","iconStyle","lineHeight","flexShrink","buttonHighContrastFocus","iconDisabled","menuIconDisabled","flexContainer","description","textContainer","flexGrow","screenReaderText","ContextualMenuItemType","getIsChecked","item","canCheck","isChecked","checked","hasSubmenu","subMenuProps","items","isItemDisabled","isDisabled","getMenuItemAriaRole","openSubMenu","getSubmenuTarget","submenuTarget","dismissSubMenu","dismissMenu","dismissAll","linkContentMenu","linkContent","onCheckmarkClick","isItemChecked","checkmarkIcon","onClick","hasIcons","iconProps","onRenderIcon","text","secondaryText","submenuIconProps","subMenuIcon","wrapper","divider","MediumScreenSelector","getItemHighContrastStyles","getMenuItemStyles","ContextualMenuItemBackgroundHoverColor","ContextualMenuItemTextHoverColor","ContextualMenuItemBackgroundSelectedColor","ContextualMenuItemDividerColor","menuItemStyles","rootFocused","whiteSpace","anchorLink","textRendering","letterSpacing","wordSpacing","textTransform","textIndent","textShadow","textOverflow","paddingLeft","minHeight","iconColor","getSplitButtonVerticalDividerClassNames","isExpanded","splitMenu","expanded","isAnchorLink","knownIcon","itemClassName","dividerClassName","subMenuClassName","primaryDisabled","background","splitPrimary","flexBasis","splitContainer","getItemStyles","ContextualMenuItem","_onItemMouseEnter","onItemMouseEnter","currentTarget","_onItemClick","onItemClickBase","_onItemMouseLeave","onItemMouseLeave","_onItemKeyDown","onItemKeyDown","_onItemMouseMove","onItemMouseMove","_getSubMenuId","getSubMenuId","_getSubmenuTarget","_anchor","_getMemoizedMenuButtonKeytipProps","hasMenu","onItemClick","focusableElementIndex","totalItemCount","hasCheckmarks","contextualMenuItemAs","expandedMenuItemKey","anchorRel","rel","subMenuId","itemHasSubmenu","itemProps","KeytipData","keytipAttributes","href","onMouseEnter","onMouseLeave","onMouseMove","ChildrenRenderer","_btn","onItemMouseDown","defaultRole","buttonNativeProperties","itemButtonProperties","title","VerticalDivider","deprecatedGetClassNames","Error","names","_executeItemClick","_splitButton","_onItemMouseEnterPrimary","_onItemMouseEnterIcon","_onItemMouseMovePrimary","_onItemMouseMoveIcon","_onIconItemClick","executeItemClick","_processingTouch","_onTouchStart","_handleTouchAndPointerEvent","stopImmediatePropagation","_events","splitButton","ariaDescription","onTouchStart","_renderSplitPrimaryButton","_renderSplitDivider","_renderSplitIconButton","itemComponentProps","getDividerClassNames","buttonProps","onTap","_lastTouchTimeoutId","getContextualMenuItemClassNames","getSubmenuItems","LocalContextualMenu","_getMenuItemStylesFunction","_mounted","_onRenderMenuList","menuListProps","defaultRender","indexCorrection","list","onKeyUp","_onKeyUp","menuItem","_renderMenuItem","itemType","Divider","Header","indexIncrease","customOnRenderListLength","itemClassNames","renderedItems","getItemClassNames","subMenuIconClassName","itemStyleProps","_renderSeparator","headerItem","_renderHeaderMenuItem","_renderListItem","Section","_renderSectionItem","_renderNormalItem","_lastKeyDownWasAltOrMeta","_isAltOrMeta","dismissAllMenus","_keyHandler","_shouldHandleKeyDown","_shouldCloseSubMenu","metaKey","_onMenuFocusCapture","delayUpdateFocusOnHover","_shouldUpdateFocusOnMouseEvent","_shouldHandleKeyUp","keyPressIsAltOrMetaAlone","shouldHandleKey","handled","_isFocusingPreviousElement","submenuCloseKey","isSubMenu","_adjustedFocusZoneProps","_onMenuKeyDown","_host","hasModifier","isUp","isDown","_onScroll","_isScrollIdle","_scrollIdleTimeoutId","_onItemMouseEnterBase","_shouldIgnoreMouseEvent","_updateFocusOnMouseEvent","_onItemMouseMoveBase","_gotMouseMove","_enterTimerId","_onMouseItemLeave","setActive","_onItemMouseDown","_onItemClickBase","_cancelSubMenuTimer","expandedByMouseClick","nativeEvent","detail","_onItemSubMenuExpand","_onAnchorClick","defaultPrevented","openKey","_onSubMenuDismiss","dismissedMenuItemKey","_onPointerAndTouchEvent","getMenuClassNames","contextualMenuItems","_isHidden","_onMenuClosed","_onMenuOpened","_previousActiveElement","_tryFocusPreviousActiveElement","onMenuDismissed","labelElementId","useTargetWidth","useTargetAsMinWidth","shouldFocusOnContainer","calloutProps","onRenderSubMenu","onRenderMenuList","focusZoneProps","itemsHaveIcons","sectionProps","_getFocusZoneDirection","contextMenuStyle","some","submenuItem","canAnyMenuItemsCheck","submenuProps","_getSubmenuProps","responsiveMode","targetAsHtmlElement","targetWidth","calloutStyles","Callout","onFocusCapture","FocusZone","defaultMenuItemRenderer","_onRenderSubMenu","onMenuOpened","off","sectionItem","menuClassNames","groupProps","replace","headerContextualMenuItem","topDivider","contextualMenuItem","itemsIndex","bottomDivider","fromSection","onRender","_renderAnchorMenuItem","_renderSplitButton","_renderButtonItem","divHtmlProperties","header","subMenuHoverDelay","timeoutDuration","_findItemByKey","_findItemByKeyFromItems","ContextualMenuBase","withResponsiveMode","isopen","ContextualMenu","listStyleType","paddingRight","paddingBottom","paddingTop","ButtonGlobalClassNames","msButton","msButtonHasMenu","msButtonIcon","msButtonMenuIcon","msButtonLabel","msButtonDescription","msButtonScreenReaderText","msButtonFlexContainer","msButtonTextContainer","getBaseButtonClassNames","menuIconClassName","isSplit","iconExpandedHovered","menuIconExpandedHovered","rootExpandedHovered","rootHasMenu","labelHovered","iconHovered","descriptionHovered","menuIconHovered","iconPressed","descriptionPressed","menuIconPressed","rootCheckedDisabled","rootCheckedPressed","iconExpanded","iconChecked","labelChecked","labelDisabled","menuIconChecked","menuIconExpanded","descriptionChecked","descriptionDisabled","_buttonElement","_splitButtonContainer","_renderedVisibleMenu","_onRenderIcon","_onRenderTextContents","onRenderText","_onRenderText","_onRenderDescription","_hasText","_labelId","_onRenderChildren","_descriptionId","_onRenderAriaDescription","_ariaDescriptionId","_onRenderMenuIcon","menuIconProps","_onRenderMenu","menuProps","persistMenu","menuHidden","MenuType","menuAs","_menuShouldFocusOnContainer","_menuShouldFocusOnMount","_isSplitButton","_onDismissMenu","_dismissMenu","_openMenu","_onToggleMenu","_onSplitContainerFocusCapture","_onSplitButtonPrimaryClick","_onMenuClick","_onKeyPress","onKeyPress","_onMouseUp","_onClick","_onSplitButtonContainerKeyDown","click","_isValidMenuOpenKey","onMenuClick","toggled","ariaHidden","allowDisabledFocus","toggle","isPrimaryButtonDisabled","renderAsAnchor","tag","resolvedAriaLabel","dataIsFocusable","isCheckboxTypeRole","checkedOrPressedValue","_onRenderSplitButtonContent","_onRenderContent","onPointerUp","onAfterMenuDismiss","openMenu","onRenderAriaDescription","onRenderChildren","onRenderMenu","onRenderMenuIcon","Button","_shouldRenderMenu","Content","renderPersistedMenuHiddenOnMount","getSplitButtonClassNames","primaryActionButtonProps","onPointerDown","SplitButton","_onRenderSplitButtonMenuButton","_onRenderSplitButtonDivider","splitButtonMenuProps","splitButtonAriaLabel","splitButtonProps","menuTriggerKeyCode","baseClassName","_vendorSettings","kebabRules","rulePairs","autoPrefixNames","prefixRules","vendorSettings","nav","isWebkit","isMoz","isOpera","isMs","getVendorSettings","NON_PIXEL_NUMBER_PROPS","provideUnits","unit","LEFT","RIGHT","NAME_REPLACEMENTS","VALUE_REPLACEMENTS","rtlifyRules","parts","flipQuad","partIndex","numberVal","negateNum","getDisplayName","rootStyle","globalSelectorRegExp","expandCommaSeparatedGlobals","selectorWithGlobals","replacementInfo","findGlobal","reverse","selector","matchIndex","matchEndIndex","replacement","expandSelector","newSelector","currentSelector","extractRules","__order","currentRules","expandedRules","separatedSelector","expandQuads","getKeyForRules","serialized","hasProps","rulesForSelector","serializeRuleEntries","ruleEntries","allEntries","styleToRegistration","rulesToInsert","applyRegistration","processedRule","styleToClassName","NO_CUSTOMIZATIONS","_allSettings","_raiseChange","applyScopedSettings","properties","localSettings","localScopedSettings","globalScopedSettings","property","applyBatchedUpdates","suppressUpdate","_suppressUpdates","onChange","prefix","resetIds","counter","MS_ICON","imageContainer","_eventRecords","eventArgs","bubbleEvent","_isElement","evObj","fireEvent","__events__","eventRecords","eventRecordList","listIndex","record","objectCallback","isObserved","isDeclared","declaredEvents","__declaredEvents","cancelBubble","HTMLElement","onAll","useCapture","eventRecord","processElementEvent","elementCallback","attachEvent","targetArrayLookup","targetArray","detachEvent","declare","ResponsiveMode","_defaultMode","_lastMode","RESPONSIVE_MAX_CONSTRAINT","_onResize","getResponsiveMode","unknown"],"mappings":"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IlT,IAGxCD,EAAQkZ,KAAK,O,iCChCtB,6RAuHaghB,EAzBwB,CACnC,YACA,WACA,YACA,kBACA,MACA,YACA,SACA,UACA,KACA,OACA,OACA,QACA,WACA,QACA,YACA,aACA,QAQyD74B,OAhH1B,CAC/B,SACA,QACA,UACA,mBACA,qBACA,sBACA,UACA,iBACA,SACA,gBACA,WACA,UACA,WACA,SACA,UACA,YACA,mBACA,aACA,UACA,UACA,YACA,mBACA,mBACA,YACA,cACA,UACA,eACA,mBACA,cACA,UACA,SACA,YACA,aACA,eACA,WACA,YACA,YACA,YACA,eACA,iBACA,YACA,UACA,iBACA,gBACA,gBACA,SACA,YACA,cACA,aACA,cACA,aACA,cACA,SACA,cACA,qBACA,eACA,eACA,cACA,aACA,cACA,YACA,mBACA,WACA,gBACA,aACA,cACA,eACA,WACA,UACA,kBACA,gBACA,iBACA,iBACA,gBACA,eACA,gBACA,cACA,sBACA,yBA0FW84B,GAlDkBD,EAAsB74B,OAAO,CAC1D,SAQ6B64B,EAAsB74B,OAAO,CAC1D,SACA,OACA,QACA,UACA,MACA,UAQ6CA,OAAO,CACpD,WAQ0B64B,EAAsB74B,OAAO,CACvD,UAQ0B64B,EAAsB74B,OAAO,CACvD,UAQ8B64B,EAAsB74B,OAAO,CAC3D,WACA,OACA,WACA,QACA,MACA,SACA,UAQW+4B,EAAmBF,EAAsB74B,OAAO,CAC3D,YACA,WACA,OACA,aACA,cACA,aACA,iBACA,aACA,OACA,UAQWg5B,EAAkBD,EAAiB/4B,OAAO,CACrD,SACA,MACA,eACA,UACA,UACA,OACA,SACA,YACA,OACA,MACA,YACA,MACA,WACA,UACA,cACA,WACA,WACA,MACA,OACA,OACA,OACA,QACA,UAQWi5B,EAAqBF,EAAiB/4B,OAAO,CACxD,OACA,UACA,OACA,YACA,cACA,WACA,WACA,OACA,SA0GWk5B,GAlGmBH,EAAiB/4B,OAAO,CACtD,OACA,WACA,aAG8B64B,EAAsB74B,OAAO,CAC3D,WACA,UAQ6B64B,EAAsB74B,O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","file":"static/js/0.b4d35c4e.chunk.js","sourcesContent":["import { getVirtualParent } from './getVirtualParent';\n/**\n * Gets the element which is the parent of a given element.\n * If `allowVirtuaParents` is `true`, this method prefers the virtual parent over\n * real DOM parent when present.\n *\n * @public\n */\nexport function getParent(child: HTMLElement, allowVirtualParents: boolean = true): HTMLElement | null {\n  return (\n    child &&\n    ((allowVirtualParents && getVirtualParent(child)) || (child.parentNode && (child.parentNode as HTMLElement)))\n  );\n}\n","import { isVirtualElement } from './isVirtualElement';\n/**\n * Gets the virtual parent given the child element, if it exists.\n *\n * @public\n */\nexport function getVirtualParent(child: HTMLElement): HTMLElement | undefined {\n  let parent: HTMLElement | undefined;\n  if (child && isVirtualElement(child)) {\n    parent = child._virtual.parent;\n  }\n  return parent;\n}\n","import { IVirtualElement } from './IVirtualElement';\n/**\n * Determines whether or not an element has the virtual hierarchy extension.\n *\n * @public\n */\nexport function isVirtualElement(element: HTMLElement | IVirtualElement): element is IVirtualElement {\n  return element && !!(<IVirtualElement>element)._virtual;\n}\n","// tslint:disable:no-any\n\n/**\n * Returns a single function which will call each of the given functions in the context of the\n * parent.\n */\nexport function appendFunction(parent: any, ...functions: any[]): () => void {\n  if (functions.length < 2) {\n    return functions[0] as () => void;\n  }\n\n  return (...args: any[]): void => {\n    functions.forEach((f: () => void) => f && f.apply(parent, args));\n  };\n}\n","import * as React from 'react';\nimport { appendFunction } from './appendFunction';\n\n/**\n * Extends a component's lifetime methods by appending new functions to the existing lifetime functions.\n */\nexport function extendComponent<T extends React.Component>(parent: T, methods: { [key in keyof T]?: T[key] }): void {\n  for (let name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      // tslint:disable-next-line:no-any\n      parent[name] = appendFunction(parent, parent[name], methods[name]) as any;\n    }\n  }\n}\n","export let _isSSR = false;\n\n/**\n * Helper to set ssr mode to simulate no window object returned from getWindow helper.\n *\n * @public\n */\nexport function setSSR(isEnabled: boolean): void {\n  _isSSR = isEnabled;\n}\n","import { IStyleSet, IConcatenatedStyleSet } from './IStyleSet';\nimport { IStyleBase, IStyle } from './IStyle';\nimport { IStyleFunctionOrObject } from './IStyleFunction';\n\n/**\n * Combine a set of styles together (but does not register css classes).\n * @param styleSet - The first style set to be concatenated.\n */\nexport function concatStyleSets<TStyleSet extends IStyleSet<TStyleSet>>(\n  styleSet: TStyleSet | false | null | undefined,\n): IConcatenatedStyleSet<TStyleSet>;\n\n/**\n * Combine a set of styles together (but does not register css classes).\n * @param styleSet1 - The first style set to be concatenated.\n * @param styleSet2 - The second style set to be concatenated.\n */\nexport function concatStyleSets<TStyleSet1 extends IStyleSet<TStyleSet1>, TStyleSet2 extends IStyleSet<TStyleSet2>>(\n  styleSet1: TStyleSet1 | false | null | undefined,\n  styleSet2: TStyleSet2 | false | null | undefined,\n): IConcatenatedStyleSet<TStyleSet1 & TStyleSet2>;\n\n/**\n * Combine a set of styles together (but does not register css classes).\n * @param styleSet1 - The first style set to be concatenated.\n * @param styleSet2 - The second style set to be concatenated.\n * @param styleSet3 - The third style set to be concatenated.\n */\nexport function concatStyleSets<\n  TStyleSet1 extends IStyleSet<TStyleSet1>,\n  TStyleSet2 extends IStyleSet<TStyleSet2>,\n  TStyleSet3 extends IStyleSet<TStyleSet3>\n>(\n  styleSet1: TStyleSet1 | false | null | undefined,\n  styleSet2: TStyleSet2 | false | null | undefined,\n  styleSet3: TStyleSet3 | false | null | undefined,\n): IConcatenatedStyleSet<TStyleSet1 & TStyleSet2 & TStyleSet3>;\n\n/**\n * Combine a set of styles together (but does not register css classes).\n * @param styleSet1 - The first style set to be concatenated.\n * @param styleSet2 - The second style set to be concatenated.\n * @param styleSet3 - The third style set to be concatenated.\n * @param styleSet4 - The fourth style set to be concatenated.\n */\nexport function concatStyleSets<\n  TStyleSet1 extends IStyleSet<TStyleSet1>,\n  TStyleSet2 extends IStyleSet<TStyleSet2>,\n  TStyleSet3 extends IStyleSet<TStyleSet3>,\n  TStyleSet4 extends IStyleSet<TStyleSet4>\n>(\n  styleSet1: TStyleSet1 | false | null | undefined,\n  styleSet2: TStyleSet2 | false | null | undefined,\n  styleSet3: TStyleSet3 | false | null | undefined,\n  styleSet4: TStyleSet3 | false | null | undefined,\n): IConcatenatedStyleSet<TStyleSet1 & TStyleSet2 & TStyleSet3 & TStyleSet4>;\n\n/**\n * Combine a set of styles together (but does not register css classes).\n * @param styleSet1 - The first style set to be concatenated.\n * @param styleSet2 - The second style set to be concatenated.\n * @param styleSet3 - The third style set to be concatenated.\n * @param styleSet4 - The fourth style set to be concatenated.\n */\nexport function concatStyleSets<\n  TStyleSet1 extends IStyleSet<TStyleSet1>,\n  TStyleSet2 extends IStyleSet<TStyleSet2>,\n  TStyleSet3 extends IStyleSet<TStyleSet3>,\n  TStyleSet4 extends IStyleSet<TStyleSet4>\n>(\n  styleSet1: TStyleSet1 | false | null | undefined,\n  styleSet2: TStyleSet2 | false | null | undefined,\n  styleSet3: TStyleSet3 | false | null | undefined,\n  styleSet4: TStyleSet4 | false | null | undefined,\n): IConcatenatedStyleSet<TStyleSet1 & TStyleSet2 & TStyleSet3 & TStyleSet4>;\n\n/**\n * Combine a set of styles together (but does not register css classes).\n * @param styleSet1 - The first style set to be concatenated.\n * @param styleSet2 - The second style set to be concatenated.\n * @param styleSet3 - The third style set to be concatenated.\n * @param styleSet4 - The fourth style set to be concatenated.\n * @param styleSet5 - The fifth set to be concatenated.\n */\nexport function concatStyleSets<\n  TStyleSet1 extends IStyleSet<TStyleSet1>,\n  TStyleSet2 extends IStyleSet<TStyleSet2>,\n  TStyleSet3 extends IStyleSet<TStyleSet3>,\n  TStyleSet4 extends IStyleSet<TStyleSet4>,\n  TStyleSet5 extends IStyleSet<TStyleSet5>\n>(\n  styleSet1: TStyleSet1 | false | null | undefined,\n  styleSet2: TStyleSet2 | false | null | undefined,\n  styleSet3: TStyleSet3 | false | null | undefined,\n  styleSet4: TStyleSet4 | false | null | undefined,\n  styleSet5: TStyleSet5 | false | null | undefined,\n): IConcatenatedStyleSet<TStyleSet1 & TStyleSet2 & TStyleSet3 & TStyleSet4 & TStyleSet5>;\n\n/**\n * Combine a set of styles together (but does not register css classes).\n * @param styleSet1 - The first style set to be concatenated.\n * @param styleSet2 - The second style set to be concatenated.\n * @param styleSet3 - The third style set to be concatenated.\n * @param styleSet4 - The fourth style set to be concatenated.\n * @param styleSet5 - The fifth set to be concatenated.\n * @param styleSet6 - The sixth set to be concatenated.\n */\nexport function concatStyleSets<\n  TStyleSet1 extends IStyleSet<TStyleSet1>,\n  TStyleSet2 extends IStyleSet<TStyleSet2>,\n  TStyleSet3 extends IStyleSet<TStyleSet3>,\n  TStyleSet4 extends IStyleSet<TStyleSet4>,\n  TStyleSet5 extends IStyleSet<TStyleSet5>,\n  TStyleSet6 extends IStyleSet<TStyleSet6>\n>(\n  styleSet1: TStyleSet1 | false | null | undefined,\n  styleSet2: TStyleSet2 | false | null | undefined,\n  styleSet3: TStyleSet3 | false | null | undefined,\n  styleSet4: TStyleSet4 | false | null | undefined,\n  styleSet5: TStyleSet5 | false | null | undefined,\n  styleSet6: TStyleSet6 | false | null | undefined,\n): IConcatenatedStyleSet<TStyleSet1 & TStyleSet2 & TStyleSet3 & TStyleSet4 & TStyleSet5 & TStyleSet6>;\n\n/**\n * Combine a set of styles together (but does not register css classes).\n * @param styleSets - One or more stylesets to be merged (each param can also be falsy).\n */\nexport function concatStyleSets(\n  ...styleSets: (IStyleSet<any> | false | null | undefined)[]\n): IConcatenatedStyleSet<any>;\n\n/**\n * Combine a set of styles together (but does not register css classes).\n * @param styleSets - One or more stylesets to be merged (each param can also be falsy).\n */\nexport function concatStyleSets(\n  ...styleSets: (IStyleSet<any> | false | null | undefined)[]\n): IConcatenatedStyleSet<any> {\n  if (styleSets && styleSets.length === 1 && styleSets[0] && !(styleSets[0] as IStyleSet<any>).subComponentStyles) {\n    return styleSets[0] as IConcatenatedStyleSet<any>;\n  }\n\n  const mergedSet: IConcatenatedStyleSet<any> = {};\n\n  // We process sub component styles in two phases. First we collect them, then we combine them into 1 style function.\n  const workingSubcomponentStyles: { [key: string]: Array<IStyleFunctionOrObject<any, any>> } = {};\n\n  for (const currentSet of styleSets) {\n    if (currentSet) {\n      for (const prop in currentSet) {\n        if (currentSet.hasOwnProperty(prop)) {\n          if (prop === 'subComponentStyles' && currentSet.subComponentStyles !== undefined) {\n            // subcomponent styles - style functions or objects\n\n            const currentComponentStyles = currentSet.subComponentStyles;\n            for (const subCompProp in currentComponentStyles) {\n              if (currentComponentStyles.hasOwnProperty(subCompProp)) {\n                if (workingSubcomponentStyles.hasOwnProperty(subCompProp)) {\n                  workingSubcomponentStyles[subCompProp].push(currentComponentStyles[subCompProp]);\n                } else {\n                  workingSubcomponentStyles[subCompProp] = [currentComponentStyles[subCompProp]];\n                }\n              }\n            }\n\n            continue;\n          }\n\n          // the as any casts below is a workaround for ts 2.8.\n          // todo: remove cast to any in ts 2.9.\n          const mergedValue: IStyle = (mergedSet as any)[prop];\n          const currentValue = (currentSet as any)[prop];\n\n          if (mergedValue === undefined) {\n            (mergedSet as any)[prop] = currentValue;\n          } else {\n            (mergedSet as any)[prop] = [\n              // https://github.com/Microsoft/TypeScript/issues/25474\n              ...(Array.isArray(mergedValue) ? mergedValue : [mergedValue as IStyleBase]),\n              ...(Array.isArray(currentValue) ? currentValue : [currentValue as IStyleBase]),\n            ];\n          }\n        }\n      }\n    }\n  }\n\n  if (Object.keys(workingSubcomponentStyles).length > 0) {\n    mergedSet.subComponentStyles = {};\n    const mergedSubStyles = mergedSet.subComponentStyles;\n\n    // now we process the subcomponent styles if there are any\n    for (const subCompProp in workingSubcomponentStyles) {\n      if (workingSubcomponentStyles.hasOwnProperty(subCompProp)) {\n        const workingSet = workingSubcomponentStyles[subCompProp];\n        mergedSubStyles[subCompProp] = (styleProps: any) => {\n          return concatStyleSets(\n            ...workingSet.map((styleFunctionOrObject: IStyleFunctionOrObject<any, any>) =>\n              typeof styleFunctionOrObject === 'function' ? styleFunctionOrObject(styleProps) : styleFunctionOrObject,\n            ),\n          );\n        };\n      }\n    }\n  }\n\n  return mergedSet;\n}\n","/**\n * Simulated enum for keycodes. These will get inlined by uglify when used much like an enum\n *\n * @public\n * {@docCategory KeyCodes}\n */\nexport const KeyCodes = {\n  backspace: 8 as 8,\n  tab: 9 as 9,\n  enter: 13 as 13,\n  shift: 16 as 16,\n  ctrl: 17 as 17,\n  alt: 18 as 18,\n  pauseBreak: 19 as 19,\n  capslock: 20 as 20,\n  escape: 27 as 27,\n  space: 32 as 32,\n  pageUp: 33 as 33,\n  pageDown: 34 as 34,\n  end: 35 as 35,\n  home: 36 as 36,\n  left: 37 as 37,\n  up: 38 as 38,\n  right: 39 as 39,\n  down: 40 as 40,\n  insert: 45 as 45,\n  del: 46 as 46,\n  zero: 48 as 48,\n  one: 49 as 49,\n  two: 50 as 50,\n  three: 51 as 51,\n  four: 52 as 52,\n  five: 53 as 53,\n  six: 54 as 54,\n  seven: 55 as 55,\n  eight: 56 as 56,\n  nine: 57 as 57,\n  a: 65 as 65,\n  b: 66 as 66,\n  c: 67 as 67,\n  d: 68 as 68,\n  e: 69 as 69,\n  f: 70 as 70,\n  g: 71 as 71,\n  h: 72 as 72,\n  i: 73 as 73,\n  j: 74 as 74,\n  k: 75 as 75,\n  l: 76 as 76,\n  m: 77 as 77,\n  n: 78 as 78,\n  o: 79 as 79,\n  p: 80 as 80,\n  q: 81 as 81,\n  r: 82 as 82,\n  s: 83 as 83,\n  t: 84 as 84,\n  u: 85 as 85,\n  v: 86 as 86,\n  w: 87 as 87,\n  x: 88 as 88,\n  y: 89 as 89,\n  z: 90 as 90,\n  leftWindow: 91 as 91,\n  rightWindow: 92 as 92,\n  select: 93 as 93,\n  zero_numpad: 96 as 96,\n  one_numpad: 97 as 97,\n  two_numpad: 98 as 98,\n  three_numpad: 99 as 99,\n  four_numpad: 100 as 100,\n  five_numpad: 101 as 101,\n  six_numpad: 102 as 102,\n  seven_numpad: 103 as 103,\n  eight_numpad: 104 as 104,\n  nine_numpad: 105 as 105,\n  multiply: 106 as 106,\n  add: 107 as 107,\n  subtract: 109 as 109,\n  decimalPoint: 110 as 110,\n  divide: 111 as 111,\n  f1: 112 as 112,\n  f2: 113 as 113,\n  f3: 114 as 114,\n  f4: 115 as 115,\n  f5: 116 as 116,\n  f6: 117 as 117,\n  f7: 118 as 118,\n  f8: 119 as 119,\n  f9: 120 as 120,\n  f10: 121 as 121,\n  f11: 122 as 122,\n  f12: 123 as 123,\n  numlock: 144 as 144,\n  scrollLock: 145 as 145,\n  semicolon: 186 as 186,\n  equalSign: 187 as 187,\n  comma: 188 as 188,\n  dash: 189 as 189,\n  period: 190 as 190,\n  forwardSlash: 191 as 191,\n  graveAccent: 192 as 192,\n  openBracket: 219 as 219,\n  backSlash: 220 as 220,\n  closeBracket: 221 as 221,\n  singleQuote: 222 as 222,\n};\nexport type KeyCodes = number;\n","import { IStyle, IStyleBaseArray } from './IStyle';\nimport { Stylesheet } from './Stylesheet';\n\n/**\n * Separates the classes and style objects. Any classes that are pre-registered\n * args are auto expanded into objects.\n */\nexport function extractStyleParts(\n  ...args: (IStyle | IStyle[] | false | null | undefined)[]\n): { classes: string[]; objects: IStyleBaseArray } {\n  const classes: string[] = [];\n  const objects: {}[] = [];\n  const stylesheet = Stylesheet.getInstance();\n\n  function _processArgs(argsList: (IStyle | IStyle[])[]): void {\n    for (const arg of argsList) {\n      if (arg) {\n        if (typeof arg === 'string') {\n          if (arg.indexOf(' ') >= 0) {\n            _processArgs(arg.split(' '));\n          } else {\n            const translatedArgs = stylesheet.argsFromClassName(arg);\n\n            if (translatedArgs) {\n              _processArgs(translatedArgs);\n            } else {\n              // Avoid adding the same class twice.\n              if (classes.indexOf(arg) === -1) {\n                classes.push(arg);\n              }\n            }\n          }\n        } else if (Array.isArray(arg)) {\n          _processArgs(arg);\n        } else if (typeof arg === 'object') {\n          objects.push(arg);\n        }\n      }\n    }\n  }\n\n  _processArgs(args);\n\n  return {\n    classes,\n    objects,\n  };\n}\n","import * as React from 'react';\nimport { IStyle, ITheme } from '../../Styling';\nimport { IStyleFunctionOrObject } from '../../Utilities';\n\n/**\n * {@docCategory Image}\n */\nexport interface IImage {}\n\n/**\n * {@docCategory Image}\n */\nexport interface IImageProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  /**\n   * Call to provide customized styling that will layer on top of the variant rules\n   */\n  styles?: IStyleFunctionOrObject<IImageStyleProps, IImageStyles>;\n\n  /**\n   * Theme provided by HOC.\n   */\n  theme?: ITheme;\n\n  /**\n   * Additional css class to apply to the Component\n   * @defaultvalue undefined\n   */\n  className?: string;\n\n  /**\n   * If true, fades the image in when loaded.\n   * @defaultvalue true\n   */\n  shouldFadeIn?: boolean;\n\n  /**\n   * If true, the image starts as visible and is hidden on error. Otherwise, the image is hidden until\n   * it is successfully loaded. This disables shouldFadeIn.\n   * @defaultvalue false;\n   */\n  shouldStartVisible?: boolean;\n\n  /**\n   * Used to determine how the image is scaled and cropped to fit the frame.\n   *\n   * @defaultvalue If both dimensions are provided, then the image is fit using ImageFit.scale.\n   * Otherwise, the image won't be scaled or cropped.\n   */\n  imageFit?: ImageFit;\n\n  /**\n   * Deprecated at v1.3.6, to replace the src in case of errors, use `onLoadingStateChange` instead and\n   * rerender the Image with a difference src.\n   * @deprecated Use `onLoadingStateChange` instead and\n   * rerender the Image with a difference src.\n   */\n  errorSrc?: string;\n\n  /**\n   * If true, the image frame will expand to fill its parent container.\n   */\n  maximizeFrame?: boolean;\n\n  /**\n   * Optional callback method for when the image load state has changed.\n   * The 'loadState' parameter indicates the current state of the Image.\n   */\n  onLoadingStateChange?: (loadState: ImageLoadState) => void;\n\n  /**\n   * Specifies the cover style to be used for this image. If not\n   * specified, this will be dynamically calculated based on the\n   * aspect ratio for the image.\n   */\n  coverStyle?: ImageCoverStyle;\n}\n\n/**\n * The possible methods that can be used to fit the image.\n * {@docCategory Image}\n */\nexport enum ImageFit {\n  /**\n   * The image is not scaled. The image is centered and cropped within the content box.\n   */\n  center = 0,\n\n  /**\n   * The image is scaled to maintain its aspect ratio while being fully contained within the frame. The image will\n   * be centered horizontally and vertically within the frame. The space in the top and bottom or in the sides of\n   * the frame will be empty depending on the difference in aspect ratio between the image and the frame.\n   */\n  contain = 1,\n\n  /**\n   * The image is scaled to maintain its aspect ratio while filling the frame. Portions of the image will be cropped\n   * from the top and bottom, or the sides, depending on the difference in aspect ratio between the image and the frame.\n   */\n  cover = 2,\n\n  /**\n   * Neither the image nor the frame are scaled. If their sizes do not match, the image will either be cropped or the\n   * frame will have empty space.\n   */\n  none = 3,\n\n  /**\n   * The image will be centered horizontally and vertically within the frame and maintains its aspect ratio. It will\n   * behave as ImageFit.center if the image's natural height or width is less than the Image frame's height or width,\n   * but if both natural height and width are larger than the frame it will behave as ImageFit.cover.\n   */\n  centerCover = 4,\n\n  /**\n   * The image will be centered horizontally and vertically within the frame and maintains its aspect ratio. It will\n   * behave as ImageFit.center if the image's natural height and width is less than the Image frame's height and width,\n   * but if either natural height or width are larger than the frame it will behave as ImageFit.contain.\n   */\n  centerContain = 5,\n}\n\n/**\n * The cover style to be used on the image\n * {@docCategory Image}\n */\nexport enum ImageCoverStyle {\n  /**\n   * The image will be shown at 100% height of container and the width will be scaled accordingly\n   */\n  landscape = 0,\n\n  /**\n   * The image will be shown at 100% width of container and the height will be scaled accordingly\n   */\n  portrait = 1,\n}\n\n/**\n * {@docCategory Image}\n */\nexport enum ImageLoadState {\n  /**\n   * The image has not yet been loaded, and there is no error yet.\n   */\n  notLoaded = 0,\n\n  /**\n   * The image has been loaded successfully.\n   */\n  loaded = 1,\n\n  /**\n   * An error has been encountered while loading the image.\n   */\n  error = 2,\n\n  /**\n   * Deprecated at v1.3.6, to replace the src in case of errors, use `onLoadingStateChange` instead\n   * and rerender the Image with a difference src.\n   * @deprecated Use `onLoadingStateChange` instead\n   * and rerender the Image with a difference src.\n   */\n  errorLoaded = 3,\n}\n\n/**\n * {@docCategory Image}\n */\nexport interface IImageStyleProps {\n  /**\n   * Accept theme prop.\n   */\n  theme: ITheme;\n\n  /**\n   * Accept custom classNames\n   */\n  className?: string;\n\n  /**\n   * If true, the image frame will expand to fill its parent container.\n   */\n  maximizeFrame?: boolean;\n\n  /**\n   * If true, the image is loaded\n   */\n  isLoaded?: boolean;\n\n  /**\n   * If true, fades the image in when loaded.\n   * @defaultvalue true\n   */\n  shouldFadeIn?: boolean;\n\n  /**\n   * If true, the image starts as visible and is hidden on error. Otherwise, the image is hidden until\n   * it is successfully loaded. This disables shouldFadeIn.\n   * @defaultvalue false;\n   */\n  shouldStartVisible?: boolean;\n\n  /**\n   * If true the image is coverStyle landscape instead of portrait\n   */\n  isLandscape?: boolean;\n\n  /**\n   * ImageFit booleans for center, cover, contain, centerContain, centerCover, none\n   */\n  isCenter?: boolean;\n  isContain?: boolean;\n  isCover?: boolean;\n  isCenterContain?: boolean;\n  isCenterCover?: boolean;\n  isNone?: boolean;\n\n  /**\n   * if true image load is in error\n   */\n  isError?: boolean;\n\n  /**\n   * if true, imageFit is undefined\n   */\n  isNotImageFit?: boolean;\n\n  /**\n   * Image width value\n   */\n  width?: number | string;\n\n  /**\n   * Image height value\n   */\n  height?: number | string;\n}\n\n/**\n * {@docCategory Image}\n */\nexport interface IImageStyles {\n  /**\n   * Style set for the root div element.\n   */\n  root: IStyle;\n  /**\n   * Style set for the img element.\n   */\n  image: IStyle;\n}\n","import { setVersion } from './setVersion';\nexport { setVersion };\n\nsetVersion('@uifabric/set-version', '6.0.0');\n","import { Stylesheet } from '@uifabric/merge-styles';\nimport { getId, resetIds } from './getId';\n\nexport { getId, resetIds };\n\n/**\n * Compares a to b and b to a.\n *\n * @public\n */\n// tslint:disable-next-line:no-any\nexport function shallowCompare<TA extends any, TB extends any>(a: TA, b: TB): boolean {\n  for (let propName in a) {\n    if (a.hasOwnProperty(propName)) {\n      if (!b.hasOwnProperty(propName) || b[propName] !== a[propName]) {\n        return false;\n      }\n    }\n  }\n  for (let propName in b) {\n    if (b.hasOwnProperty(propName)) {\n      if (!a.hasOwnProperty(propName)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * Makes a resulting merge of a bunch of objects. Pass in the target object followed by 1 or more\n * objects as arguments and they will be merged sequentially into the target. Note that this will\n * shallow merge; it will not create new cloned values for target members.\n *\n * @public\n * @param target - Target object to merge following object arguments into.\n * @param args - One or more objects that will be mixed into the target in the order they are provided.\n * @returns Resulting merged target.\n */\n// tslint:disable-next-line:no-any\nexport function assign(target: any, ...args: any[]): any {\n  return filteredAssign.apply(this, [null, target].concat(args));\n}\n\n/**\n * Makes a resulting merge of a bunch of objects, but allows a filter function to be passed in to filter\n * the resulting merges. This allows for scenarios where you want to merge \"everything except that one thing\"\n * or \"properties that start with data-\". Note that this will shallow merge; it will not create new cloned\n * values for target members.\n *\n * @public\n * @param isAllowed - Callback to determine if the given propName is allowed in the result.\n * @param target - Target object to merge following object arguments into.\n * @param args - One or more objects that will be mixed into the target in the order they are provided.\n * @returns Resulting merged target.\n */\n// tslint:disable-next-line:no-any\nexport function filteredAssign(isAllowed: (propName: string) => boolean, target: any, ...args: any[]): any {\n  target = target || {};\n\n  for (let sourceObject of args) {\n    if (sourceObject) {\n      for (let propName in sourceObject) {\n        if (sourceObject.hasOwnProperty(propName) && (!isAllowed || isAllowed(propName))) {\n          target[propName] = sourceObject[propName];\n        }\n      }\n    }\n  }\n\n  return target;\n}\n\n// Configure ids to reset on stylesheet resets.\nconst stylesheet = Stylesheet.getInstance();\n\nif (stylesheet && stylesheet.onReset) {\n  stylesheet.onReset(resetIds);\n}\n\n/**\n * Takes an enum and iterates over each value of the enum (as a string), running the callback on each,\n * returning a mapped array.\n * @param theEnum - Enum to iterate over\n * @param callback - The first parameter the name of the entry, and the second parameter is the value\n * of that entry, which is the value you'd normally use when using the enum (usually a number).\n */\nexport function mapEnumByName<T>(\n  // tslint:disable-next-line:no-any\n  theEnum: any,\n  callback: (name?: string, value?: string | number) => T | undefined,\n): (T | undefined)[] | undefined {\n  // map<any> to satisfy compiler since it doesn't realize we strip out undefineds in the .filter() call\n  return Object.keys(theEnum)\n    .map<T | undefined>((p: string | number) => {\n      // map on each property name as a string\n      if (String(Number(p)) !== p) {\n        // if the property is not just a number (because enums in TypeScript will map both ways)\n        return callback(p as string, theEnum[p]);\n      }\n      return undefined;\n    })\n    .filter((v: T | undefined) => !!v); // only return elements with values\n}\n\n/**\n * Get all values in an object dictionary\n *\n * @param obj - The dictionary to get values for\n */\n// tslint:disable-next-line:no-any\nexport function values<T>(obj: any): T[] {\n  return Object.keys(obj).reduce((arr: T[], key: string): T[] => {\n    arr.push(obj[key]);\n    return arr;\n  }, []);\n}\n","import { getParent } from './getParent';\n/**\n * Finds the first parent element where the matchFunction returns true\n * @param element - element to start searching at\n * @param matchFunction - the function that determines if the element is a match\n * @returns the matched element or null no match was found\n */\nexport function findElementRecursive(\n  element: HTMLElement | null,\n  matchFunction: (element: HTMLElement) => boolean,\n): HTMLElement | null {\n  if (!element || element === document.body) {\n    return null;\n  }\n  return matchFunction(element) ? element : findElementRecursive(getParent(element), matchFunction);\n}\n","import { IButtonStyles } from '../Button.types';\nimport { HighContrastSelector, ITheme, concatStyleSets, getFocusStyle, IStyle } from '../../../Styling';\nimport { memoizeFunction } from '../../../Utilities';\n\nexport const getStyles = memoizeFunction(\n  (theme: ITheme, customStyles?: IButtonStyles): IButtonStyles => {\n    const { effects, palette, semanticColors } = theme;\n\n    const buttonHighContrastFocus = {\n      left: -2,\n      top: -2,\n      bottom: -2,\n      right: -2,\n      border: 'none',\n    };\n\n    const splitButtonDividerBaseStyles: IStyle = {\n      position: 'absolute',\n      width: 1,\n      right: 31,\n      top: 8,\n      bottom: 8,\n    };\n\n    const splitButtonStyles: IButtonStyles = {\n      splitButtonContainer: [\n        getFocusStyle(theme, { highContrastStyle: buttonHighContrastFocus, inset: 2 }),\n        {\n          display: 'inline-flex',\n          selectors: {\n            '.ms-Button--default': {\n              borderTopRightRadius: '0',\n              borderBottomRightRadius: '0',\n              borderRight: 'none',\n            },\n            '.ms-Button--primary': {\n              borderTopRightRadius: '0',\n              borderBottomRightRadius: '0',\n              border: 'none',\n\n              selectors: {\n                [HighContrastSelector]: {\n                  color: 'Window',\n                  backgroundColor: 'WindowText',\n                  MsHighContrastAdjust: 'none',\n                },\n              },\n            },\n            '.ms-Button--primary + .ms-Button': {\n              border: 'none',\n            },\n          },\n        },\n      ],\n      splitButtonContainerHovered: {\n        selectors: {\n          '.ms-Button--primary': {\n            selectors: {\n              [HighContrastSelector]: {\n                color: 'Window',\n                backgroundColor: 'Highlight',\n              },\n            },\n          },\n          '.ms-Button.is-disabled': {\n            color: semanticColors.buttonTextDisabled,\n            selectors: {\n              [HighContrastSelector]: {\n                color: 'GrayText',\n                borderColor: 'GrayText',\n                backgroundColor: 'Window',\n              },\n            },\n          },\n        },\n      },\n      splitButtonContainerChecked: {\n        selectors: {\n          '.ms-Button--primary': {\n            selectors: {\n              [HighContrastSelector]: {\n                color: 'Window',\n                backgroundColor: 'WindowText',\n                MsHighContrastAdjust: 'none',\n              },\n            },\n          },\n        },\n      },\n      splitButtonContainerCheckedHovered: {\n        selectors: {\n          '.ms-Button--primary': {\n            selectors: {\n              [HighContrastSelector]: {\n                color: 'Window',\n                backgroundColor: 'WindowText',\n                MsHighContrastAdjust: 'none',\n              },\n            },\n          },\n        },\n      },\n      splitButtonContainerFocused: {\n        outline: 'none!important',\n      },\n      splitButtonMenuButton: {\n        padding: 6,\n        height: 'auto',\n        boxSizing: 'border-box',\n        borderRadius: 0,\n        borderTopRightRadius: effects.roundedCorner2,\n        borderBottomRightRadius: effects.roundedCorner2,\n        border: `1px solid ${palette.neutralSecondaryAlt}`,\n        borderLeft: 'none',\n        outline: 'transparent',\n        userSelect: 'none',\n        display: 'inline-block',\n        textDecoration: 'none',\n        textAlign: 'center',\n        cursor: 'pointer',\n        verticalAlign: 'top',\n        width: 32,\n        marginLeft: -1,\n        marginTop: 0,\n        marginRight: 0,\n        marginBottom: 0,\n      },\n      splitButtonDivider: {\n        ...splitButtonDividerBaseStyles,\n        selectors: {\n          [HighContrastSelector]: {\n            backgroundColor: 'WindowText',\n          },\n        },\n      },\n      splitButtonDividerDisabled: {\n        ...splitButtonDividerBaseStyles,\n        selectors: {\n          [HighContrastSelector]: {\n            backgroundColor: 'GrayText',\n          },\n        },\n      },\n      splitButtonMenuButtonDisabled: {\n        pointerEvents: 'none',\n        border: 'none',\n        selectors: {\n          ':hover': {\n            cursor: 'default',\n          },\n\n          '.ms-Button--primary': {\n            selectors: {\n              [HighContrastSelector]: {\n                color: 'GrayText',\n                borderColor: 'GrayText',\n                backgroundColor: 'Window',\n              },\n            },\n          },\n          [HighContrastSelector]: {\n            border: `1px solid GrayText`,\n            color: 'GrayText',\n            backgroundColor: 'Window',\n          },\n        },\n      },\n\n      splitButtonFlexContainer: {\n        display: 'flex',\n        height: '100%',\n        flexWrap: 'nowrap',\n        justifyContent: 'center',\n        alignItems: 'center',\n      },\n\n      splitButtonContainerDisabled: {\n        outline: 'none',\n        border: 'none',\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'GrayText',\n            borderColor: 'GrayText',\n            backgroundColor: 'Window',\n          },\n        },\n      },\n    };\n\n    return concatStyleSets(splitButtonStyles, customStyles)!;\n  },\n);\n","import * as React from 'react';\nimport { classNamesFunction, getNativeProps, imgProperties } from '../../Utilities';\nimport { IImageProps, IImageStyleProps, IImageStyles, ImageCoverStyle, ImageFit, ImageLoadState } from './Image.types';\n\nconst getClassNames = classNamesFunction<IImageStyleProps, IImageStyles>();\n\nexport interface IImageState {\n  loadState?: ImageLoadState;\n}\n\nconst KEY_PREFIX = 'fabricImage';\n\nexport class ImageBase extends React.Component<IImageProps, IImageState> {\n  public static defaultProps = {\n    shouldFadeIn: true,\n  };\n\n  private static _svgRegex = /\\.svg$/i;\n\n  // Make an initial assumption about the image layout until we can\n  // check the rendered element. The value here only takes effect when\n  // shouldStartVisible is true.\n  private _coverStyle: ImageCoverStyle = ImageCoverStyle.portrait;\n  private _imageElement = React.createRef<HTMLImageElement>();\n  private _frameElement = React.createRef<HTMLDivElement>();\n\n  constructor(props: IImageProps) {\n    super(props);\n\n    this.state = {\n      loadState: ImageLoadState.notLoaded,\n    };\n  }\n\n  // tslint:disable-next-line function-name\n  public UNSAFE_componentWillReceiveProps(nextProps: IImageProps): void {\n    if (nextProps.src !== this.props.src) {\n      this.setState({\n        loadState: ImageLoadState.notLoaded,\n      });\n    } else if (this.state.loadState === ImageLoadState.loaded) {\n      this._computeCoverStyle(nextProps);\n    }\n  }\n\n  public componentDidUpdate(prevProps: IImageProps, prevState: IImageState) {\n    this._checkImageLoaded();\n    if (this.props.onLoadingStateChange && prevState.loadState !== this.state.loadState) {\n      this.props.onLoadingStateChange(this.state.loadState!);\n    }\n  }\n\n  public render(): JSX.Element {\n    const imageProps = getNativeProps<React.ImgHTMLAttributes<HTMLImageElement>>(this.props, imgProperties, [\n      'width',\n      'height',\n    ]);\n    const {\n      src,\n      alt,\n      width,\n      height,\n      shouldFadeIn,\n      shouldStartVisible,\n      className,\n      imageFit,\n      role,\n      maximizeFrame,\n      styles,\n      theme,\n    } = this.props;\n    const { loadState } = this.state;\n    const coverStyle = this.props.coverStyle !== undefined ? this.props.coverStyle : this._coverStyle;\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      width,\n      height,\n      maximizeFrame,\n      shouldFadeIn,\n      shouldStartVisible,\n      isLoaded:\n        loadState === ImageLoadState.loaded ||\n        (loadState === ImageLoadState.notLoaded && this.props.shouldStartVisible),\n      isLandscape: coverStyle === ImageCoverStyle.landscape,\n      isCenter: imageFit === ImageFit.center,\n      isCenterContain: imageFit === ImageFit.centerContain,\n      isCenterCover: imageFit === ImageFit.centerCover,\n      isContain: imageFit === ImageFit.contain,\n      isCover: imageFit === ImageFit.cover,\n      isNone: imageFit === ImageFit.none,\n      isError: loadState === ImageLoadState.error,\n      isNotImageFit: imageFit === undefined,\n    });\n\n    // If image dimensions aren't specified, the natural size of the image is used.\n    return (\n      <div className={classNames.root} style={{ width: width, height: height }} ref={this._frameElement}>\n        <img\n          {...imageProps}\n          onLoad={this._onImageLoaded}\n          onError={this._onImageError}\n          key={KEY_PREFIX + this.props.src || ''}\n          className={classNames.image}\n          ref={this._imageElement}\n          src={src}\n          alt={alt}\n          role={role}\n        />\n      </div>\n    );\n  }\n\n  private _onImageLoaded = (ev: React.SyntheticEvent<HTMLImageElement>): void => {\n    const { src, onLoad } = this.props;\n    if (onLoad) {\n      onLoad(ev);\n    }\n\n    this._computeCoverStyle(this.props);\n\n    if (src) {\n      this.setState({\n        loadState: ImageLoadState.loaded,\n      });\n    }\n  };\n\n  private _checkImageLoaded(): void {\n    const { src } = this.props;\n    const { loadState } = this.state;\n\n    if (loadState === ImageLoadState.notLoaded) {\n      // testing if naturalWidth and naturalHeight are greater than zero is better than checking\n      // .complete, because .complete will also be set to true if the image breaks. However,\n      // for some browsers, SVG images do not have a naturalWidth or naturalHeight, so fall back\n      // to checking .complete for these images.\n      const isLoaded: boolean = this._imageElement.current\n        ? (src && this._imageElement.current.naturalWidth > 0 && this._imageElement.current.naturalHeight > 0) ||\n          (this._imageElement.current.complete && ImageBase._svgRegex.test(src!))\n        : false;\n\n      if (isLoaded) {\n        this._computeCoverStyle(this.props);\n        this.setState({\n          loadState: ImageLoadState.loaded,\n        });\n      }\n    }\n  }\n\n  private _computeCoverStyle(props: IImageProps): void {\n    const { imageFit, width, height } = props;\n\n    // Do not compute cover style if it was already specified in props\n    if (\n      (imageFit === ImageFit.cover ||\n        imageFit === ImageFit.contain ||\n        imageFit === ImageFit.centerContain ||\n        imageFit === ImageFit.centerCover) &&\n      this.props.coverStyle === undefined &&\n      this._imageElement.current &&\n      this._frameElement.current\n    ) {\n      // Determine the desired ratio using the width and height props.\n      // If those props aren't available, measure measure the frame.\n      let desiredRatio;\n      if (!!width && !!height && imageFit !== ImageFit.centerContain && imageFit !== ImageFit.centerCover) {\n        desiredRatio = (width as number) / (height as number);\n      } else {\n        desiredRatio = this._frameElement.current.clientWidth / this._frameElement.current.clientHeight;\n      }\n\n      // Examine the source image to determine its original ratio.\n      const naturalRatio = this._imageElement.current.naturalWidth / this._imageElement.current.naturalHeight;\n\n      // Should we crop from the top or the sides?\n      if (naturalRatio > desiredRatio) {\n        this._coverStyle = ImageCoverStyle.landscape;\n      } else {\n        this._coverStyle = ImageCoverStyle.portrait;\n      }\n    }\n  }\n\n  private _onImageError = (ev: React.SyntheticEvent<HTMLImageElement>): void => {\n    if (this.props.onError) {\n      this.props.onError(ev);\n    }\n    this.setState({\n      loadState: ImageLoadState.error,\n    });\n  };\n}\n","import { AnimationClassNames, getGlobalClassNames, IStyle } from '../../Styling';\nimport { IImageStyleProps, IImageStyles } from './Image.types';\nimport { getWindow } from '../../Utilities';\n\nconst GlobalClassNames = {\n  root: 'ms-Image',\n  rootMaximizeFrame: 'ms-Image--maximizeFrame',\n  image: 'ms-Image-image',\n  imageCenter: 'ms-Image-image--center',\n  imageContain: 'ms-Image-image--contain',\n  imageCover: 'ms-Image-image--cover',\n  imageCenterContain: 'ms-Image-image--centerContain',\n  imageCenterCover: 'ms-Image-image--centerCover',\n  imageNone: 'ms-Image-image--none',\n  imageLandscape: 'ms-Image-image--landscape',\n  imagePortrait: 'ms-Image-image--portrait',\n};\n\nexport const getStyles = (props: IImageStyleProps): IImageStyles => {\n  const {\n    className,\n    width,\n    height,\n    maximizeFrame,\n    isLoaded,\n    shouldFadeIn,\n    shouldStartVisible,\n    isLandscape,\n    isCenter,\n    isContain,\n    isCover,\n    isCenterContain,\n    isCenterCover,\n    isNone,\n    isError,\n    isNotImageFit,\n    theme,\n  } = props;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const ImageFitStyles: IStyle = {\n    position: 'absolute',\n    left: '50% /* @noflip */',\n    top: '50%',\n    transform: 'translate(-50%,-50%)', // @todo test RTL renders transform: translate(50%,-50%);\n  };\n\n  // Cut the mustard using msMaxTouchPoints to detect IE11 which does not support CSS object-fit\n  const window: Window | undefined = getWindow();\n  const supportsObjectFit: boolean = window !== undefined && window.navigator.msMaxTouchPoints === undefined;\n  const fallbackObjectFitStyles =\n    (isContain && isLandscape) || (isCover && !isLandscape)\n      ? { width: '100%', height: 'auto' }\n      : { width: 'auto', height: '100%' };\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      {\n        overflow: 'hidden',\n      },\n      maximizeFrame && [\n        classNames.rootMaximizeFrame,\n        {\n          height: '100%',\n          width: '100%',\n        },\n      ],\n      isLoaded && shouldFadeIn && !shouldStartVisible && AnimationClassNames.fadeIn400,\n      (isCenter || isContain || isCover || isCenterContain || isCenterCover) && {\n        position: 'relative',\n      },\n      className,\n    ],\n    image: [\n      classNames.image,\n      {\n        display: 'block',\n        opacity: 0,\n      },\n      isLoaded && [\n        'is-loaded',\n        {\n          opacity: 1,\n        },\n      ],\n      isCenter && [classNames.imageCenter, ImageFitStyles],\n      isContain && [\n        classNames.imageContain,\n        supportsObjectFit && {\n          width: '100%',\n          height: '100%',\n          objectFit: 'contain',\n        },\n        !supportsObjectFit && fallbackObjectFitStyles,\n        ImageFitStyles,\n      ],\n      isCover && [\n        classNames.imageCover,\n        supportsObjectFit && {\n          width: '100%',\n          height: '100%',\n          objectFit: 'cover',\n        },\n        !supportsObjectFit && fallbackObjectFitStyles,\n        ImageFitStyles,\n      ],\n      isCenterContain && [\n        classNames.imageCenterContain,\n        isLandscape && {\n          maxWidth: '100%',\n        },\n        !isLandscape && {\n          maxHeight: '100%',\n        },\n        ImageFitStyles,\n      ],\n      isCenterCover && [\n        classNames.imageCenterCover,\n        isLandscape && {\n          maxHeight: '100%',\n        },\n        !isLandscape && {\n          maxWidth: '100%',\n        },\n        ImageFitStyles,\n      ],\n      isNone && [\n        classNames.imageNone,\n        {\n          width: 'auto',\n          height: 'auto',\n        },\n      ],\n      isNotImageFit && [\n        !!width &&\n          !height && {\n            height: 'auto',\n            width: '100%',\n          },\n        !width &&\n          !!height && {\n            height: '100%',\n            width: 'auto',\n          },\n        !!width &&\n          !!height && {\n            height: '100%',\n            width: '100%',\n          },\n      ],\n      isLandscape && classNames.imageLandscape,\n      !isLandscape && classNames.imagePortrait,\n      !isLoaded && 'is-notLoaded',\n      shouldFadeIn && 'is-fadeIn',\n      isError && 'is-error',\n    ],\n  };\n};\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { IImageProps, IImageStyleProps, IImageStyles } from './Image.types';\nimport { ImageBase } from './Image.base';\nimport { getStyles } from './Image.styles';\n\nexport const Image: React.FunctionComponent<IImageProps> = styled<IImageProps, IImageStyleProps, IImageStyles>(\n  ImageBase,\n  getStyles,\n  undefined,\n  {\n    scope: 'Image',\n  },\n  true,\n);\n","const REACT_LIFECYCLE_EXCLUSIONS = [\n  'setState',\n  'render',\n  'componentWillMount',\n  'UNSAFE_componentWillMount',\n  'componentDidMount',\n  'componentWillReceiveProps',\n  'UNSAFE_componentWillReceiveProps',\n  'shouldComponentUpdate',\n  'componentWillUpdate',\n  'getSnapshotBeforeUpdate',\n  'UNSAFE_componentWillUpdate',\n  'componentDidUpdate',\n  'componentWillUnmount',\n];\n\n/**\n * Allows you to hoist methods, except those in an exclusion set from a source object into a destination object.\n *\n * @public\n * @param destination - The instance of the object to hoist the methods onto.\n * @param source - The instance of the object where the methods are hoisted from.\n * @param exclusions - (Optional) What methods to exclude from being hoisted.\n * @returns An array of names of methods that were hoisted.\n */\nexport function hoistMethods(\n  // tslint:disable-next-line:no-any\n  destination: any,\n  // tslint:disable-next-line:no-any\n  source: any,\n  exclusions: string[] = REACT_LIFECYCLE_EXCLUSIONS,\n): string[] {\n  let hoisted: string[] = [];\n  for (let methodName in source) {\n    if (\n      typeof source[methodName] === 'function' &&\n      destination[methodName] === undefined &&\n      (!exclusions || exclusions.indexOf(methodName) === -1)\n    ) {\n      hoisted.push(methodName);\n      /* tslint:disable:no-function-expression */\n      destination[methodName] = function(): void {\n        source[methodName].apply(source, arguments);\n      };\n      /* tslint:enable */\n    }\n  }\n\n  return hoisted;\n}\n\n/**\n * Provides a method for convenience to unhoist hoisted methods.\n *\n * @public\n * @param source - The source object upon which methods were hoisted.\n * @param methodNames - An array of method names to unhoist.\n */\n// tslint:disable-next-line:no-any\nexport function unhoistMethods(source: any, methodNames: string[]): void {\n  methodNames.forEach((methodName: string) => delete source[methodName]);\n}\n","import * as React from 'react';\nimport { hoistMethods, unhoistMethods } from '../../Utilities';\n\nexport class BaseDecorator<TProps, TState> extends React.Component<TProps, TState> {\n  protected _composedComponentInstance: React.Component<TProps, TState>;\n\n  private _hoisted: string[];\n\n  constructor(props: TProps) {\n    super(props);\n    this._updateComposedComponentRef = this._updateComposedComponentRef.bind(this);\n  }\n\n  /**\n   * Updates the ref to the component composed by the decorator, which will also take care of hoisting\n   * (and unhoisting as appropriate) methods from said component.\n   *\n   * Pass this method as the argument to the 'ref' property of the composed component.\n   */\n  protected _updateComposedComponentRef(composedComponentInstance: React.Component<TProps, TState>): void {\n    this._composedComponentInstance = composedComponentInstance;\n    if (composedComponentInstance) {\n      this._hoisted = hoistMethods(this, composedComponentInstance);\n    } else if (this._hoisted) {\n      unhoistMethods(this, this._hoisted);\n    }\n  }\n}\n","import { Stylesheet } from '@uifabric/merge-styles';\n\nconst stylesheet = Stylesheet.getInstance();\n\nif (stylesheet && stylesheet.onReset) {\n  Stylesheet.getInstance().onReset(resetMemoizations);\n}\n\n// tslint:disable:no-any\ndeclare class WeakMap {\n  public get(key: any): any;\n  public set(key: any, value: any): void;\n  public has(key: any): boolean;\n}\n\nlet _resetCounter = 0;\nconst _emptyObject = { empty: true };\nconst _dictionary: any = {};\nlet _weakMap = typeof WeakMap === 'undefined' ? null : WeakMap;\n\ninterface IMemoizeNode {\n  map: WeakMap | null;\n  value?: any;\n}\n\n/**\n *  Test utility for providing a custom weakmap.\n *\n * @internal\n * */\nexport function setMemoizeWeakMap(weakMap: any): void {\n  _weakMap = weakMap;\n}\n\n/**\n * Reset memoizations.\n */\nexport function resetMemoizations(): void {\n  _resetCounter++;\n}\n\n/**\n * Memoize decorator to be used on class methods. WARNING: the `this` reference\n * will be inaccessible within a memoized method, given that a cached method's `this`\n * would not be instance-specific.\n *\n * @public\n */\nexport function memoize<T extends Function>(\n  target: any,\n  key: string,\n  descriptor: TypedPropertyDescriptor<T>,\n): {\n  configurable: boolean;\n  get(): T;\n} {\n  // We bind to \"null\" to prevent people from inadvertently pulling values from \"this\",\n  // rather than passing them in as input values which can be memoized.\n  let fn = memoizeFunction(descriptor.value && descriptor.value.bind(null));\n\n  return {\n    configurable: true,\n    get(): T {\n      return fn;\n    },\n  };\n}\n\n/**\n * Memoizes a function; when you pass in the same parameters multiple times, it returns a cached result.\n * Be careful when passing in objects, you need to pass in the same INSTANCE for caching to work. Otherwise\n * it will grow the cache unnecessarily. Also avoid using default values that evaluate functions; passing in\n * undefined for a value and relying on a default function will execute it the first time, but will not\n * re-evaluate subsequent times which may have been unexpected.\n *\n * By default, the cache will reset after 100 permutations, to avoid abuse cases where the function is\n * unintendedly called with unique objects. Without a reset, the cache could grow infinitely, so we safeguard\n * by resetting. To override this behavior, pass a value of 0 to the maxCacheSize parameter.\n *\n * @public\n * @param cb - The function to memoize.\n * @param maxCacheSize - Max results to cache. If the cache exceeds this value, it will reset on the next call.\n * @param ignoreNullOrUndefinedResult - Flag to decide whether to cache callback result if it is undefined/null.\n * If the flag is set to true, the callback result is recomputed every time till the callback result is\n * not undefined/null for the first time, and then the non-undefined/null version gets cached.\n * @returns A memoized version of the function.\n */\nexport function memoizeFunction<T extends (...args: any[]) => RET_TYPE, RET_TYPE>(\n  cb: T,\n  maxCacheSize: number = 100,\n  ignoreNullOrUndefinedResult: boolean = false,\n): T {\n  // Avoid breaking scenarios which don't have weak map.\n  if (!_weakMap) {\n    return cb;\n  }\n\n  let rootNode: any;\n  let cacheSize = 0;\n  let localResetCounter = _resetCounter;\n\n  // tslint:disable-next-line:no-function-expression\n  return function memoizedFunction(...args: any[]): RET_TYPE {\n    let currentNode: any = rootNode;\n\n    if (\n      rootNode === undefined ||\n      localResetCounter !== _resetCounter ||\n      (maxCacheSize > 0 && cacheSize > maxCacheSize)\n    ) {\n      rootNode = _createNode();\n      cacheSize = 0;\n      localResetCounter = _resetCounter;\n    }\n\n    currentNode = rootNode;\n\n    // Traverse the tree until we find the match.\n    for (let i = 0; i < args.length; i++) {\n      let arg = _normalizeArg(args[i]);\n\n      if (!currentNode.map.has(arg)) {\n        currentNode.map.set(arg, _createNode());\n      }\n\n      currentNode = currentNode.map.get(arg);\n    }\n\n    if (!currentNode.hasOwnProperty('value')) {\n      currentNode.value = cb(...args);\n      cacheSize++;\n    }\n\n    if (ignoreNullOrUndefinedResult && (currentNode.value === null || currentNode.value === undefined)) {\n      currentNode.value = cb(...args);\n    }\n\n    return currentNode.value;\n  } as any;\n}\n\n/**\n * Creates a memoizer for a single-value function, backed by a WeakMap.\n * With a WeakMap, the memoized values are only kept as long as the source objects,\n * ensuring that there is no memory leak.\n *\n * This function assumes that the input values passed to the wrapped function will be\n * `function` or `object` types. To memoize functions which accept other inputs, use\n * `memoizeFunction`, which memoizes against arbitrary inputs using a lookup cache.\n *\n * @public\n */\nexport function createMemoizer<F extends (input: any) => any>(getValue: F): F {\n  if (!_weakMap) {\n    // Without a `WeakMap` implementation, memoization is not possible.\n    return getValue;\n  }\n\n  const cache = new _weakMap();\n\n  function memoizedGetValue(input: any): any {\n    if (!input || (typeof input !== 'function' && typeof input !== 'object')) {\n      // A WeakMap can only be used to test against reference values, i.e. 'function' and 'object'.\n      // All other inputs cannot be memoized against in this manner.\n      return getValue(input);\n    }\n\n    if (cache.has(input)) {\n      // tslint:disable-next-line:no-non-null-assertion\n      return cache.get(input)!;\n    }\n\n    const value = getValue(input);\n\n    cache.set(input, value);\n\n    return value;\n  }\n\n  return memoizedGetValue as F;\n}\n\nfunction _normalizeArg(val: null | undefined): { empty: boolean } | any;\nfunction _normalizeArg(val: object): any;\nfunction _normalizeArg(val: any): any {\n  if (!val) {\n    return _emptyObject;\n  } else if (typeof val === 'object' || typeof val === 'function') {\n    return val;\n  } else if (!_dictionary[val]) {\n    _dictionary[val] = { val };\n  }\n\n  return _dictionary[val];\n}\n\nfunction _createNode(): IMemoizeNode {\n  return {\n    map: _weakMap ? new _weakMap() : null,\n  };\n}\n","import { getWindow } from './dom/getWindow';\n\n/**\n * Storing global state in local module variables has issues when more than one copy\n * if the module gets loaded on the page (due to a bundling error or simply by consuming\n * a prebundled script.)\n *\n * This file contains helpers to deal with the getting and setting local state, and allows\n * callers to get called back when it mutates.\n */\n\n// tslint:disable:no-any\n\nconst GLOBAL_SETTINGS_PROP_NAME = '__globalSettings__';\nconst CALLBACK_STATE_PROP_NAME = '__callbacks__';\n\nlet _counter = 0;\n\n/**\n * Change description used for change callbacks in GlobalSettings.\n *\n * @public\n * {@docCategory IChangeDescription}\n */\nexport interface IChangeDescription {\n  key: string;\n  // tslint:disable-next-line:no-any\n  oldValue: any;\n  // tslint:disable-next-line:no-any\n  value: any;\n}\n\n/**\n * Change event callback.\n *\n * @public\n * {@docCategory IChangeEventCallback}\n */\nexport interface IChangeEventCallback {\n  __id__?: string;\n  (changeDescription?: IChangeDescription): void;\n}\n\n/**\n * Global settings helper, which stores settings in the global (window) namespace.\n * If window is not provided, it will store settings in module scope. Provides a\n * way to observe changes as well when their values change.\n *\n * @public\n * {@docCategory GlobalSettings}\n */\nexport class GlobalSettings {\n  public static getValue<T>(key: string, defaultValue?: T | (() => T)): T {\n    const globalSettings = _getGlobalSettings();\n\n    if (globalSettings[key] === undefined) {\n      globalSettings[key] = typeof defaultValue === 'function' ? (defaultValue as Function)() : defaultValue;\n    }\n\n    return globalSettings[key];\n  }\n\n  public static setValue<T>(key: string, value: T): T {\n    const globalSettings = _getGlobalSettings();\n    const callbacks = globalSettings[CALLBACK_STATE_PROP_NAME];\n    let oldValue = globalSettings[key];\n\n    if (value !== oldValue) {\n      globalSettings[key] = value;\n\n      let changeDescription = {\n        oldValue,\n        value,\n        key,\n      };\n\n      for (let id in callbacks) {\n        if (callbacks.hasOwnProperty(id)) {\n          callbacks[id](changeDescription);\n        }\n      }\n    }\n\n    return value;\n  }\n\n  public static addChangeListener(cb: IChangeEventCallback): void {\n    // Note: we use generated ids on the callbacks to create a map of the callbacks, which optimizes removal.\n    // (It's faster to delete a key than it is to look up the index of an object and splice an array.)\n    let id = cb.__id__;\n    const callbacks = _getCallbacks();\n\n    if (!id) {\n      id = cb.__id__ = String(_counter++);\n    }\n\n    callbacks[id] = cb;\n  }\n\n  public static removeChangeListener(cb: IChangeEventCallback): void {\n    const callbacks = _getCallbacks();\n    delete callbacks[cb.__id__ as string];\n  }\n}\n\nfunction _getGlobalSettings(): { [key: string]: any } {\n  const win = getWindow();\n  const globalObj: { [key: string]: any } = win || {};\n\n  if (!globalObj[GLOBAL_SETTINGS_PROP_NAME]) {\n    globalObj[GLOBAL_SETTINGS_PROP_NAME] = {\n      [CALLBACK_STATE_PROP_NAME]: {},\n    };\n  }\n\n  return globalObj[GLOBAL_SETTINGS_PROP_NAME];\n}\n\nfunction _getCallbacks(): { [key: string]: () => void } {\n  const globalSettings = _getGlobalSettings();\n  return globalSettings[CALLBACK_STATE_PROP_NAME];\n}\n","import * as React from 'react';\n\nimport { IFontIconProps } from './Icon.types';\nimport { classNames, MS_ICON } from './Icon.styles';\nimport { css, getNativeProps, htmlElementProperties, memoizeFunction } from '../../Utilities';\nimport { getIcon, IIconRecord, IIconSubsetRecord } from '../../Styling';\n\nexport interface IIconContent {\n  children?: string;\n  iconClassName?: string;\n  fontFamily?: string;\n}\n\nexport const getIconContent = memoizeFunction(\n  (iconName?: string): IIconContent | null => {\n    const { code, subset }: Pick<IIconRecord, 'code'> & { subset: Partial<IIconSubsetRecord> } = getIcon(iconName) || {\n      subset: {},\n      code: undefined,\n    };\n\n    if (!code) {\n      return null;\n    }\n\n    return {\n      children: code,\n      iconClassName: subset.className,\n      fontFamily: subset.fontFace && subset.fontFace.fontFamily,\n    };\n  },\n  undefined,\n  true /*ignoreNullOrUndefinedResult */,\n);\n\n/**\n * Fast icon component which only supports font glyphs (not images) and can't be targeted by customizations.\n * To style the icon, use `className` or reference `ms-Icon` in CSS.\n * {@docCategory Icon}\n */\nexport const FontIcon: React.FunctionComponent<IFontIconProps> = props => {\n  const { iconName, className, style = {} } = props;\n  const iconContent = getIconContent(iconName) || {};\n  const { iconClassName, children, fontFamily } = iconContent;\n\n  const nativeProps = getNativeProps<React.HTMLAttributes<HTMLElement>>(props, htmlElementProperties);\n  const containerProps = props['aria-label']\n    ? {}\n    : {\n        role: 'presentation',\n        'aria-hidden': true,\n      };\n\n  return (\n    <i\n      data-icon-name={iconName}\n      {...containerProps}\n      {...nativeProps}\n      className={css(MS_ICON, classNames.root, iconClassName, !iconName && classNames.placeholder, className)}\n      // Apply the font family this way to ensure it doesn't get overridden by Fabric Core ms-Icon styles\n      // https://github.com/microsoft/fluentui/issues/10449\n      style={{ fontFamily, ...style }}\n    >\n      {children}\n    </i>\n  );\n};\n\n/**\n * Memoized helper for rendering a FontIcon.\n * @param iconName - The name of the icon to use from the icon font.\n * @param className - Class name for styling the icon.\n * @param ariaLabel - Label for the icon for the benefit of screen readers.\n * {@docCategory Icon}\n */\nexport const getFontIcon = memoizeFunction((iconName: string, className?: string, ariaLabel?: string) => {\n  return FontIcon({ iconName, className, 'aria-label': ariaLabel });\n});\n","import { getWindow } from './dom/getWindow';\nexport const IsFocusVisibleClassName = 'ms-Fabric--isFocusVisible';\nexport const IsFocusHiddenClassName = 'ms-Fabric--isFocusHidden';\n\n/**\n * Sets the visibility of focus styling.\n *\n * By default, focus styles (the box surrounding a focused Button, for example) only show up when navigational\n * keypresses occur (through Tab, arrows, PgUp/PgDn, Home and End), and are hidden when mouse interactions occur.\n * This API provides an imperative way to turn them on/off.\n *\n * A use case might be when you have a keypress like ctrl-f6 navigate to a particular region on the page,\n * and want focus to show up.\n *\n * @param enabled - whether to remove or add focus\n * @param target - optional target\n */\nexport function setFocusVisibility(enabled: boolean, target?: Element): void {\n  const win = target ? getWindow(target) : getWindow();\n\n  if (win) {\n    const { classList } = win.document.body;\n    classList.add(enabled ? IsFocusVisibleClassName : IsFocusHiddenClassName);\n    classList.remove(enabled ? IsFocusHiddenClassName : IsFocusVisibleClassName);\n  }\n}\n","import { ISettings, ISettingsFunction } from './Customizations';\n\n/**\n * Merge new and old settings, giving priority to new settings.\n * New settings is optional in which case oldSettings is returned as-is.\n * @param oldSettings - Old settings to fall back to.\n * @param newSettings - New settings that will be merged over oldSettings.\n * @returns Merged settings.\n */\nexport function mergeSettings(oldSettings: ISettings = {}, newSettings?: ISettings | ISettingsFunction): ISettings {\n  const mergeSettingsWith = _isSettingsFunction(newSettings) ? newSettings : _settingsMergeWith(newSettings);\n\n  return mergeSettingsWith(oldSettings);\n}\n\nexport function mergeScopedSettings(\n  oldSettings: ISettings = {},\n  newSettings?: ISettings | ISettingsFunction,\n): ISettings {\n  const mergeSettingsWith = _isSettingsFunction(newSettings) ? newSettings : _scopedSettingsMergeWith(newSettings);\n\n  return mergeSettingsWith(oldSettings);\n}\n\nfunction _isSettingsFunction(settings?: ISettings | ISettingsFunction): settings is ISettingsFunction {\n  return typeof settings === 'function';\n}\n\nfunction _settingsMergeWith(newSettings?: object): (settings: ISettings) => ISettings {\n  return (settings: ISettings) => (newSettings ? { ...settings, ...newSettings } : settings);\n}\n\nfunction _scopedSettingsMergeWith(scopedSettingsFromProps: ISettings = {}): (scopedSettings: ISettings) => ISettings {\n  return (oldScopedSettings: ISettings): ISettings => {\n    const newScopedSettings: ISettings = { ...oldScopedSettings };\n\n    for (let scopeName in scopedSettingsFromProps) {\n      if (scopedSettingsFromProps.hasOwnProperty(scopeName)) {\n        newScopedSettings[scopeName] = { ...oldScopedSettings[scopeName], ...scopedSettingsFromProps[scopeName] };\n      }\n    }\n\n    return newScopedSettings;\n  };\n}\n","import * as React from 'react';\nimport { FocusZone } from './FocusZone';\nimport { IRefObject, IPoint } from '@uifabric/utilities';\n\n/**\n * FocusZone component class interface.\n * {@docCategory FocusZone}\n */\nexport interface IFocusZone {\n  /**\n   * Sets focus to the first tabbable item in the zone.\n   * @param forceIntoFirstElement - If true, focus will be forced into the first element, even\n   * if focus is already in the focus zone.\n   * @returns True if focus could be set to an active element, false if no operation was taken.\n   */\n  focus(forceIntoFirstElement?: boolean): boolean;\n\n  /**\n   * Sets focus to the last tabbable item in the zone.\n   * @returns True if focus could be set to an active element, false if no operation was taken.\n   */\n  focusLast(): boolean;\n\n  /**\n   * Sets focus to a specific child element within the zone. This can be used in conjunction with\n   * onBeforeFocus to created delayed focus scenarios (like animate the scroll position to the correct\n   * location and then focus.)\n   * @param element - The child element within the zone to focus.\n   * @returns True if focus could be set to an active element, false if no operation was taken.\n   */\n  focusElement(childElement?: HTMLElement): boolean;\n\n  /**\n   * Forces horizontal alignment in the context of vertical arrowing to use specific point as the reference, rather\n   * than a center based on the last horizontal motion.\n   * @param point - the new reference point.\n   */\n  setFocusAlignment(point: IPoint): void;\n}\n\n/**\n * FocusZone component props.\n * {@docCategory FocusZone}\n */\nexport interface IFocusZoneProps extends React.HTMLAttributes<HTMLElement | FocusZone> {\n  /**\n   * Optional callback to access the IFocusZone interface. Use this instead of ref for accessing\n   * the public methods and properties of the component.\n   */\n  componentRef?: IRefObject<IFocusZone>;\n\n  /**\n   * Additional class name to provide on the root element, in addition to the ms-FocusZone class.\n   */\n  className?: string;\n\n  /**\n   * Defines which arrows to react to.\n   * @defaultvalue FocusZoneDirection.bidirectional\n   */\n  direction?: FocusZoneDirection;\n\n  /**\n   * Optionally provide a selector for identifying the intial active element.\n   */\n  defaultActiveElement?: string;\n\n  /**\n   * Determines if a default tabbable element should be force focused on FocusZone mount.\n   * @default false\n   */\n  shouldFocusOnMount?: boolean;\n\n  /**\n   * If set, the FocusZone will not be tabbable and keyboard navigation will be disabled.\n   * This does not affect disabled attribute of any child.\n   */\n  disabled?: boolean;\n\n  /**\n   * Element type the root element will use. Default is \"div\".\n   * @deprecated Use 'as' instead.\n   */\n  // tslint:disable-next-line:no-any\n  elementType?: any /* TODO should be `keyof React.ReactHTML`, tracking with https://github.com/Microsoft/TypeScript/issues/30050 */;\n\n  /**\n   * A component that should be used as the root element of the FocusZone component.\n   */\n  as?: React.ElementType;\n\n  /**\n   * If set, will cycle to the beginning of the targets once the user navigates to the\n   * next target while at the end, and to the end when navigate to the previous at the beginning.\n   */\n  isCircularNavigation?: boolean;\n\n  /**\n   * If provided, this callback will be executed on keypresses to determine if the user\n   * intends to navigate into the inner zone. Returning true will ask the first inner zone to\n   * set focus.\n   */\n  isInnerZoneKeystroke?: (ev: React.KeyboardEvent<HTMLElement>) => boolean;\n\n  /**\n   * Sets the aria-labelledby attribute.\n   * @deprecated Directly use the `aria-labelledby` attribute instead\n   */\n  ariaLabelledBy?: string;\n\n  /**\n   * Sets the aria-describedby attribute.\n   * @deprecated Directly use the `aria-describedby` attribute instead\n   */\n  ariaDescribedBy?: string;\n\n  /**\n   * Callback for when one of immediate children elements gets active by getting focused\n   * or by having one of its respective children elements focused.\n   */\n  onActiveElementChanged?: (element?: HTMLElement, ev?: React.FocusEvent<HTMLElement>) => void;\n\n  /**\n   * Deprecated at v1.12.1. DIV props provided to the FocusZone will be mixed into the root element.\n   * @deprecated DIV props provided to the FocusZone will be mixed into the root element.\n   */\n  rootProps?: React.HTMLAttributes<HTMLDivElement>;\n\n  /**\n   * Callback method for determining if focus should indeed be set on the given element.\n   * @param element - The child element within the zone to focus.\n   * @returns True if focus should be set to the given element, false to avoid setting focus.\n   */\n  onBeforeFocus?: (childElement?: HTMLElement) => boolean;\n\n  /** Allows focus to park on root when focus is in the `FocusZone` at render time. */\n  allowFocusRoot?: boolean;\n\n  /**\n   * Allows tab key to be handled to tab through a list of items in the focus zone,\n   * an unfortunate side effect is that users will not be able to tab out of the focus zone\n   * and have to hit escape or some other key.\n   * @deprecated Use `handleTabKey` instead.\n   *\n   */\n  allowTabKey?: boolean;\n\n  /**\n   * Allows tab key to be handled to tab through a list of items in the focus zone,\n   * an unfortunate side effect is that users will not be able to tab out of the focus zone\n   * and have to hit escape or some other key.\n   */\n  handleTabKey?: FocusZoneTabbableElements;\n\n  /**\n   * A callback method to determine if the input element should lose focus on arrow keys\n   *  @param inputElement - The input element which is to loose focus.\n   *  @returns True if input element should loose focus or false otherwise.\n   */\n  shouldInputLoseFocusOnArrowKey?: (inputElement: HTMLInputElement) => boolean;\n\n  /**\n   * Whether the to check for data-no-horizontal-wrap or data-no-vertical-wrap attributes\n   * when determining how to move focus\n   * @defaultvalue false\n   */\n  checkForNoWrap?: boolean;\n\n  /**\n   * Whether the FocusZone should allow focus events to propagate past the FocusZone\n   */\n  doNotAllowFocusEventToPropagate?: boolean;\n\n  /**\n   * Callback to notify creators that focus has been set on the FocusZone\n   */\n  onFocusNotification?: () => void;\n\n  /**\n   * If true, FocusZone prevents the default behavior of Keyboard events when changing focus between elements.\n   * @defaultvalue true\n   */\n  preventDefaultWhenHandled?: boolean;\n}\n/**\n * {@docCategory FocusZone}\n */\nexport const FocusZoneTabbableElements = {\n  /** Tabbing is not allowed */\n  none: 0 as 0,\n\n  /** All tabbing action is allowed */\n  all: 1 as 1,\n\n  /** Tabbing is allowed only on input elements */\n  inputOnly: 2 as 2,\n};\n\n/**\n * {@docCategory FocusZone}\n */\nexport type FocusZoneTabbableElements = typeof FocusZoneTabbableElements[keyof typeof FocusZoneTabbableElements];\n\n/**\n * {@docCategory FocusZone}\n */\nexport enum FocusZoneDirection {\n  /** Only react to up/down arrows. */\n  vertical = 0,\n\n  /** Only react to left/right arrows. */\n  horizontal = 1,\n\n  /** React to all arrows. */\n  bidirectional = 2,\n\n  /**\n   * React to all arrows. Navigate next item in DOM on right/down arrow keys and previous - left/up arrow keys.\n   * Right and Left arrow keys are swapped in RTL mode.\n   */\n  domOrder = 3,\n}\n","import { getParent } from './getParent';\n/**\n * Determines whether or not a parent element contains a given child element.\n * If `allowVirtualParents` is true, this method may return `true` if the child\n * has the parent in its virtual element hierarchy.\n *\n * @public\n */\nexport function elementContains(\n  parent: HTMLElement | null,\n  child: HTMLElement | null,\n  allowVirtualParents: boolean = true,\n): boolean {\n  let isContained = false;\n  if (parent && child) {\n    if (allowVirtualParents) {\n      isContained = false;\n      while (child) {\n        let nextParent: HTMLElement | null = getParent(child);\n        if (nextParent === parent) {\n          isContained = true;\n          break;\n        }\n        child = nextParent;\n      }\n    } else if (parent.contains) {\n      isContained = parent.contains(child);\n    }\n  }\n  return isContained;\n}\n","import { getWindow } from './dom/getWindow';\n\ndeclare function setTimeout(cb: Function, delay: number): number;\ndeclare function setInterval(cb: Function, delay: number): number;\n\n/**\n * Bugs often appear in async code when stuff gets disposed, but async operations don't get canceled.\n * This Async helper class solves these issues by tying async code to the lifetime of a disposable object.\n *\n * Usage: Anything class extending from BaseModel can access this helper via this.async. Otherwise create a\n * new instance of the class and remember to call dispose() during your code's dispose handler.\n *\n * @public\n */\nexport class Async {\n  private _timeoutIds: { [id: number]: boolean } | null = null;\n  private _immediateIds: { [id: number]: boolean } | null = null;\n  private _intervalIds: { [id: number]: boolean } | null = null;\n  private _animationFrameIds: { [id: number]: boolean } | null = null;\n  private _isDisposed: boolean;\n  private _parent: object | null;\n  // tslint:disable-next-line:no-any\n  private _onErrorHandler: ((e: any) => void) | undefined;\n  private _noop: () => void;\n  // tslint:disable-next-line:no-any\n  constructor(parent?: object, onError?: (e: any) => void) {\n    this._isDisposed = false;\n    this._parent = parent || null;\n    this._onErrorHandler = onError;\n    this._noop = () => {\n      /* do nothing */\n    };\n  }\n\n  /**\n   * Dispose function, clears all async operations.\n   */\n  public dispose(): void {\n    let id;\n\n    this._isDisposed = true;\n    this._parent = null;\n\n    // Clear timeouts.\n    if (this._timeoutIds) {\n      for (id in this._timeoutIds) {\n        if (this._timeoutIds.hasOwnProperty(id)) {\n          this.clearTimeout(parseInt(id, 10));\n        }\n      }\n\n      this._timeoutIds = null;\n    }\n\n    // Clear immediates.\n    if (this._immediateIds) {\n      for (id in this._immediateIds) {\n        if (this._immediateIds.hasOwnProperty(id)) {\n          this.clearImmediate(parseInt(id, 10));\n        }\n      }\n\n      this._immediateIds = null;\n    }\n\n    // Clear intervals.\n    if (this._intervalIds) {\n      for (id in this._intervalIds) {\n        if (this._intervalIds.hasOwnProperty(id)) {\n          this.clearInterval(parseInt(id, 10));\n        }\n      }\n      this._intervalIds = null;\n    }\n\n    // Clear animation frames.\n    if (this._animationFrameIds) {\n      for (id in this._animationFrameIds) {\n        if (this._animationFrameIds.hasOwnProperty(id)) {\n          this.cancelAnimationFrame(parseInt(id, 10));\n        }\n      }\n\n      this._animationFrameIds = null;\n    }\n  }\n\n  /**\n   * SetTimeout override, which will auto cancel the timeout during dispose.\n   * @param callback - Callback to execute.\n   * @param duration - Duration in milliseconds.\n   * @returns The setTimeout id.\n   */\n  public setTimeout(callback: () => void, duration: number): number {\n    let timeoutId = 0;\n\n    if (!this._isDisposed) {\n      if (!this._timeoutIds) {\n        this._timeoutIds = {};\n      }\n\n      /* tslint:disable:ban-native-functions */\n      timeoutId = setTimeout(() => {\n        // Time to execute the timeout, enqueue it as a foreground task to be executed.\n\n        try {\n          // Now delete the record and call the callback.\n          if (this._timeoutIds) {\n            delete this._timeoutIds[timeoutId];\n          }\n          callback.apply(this._parent);\n        } catch (e) {\n          if (this._onErrorHandler) {\n            this._onErrorHandler(e);\n          }\n        }\n      }, duration);\n      /* tslint:enable:ban-native-functions */\n\n      this._timeoutIds[timeoutId] = true;\n    }\n\n    return timeoutId;\n  }\n\n  /**\n   * Clears the timeout.\n   * @param id - Id to cancel.\n   */\n  public clearTimeout(id: number): void {\n    if (this._timeoutIds && this._timeoutIds[id]) {\n      /* tslint:disable:ban-native-functions */\n      clearTimeout(id);\n      delete this._timeoutIds[id];\n      /* tslint:enable:ban-native-functions */\n    }\n  }\n\n  /**\n   * SetImmediate override, which will auto cancel the immediate during dispose.\n   * @param callback - Callback to execute.\n   * @param targetElement - Optional target element to use for identifying the correct window.\n   * @returns The setTimeout id.\n   */\n  public setImmediate(callback: () => void, targetElement?: Element | null): number {\n    let immediateId = 0;\n    const win = getWindow(targetElement)!;\n\n    if (!this._isDisposed) {\n      if (!this._immediateIds) {\n        this._immediateIds = {};\n      }\n\n      /* tslint:disable:ban-native-functions */\n      let setImmediateCallback = () => {\n        // Time to execute the timeout, enqueue it as a foreground task to be executed.\n\n        try {\n          // Now delete the record and call the callback.\n          if (this._immediateIds) {\n            delete this._immediateIds[immediateId];\n          }\n          callback.apply(this._parent);\n        } catch (e) {\n          this._logError(e);\n        }\n      };\n\n      immediateId = win.setTimeout(setImmediateCallback, 0);\n      /* tslint:enable:ban-native-functions */\n\n      this._immediateIds[immediateId] = true;\n    }\n\n    return immediateId;\n  }\n\n  /**\n   * Clears the immediate.\n   * @param id - Id to cancel.\n   * @param targetElement - Optional target element to use for identifying the correct window.\n   */\n  public clearImmediate(id: number, targetElement?: Element | null): void {\n    const win = getWindow(targetElement)!;\n\n    if (this._immediateIds && this._immediateIds[id]) {\n      /* tslint:disable:ban-native-functions */\n      win.clearTimeout(id);\n      delete this._immediateIds[id];\n      /* tslint:enable:ban-native-functions */\n    }\n  }\n\n  /**\n   * SetInterval override, which will auto cancel the timeout during dispose.\n   * @param callback - Callback to execute.\n   * @param duration - Duration in milliseconds.\n   * @returns The setTimeout id.\n   */\n  public setInterval(callback: () => void, duration: number): number {\n    let intervalId = 0;\n\n    if (!this._isDisposed) {\n      if (!this._intervalIds) {\n        this._intervalIds = {};\n      }\n\n      /* tslint:disable:ban-native-functions */\n      intervalId = setInterval(() => {\n        // Time to execute the interval callback, enqueue it as a foreground task to be executed.\n        try {\n          callback.apply(this._parent);\n        } catch (e) {\n          this._logError(e);\n        }\n      }, duration);\n      /* tslint:enable:ban-native-functions */\n\n      this._intervalIds[intervalId] = true;\n    }\n\n    return intervalId;\n  }\n\n  /**\n   * Clears the interval.\n   * @param id - Id to cancel.\n   */\n  public clearInterval(id: number): void {\n    if (this._intervalIds && this._intervalIds[id]) {\n      /* tslint:disable:ban-native-functions */\n      clearInterval(id);\n      delete this._intervalIds[id];\n      /* tslint:enable:ban-native-functions */\n    }\n  }\n\n  /**\n   * Creates a function that, when executed, will only call the func function at most once per\n   * every wait milliseconds. Provide an options object to indicate that func should be invoked\n   * on the leading and/or trailing edge of the wait timeout. Subsequent calls to the throttled\n   * function will return the result of the last func call.\n   *\n   * Note: If leading and trailing options are true func will be called on the trailing edge of\n   * the timeout only if the throttled function is invoked more than once during the wait timeout.\n   *\n   * @param func - The function to throttle.\n   * @param wait - The number of milliseconds to throttle executions to. Defaults to 0.\n   * @param options - The options object.\n   * @returns The new throttled function.\n   */\n  public throttle<T extends Function>(\n    func: T,\n    wait?: number,\n    options?: {\n      leading?: boolean;\n      trailing?: boolean;\n    },\n  ): T | (() => void) {\n    if (this._isDisposed) {\n      return this._noop;\n    }\n\n    let waitMS = wait || 0;\n    let leading = true;\n    let trailing = true;\n    let lastExecuteTime = 0;\n    let lastResult: T;\n    // tslint:disable-next-line:no-any\n    let lastArgs: any[];\n    let timeoutId: number | null = null;\n\n    if (options && typeof options.leading === 'boolean') {\n      leading = options.leading;\n    }\n\n    if (options && typeof options.trailing === 'boolean') {\n      trailing = options.trailing;\n    }\n\n    let callback = (userCall?: boolean) => {\n      let now = new Date().getTime();\n      let delta = now - lastExecuteTime;\n      let waitLength = leading ? waitMS - delta : waitMS;\n      if (delta >= waitMS && (!userCall || leading)) {\n        lastExecuteTime = now;\n        if (timeoutId) {\n          this.clearTimeout(timeoutId);\n          timeoutId = null;\n        }\n        lastResult = func.apply(this._parent, lastArgs);\n      } else if (timeoutId === null && trailing) {\n        timeoutId = this.setTimeout(callback, waitLength);\n      }\n\n      return lastResult;\n    };\n\n    // tslint:disable-next-line:no-any\n    let resultFunction: () => T = (...args: any[]) => {\n      lastArgs = args;\n      return callback(true);\n    };\n\n    return resultFunction;\n  }\n\n  /**\n   * Creates a function that will delay the execution of func until after wait milliseconds have\n   * elapsed since the last time it was invoked. Provide an options object to indicate that func\n   * should be invoked on the leading and/or trailing edge of the wait timeout. Subsequent calls\n   * to the debounced function will return the result of the last func call.\n   *\n   * Note: If leading and trailing options are true func will be called on the trailing edge of\n   * the timeout only if the debounced function is invoked more than once during the wait\n   * timeout.\n   *\n   * @param func - The function to debounce.\n   * @param wait - The number of milliseconds to delay.\n   * @param options - The options object.\n   * @returns The new debounced function.\n   */\n  public debounce<T extends Function>(\n    func: T,\n    wait?: number,\n    options?: {\n      leading?: boolean;\n      maxWait?: number;\n      trailing?: boolean;\n    },\n  ): ICancelable<T> & (() => void) {\n    if (this._isDisposed) {\n      let noOpFunction: ICancelable<T> & (() => T) = (() => {\n        /** Do nothing */\n      }) as ICancelable<T> & (() => T);\n\n      noOpFunction.cancel = () => {\n        return;\n      };\n      /* tslint:disable:no-any */\n      noOpFunction.flush = (() => null) as any;\n      /* tslint:enable:no-any */\n      noOpFunction.pending = () => false;\n\n      return noOpFunction;\n    }\n\n    let waitMS = wait || 0;\n    let leading = false;\n    let trailing = true;\n    let maxWait: number | null = null;\n    let lastCallTime = 0;\n    let lastExecuteTime = new Date().getTime();\n    let lastResult: T;\n    // tslint:disable-next-line:no-any\n    let lastArgs: any[];\n    let timeoutId: number | null = null;\n\n    if (options && typeof options.leading === 'boolean') {\n      leading = options.leading;\n    }\n\n    if (options && typeof options.trailing === 'boolean') {\n      trailing = options.trailing;\n    }\n\n    if (options && typeof options.maxWait === 'number' && !isNaN(options.maxWait)) {\n      maxWait = options.maxWait;\n    }\n\n    let markExecuted = (time: number) => {\n      if (timeoutId) {\n        this.clearTimeout(timeoutId);\n        timeoutId = null;\n      }\n      lastExecuteTime = time;\n    };\n\n    let invokeFunction = (time: number) => {\n      markExecuted(time);\n      lastResult = func.apply(this._parent, lastArgs);\n    };\n\n    let callback = (userCall?: boolean) => {\n      let now = new Date().getTime();\n      let executeImmediately = false;\n      if (userCall) {\n        if (leading && now - lastCallTime >= waitMS) {\n          executeImmediately = true;\n        }\n        lastCallTime = now;\n      }\n      let delta = now - lastCallTime;\n      let waitLength = waitMS - delta;\n      let maxWaitDelta = now - lastExecuteTime;\n      let maxWaitExpired = false;\n\n      if (maxWait !== null) {\n        // maxWait only matters when there is a pending callback\n        if (maxWaitDelta >= maxWait && timeoutId) {\n          maxWaitExpired = true;\n        } else {\n          waitLength = Math.min(waitLength, maxWait - maxWaitDelta);\n        }\n      }\n\n      if (delta >= waitMS || maxWaitExpired || executeImmediately) {\n        invokeFunction(now);\n      } else if ((timeoutId === null || !userCall) && trailing) {\n        timeoutId = this.setTimeout(callback, waitLength);\n      }\n\n      return lastResult;\n    };\n\n    let pending = (): boolean => {\n      return !!timeoutId;\n    };\n\n    let cancel = (): void => {\n      if (pending()) {\n        // Mark the debounced function as having executed\n        markExecuted(new Date().getTime());\n      }\n    };\n\n    let flush = (): T => {\n      if (pending()) {\n        invokeFunction(new Date().getTime());\n      }\n\n      return lastResult;\n    };\n\n    // tslint:disable-next-line:no-any\n    let resultFunction: ICancelable<T> & (() => T) = ((...args: any[]) => {\n      lastArgs = args;\n      return callback(true);\n    }) as ICancelable<T> & (() => T);\n\n    resultFunction.cancel = cancel;\n    resultFunction.flush = flush;\n    resultFunction.pending = pending;\n\n    return resultFunction;\n  }\n\n  public requestAnimationFrame(callback: () => void, targetElement?: Element | null): number {\n    let animationFrameId = 0;\n    const win = getWindow(targetElement)!;\n\n    if (!this._isDisposed) {\n      if (!this._animationFrameIds) {\n        this._animationFrameIds = {};\n      }\n\n      /* tslint:disable:ban-native-functions */\n      let animationFrameCallback = () => {\n        try {\n          // Now delete the record and call the callback.\n          if (this._animationFrameIds) {\n            delete this._animationFrameIds[animationFrameId];\n          }\n\n          callback.apply(this._parent);\n        } catch (e) {\n          this._logError(e);\n        }\n      };\n\n      animationFrameId = win.requestAnimationFrame\n        ? win.requestAnimationFrame(animationFrameCallback)\n        : win.setTimeout(animationFrameCallback, 0);\n      /* tslint:enable:ban-native-functions */\n\n      this._animationFrameIds[animationFrameId] = true;\n    }\n\n    return animationFrameId;\n  }\n\n  public cancelAnimationFrame(id: number, targetElement?: Element | null): void {\n    const win = getWindow(targetElement)!;\n\n    if (this._animationFrameIds && this._animationFrameIds[id]) {\n      /* tslint:disable:ban-native-functions */\n      win.cancelAnimationFrame ? win.cancelAnimationFrame(id) : win.clearTimeout(id);\n      /* tslint:enable:ban-native-functions */\n      delete this._animationFrameIds[id];\n    }\n  }\n\n  // tslint:disable-next-line:no-any\n  protected _logError(e: any): void {\n    if (this._onErrorHandler) {\n      this._onErrorHandler(e);\n    }\n  }\n}\n\nexport type ICancelable<T> = {\n  flush: () => T;\n  cancel: () => void;\n  pending: () => boolean;\n};\n","import { ISettingsMap, warn } from './warn';\n/**\n * Warns when a deprecated props are being used.\n *\n * @public\n * @param componentName - The name of the component being used.\n * @param props - The props passed into the component.\n * @param deprecationMap - The map of deprecations, where key is the prop name and the value is\n * either null or a replacement prop name.\n */\nexport function warnDeprecations<P>(componentName: string, props: P, deprecationMap: ISettingsMap<P>): void {\n  if (process.env.NODE_ENV !== 'production') {\n    for (const propName in deprecationMap) {\n      if (props && propName in props) {\n        let deprecationMessage = `${componentName} property '${propName}' was used but has been deprecated.`;\n        const replacementPropName = deprecationMap[propName];\n        if (replacementPropName) {\n          deprecationMessage += ` Use '${replacementPropName}' instead.`;\n        }\n        warn(deprecationMessage);\n      }\n    }\n  }\n}\n","/**\n * Allows you to hoist static functions in components.\n * Created for the purpose of fixing broken static functions in classes\n * that utilize decorators.\n *\n * @public\n * @param source - The object where the methods are hoisted from.\n * @param dest - The object to hoist the methods onto.\n * @returns The dest object with methods added\n */\n\nexport function hoistStatics<TSource extends Object, TDest>(source: TSource, dest: TDest): TDest {\n  for (const name in source) {\n    if (source.hasOwnProperty(name)) {\n      // tslint:disable-next-line:no-any\n      (dest as any)[name] = source[name];\n    }\n  }\n\n  return dest;\n}\n","import { DirectionalHint } from '../../common/DirectionalHint';\nimport { IRectangle } from '../../Utilities';\n\nexport enum RectangleEdge {\n  top = 1,\n  bottom = -1,\n  left = 2,\n  right = -2,\n}\n\nexport enum Position {\n  top = 0,\n  bottom = 1,\n  start = 2,\n  end = 3,\n}\nexport interface IPositionProps {\n  target?: Element | MouseEvent | IPoint;\n  /** how the element should be positioned */\n  directionalHint?: DirectionalHint;\n  /**\n   * How the element should be positioned in RTL layouts.\n   * If not specified, a mirror of `directionalHint` will be used instead\n   */\n  directionalHintForRTL?: DirectionalHint;\n  /** The gap between the callout and the target */\n  gapSpace?: number;\n  /**\n   * The bounding rectangle for which  the contextual menu can appear in.\n   */\n  bounds?: IRectangle;\n  /**\n   * If true the position returned will have the menu element cover the target.\n   * If false then it will position next to the target;\n   */\n  coverTarget?: boolean;\n  /**\n   * If true the position will not change edges in an attempt to fit the rectangle within bounds.\n   * It will still attempt to align it to whatever bounds are given.\n   * @defaultvalue false\n   */\n  directionalHintFixed?: boolean;\n\n  /**\n   * If true the positioning logic will prefer flipping edges over nudging the rectangle to fit within bounds,\n   * thus making sure the element align perfectly with target.\n   */\n  alignTargetEdge?: boolean;\n}\n\nexport interface ICalloutPositionProps extends IPositionProps {\n  /**\n   * The width of the beak.\n   */\n  beakWidth?: number;\n\n  /**\n   * Whether or not the beak is visible\n   */\n  isBeakVisible?: boolean;\n}\n\nexport interface IPositionedData {\n  /**\n   * The new position of the element.\n   */\n  elementPosition: IPosition;\n  /**\n   * The finalized target edge that element is aligning to. For instance RectangleEdge.bottom would mean\n   * that the bottom edge of the target is being aligned to by the RectangleEdge.top of the element\n   * that is being positioned.\n   */\n  targetEdge: RectangleEdge;\n  /**\n   * The finalized alignment edge that the element is aligning too. For instance, RectangleEdge.left means\n   * that the left edge of the target should be in line with the left edge of the element being positioned.\n   */\n  alignmentEdge?: RectangleEdge;\n}\n\nexport interface ICalloutPositionedInfo extends IPositionedData {\n  beakPosition: ICalloutBeakPositionedInfo;\n}\n\nexport interface ICalloutBeakPositionedInfo extends IPositionedData {\n  closestEdge: RectangleEdge;\n}\n\n/**\n * Gives the position of some element on the page. Only a pair of vertical and horizontal edges need to be\n * given. So top/left or bottom/left is sufficient.\n * The number given is the distance in pixels from whatever host was given..\n * So bottom: 100 would be 100px up from the bottom of the host while top: 100px from the top.\n */\nexport interface IPosition {\n  top?: number;\n  left?: number;\n  bottom?: number;\n  right?: number;\n  [key: string]: number | undefined;\n}\n\nexport interface IPoint {\n  x: number;\n  y: number;\n}\n\nexport interface IPositionDirectionalHintData {\n  targetEdge: RectangleEdge;\n  alignmentEdge?: RectangleEdge;\n  isAuto?: boolean;\n  alignTargetEdge?: boolean;\n}\n\nexport interface IRelativePositions {\n  calloutPosition: IPosition;\n  beakPosition: { position: IPosition | undefined; display: 'block' };\n  directionalClassName: string;\n  submenuDirection: DirectionalHint;\n}\n","import { getDocument } from './dom/getDocument';\nimport { mergeStyles } from '@uifabric/merge-styles';\nimport { EventGroup } from './EventGroup';\nimport { getWindow } from './dom/getWindow';\n\nlet _scrollbarWidth: number;\nlet _bodyScrollDisabledCount = 0;\n\nconst DisabledScrollClassName = mergeStyles({\n  overflow: 'hidden !important' as 'hidden',\n});\n\n/**\n * Placing this attribute on scrollable divs optimizes detection to know\n * if the div is scrollable or not (given we can avoid expensive operations\n * like getComputedStyle.)\n *\n * @public\n */\nexport const DATA_IS_SCROLLABLE_ATTRIBUTE = 'data-is-scrollable';\n\n/**\n * Allows the user to scroll within a element,\n * while preventing the user from scrolling the body\n */\nexport const allowScrollOnElement = (element: HTMLElement | null, events: EventGroup): void => {\n  if (!element) {\n    return;\n  }\n\n  let _previousClientY = 0;\n  let _element: Element | null = null;\n\n  // remember the clientY for future calls of _preventOverscrolling\n  const _saveClientY = (event: TouchEvent): void => {\n    if (event.targetTouches.length === 1) {\n      _previousClientY = event.targetTouches[0].clientY;\n    }\n  };\n\n  // prevent the body from scrolling when the user attempts\n  // to scroll past the top or bottom of the element\n  const _preventOverscrolling = (event: TouchEvent): void => {\n    // only respond to a single-finger touch\n    if (event.targetTouches.length !== 1) {\n      return;\n    }\n\n    // prevent the body touchmove handler from firing\n    // so that scrolling is allowed within the element\n    event.stopPropagation();\n\n    if (!_element) {\n      return;\n    }\n\n    const clientY = event.targetTouches[0].clientY - _previousClientY;\n\n    const scrollableParent = findScrollableParent(event.target as HTMLElement);\n    if (scrollableParent) {\n      _element = scrollableParent;\n    }\n\n    // if the element is scrolled to the top,\n    // prevent the user from scrolling up\n    if (_element.scrollTop === 0 && clientY > 0) {\n      event.preventDefault();\n    }\n\n    // if the element is scrolled to the bottom,\n    // prevent the user from scrolling down\n    if (_element.scrollHeight - _element.scrollTop <= _element.clientHeight && clientY < 0) {\n      event.preventDefault();\n    }\n  };\n\n  events.on(element, 'touchstart', _saveClientY, { passive: false });\n  events.on(element, 'touchmove', _preventOverscrolling, { passive: false });\n\n  _element = element;\n};\n\n/**\n * Same as allowScrollOnElement but does not prevent overscrolling.\n */\nexport const allowOverscrollOnElement = (element: HTMLElement | null, events: EventGroup): void => {\n  if (!element) {\n    return;\n  }\n  const _allowElementScroll = (event: TouchEvent) => {\n    event.stopPropagation();\n  };\n  events.on(element, 'touchmove', _allowElementScroll, { passive: false });\n};\n\nconst _disableIosBodyScroll = (event: TouchEvent) => {\n  event.preventDefault();\n};\n\n/**\n * Disables the body scrolling.\n *\n * @public\n */\nexport function disableBodyScroll(): void {\n  let doc = getDocument();\n\n  if (doc && doc.body && !_bodyScrollDisabledCount) {\n    doc.body.classList.add(DisabledScrollClassName);\n    doc.body.addEventListener('touchmove', _disableIosBodyScroll, { passive: false, capture: false });\n  }\n\n  _bodyScrollDisabledCount++;\n}\n\n/**\n * Enables the body scrolling.\n *\n * @public\n */\nexport function enableBodyScroll(): void {\n  if (_bodyScrollDisabledCount > 0) {\n    let doc = getDocument();\n\n    if (doc && doc.body && _bodyScrollDisabledCount === 1) {\n      doc.body.classList.remove(DisabledScrollClassName);\n      doc.body.removeEventListener('touchmove', _disableIosBodyScroll);\n    }\n\n    _bodyScrollDisabledCount--;\n  }\n}\n\n/**\n * Calculates the width of a scrollbar for the browser/os.\n *\n * @public\n */\nexport function getScrollbarWidth(): number {\n  if (_scrollbarWidth === undefined) {\n    let scrollDiv: HTMLElement = document.createElement('div');\n    scrollDiv.style.setProperty('width', '100px');\n    scrollDiv.style.setProperty('height', '100px');\n    scrollDiv.style.setProperty('overflow', 'scroll');\n    scrollDiv.style.setProperty('position', 'absolute');\n    scrollDiv.style.setProperty('top', '-9999px');\n    document.body.appendChild(scrollDiv);\n    // Get the scrollbar width\n    _scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n    // Delete the DIV\n    document.body.removeChild(scrollDiv);\n  }\n\n  return _scrollbarWidth;\n}\n\n/**\n * Traverses up the DOM for the element with the data-is-scrollable=true attribute, or returns\n * document.body.\n *\n * @public\n */\nexport function findScrollableParent(startingElement: HTMLElement | null): HTMLElement | null {\n  let el: HTMLElement | null = startingElement;\n  const doc = getDocument(startingElement)!;\n\n  // First do a quick scan for the scrollable attribute.\n  while (el && el !== doc.body) {\n    if (el.getAttribute(DATA_IS_SCROLLABLE_ATTRIBUTE) === 'true') {\n      return el;\n    }\n    el = el.parentElement;\n  }\n\n  // If we haven't found it, the use the slower method: compute styles to evaluate if overflow is set.\n  el = startingElement;\n\n  while (el && el !== doc.body) {\n    if (el.getAttribute(DATA_IS_SCROLLABLE_ATTRIBUTE) !== 'false') {\n      const computedStyles = getComputedStyle(el);\n      let overflowY = computedStyles ? computedStyles.getPropertyValue('overflow-y') : '';\n\n      if (overflowY && (overflowY === 'scroll' || overflowY === 'auto')) {\n        return el;\n      }\n    }\n\n    el = el.parentElement;\n  }\n\n  // Fall back to window scroll.\n  if (!el || el === doc.body) {\n    // tslint:disable-next-line:no-any\n    el = getWindow(startingElement) as any;\n  }\n\n  return el;\n}\n","export const DATA_PORTAL_ATTRIBUTE = 'data-portal-element';\n\n/**\n * Identify element as a portal by setting an attribute.\n * @param element - Element to mark as a portal.\n */\nexport function setPortalAttribute(element: HTMLElement): void {\n  element.setAttribute(DATA_PORTAL_ATTRIBUTE, 'true');\n}\n","import { warn } from './warn';\n/**\n * Warns when props are required if a condition is met.\n *\n * @public\n * @param componentName - The name of the component being used.\n * @param props - The props passed into the component.\n * @param requiredProps - The name of the props that are required when the condition is met.\n * @param conditionalPropName - The name of the prop that the condition is based on.\n * @param condition - Whether the condition is met.\n */\nexport function warnConditionallyRequiredProps<P>(\n  componentName: string,\n  props: P,\n  requiredProps: string[],\n  conditionalPropName: string,\n  condition: boolean,\n): void {\n  if (condition === true && process.env.NODE_ENV !== 'production') {\n    for (const requiredPropName of requiredProps) {\n      if (!(requiredPropName in props)) {\n        warn(`${componentName} property '${requiredPropName}' is required when '${conditionalPropName}' is used.'`);\n      }\n    }\n  }\n}\n","import { getStyleOptions } from './StyleOptionsState';\nimport { Stylesheet } from './Stylesheet';\nimport { serializeRuleEntries } from './styleToClassName';\n\n/**\n * Registers keyframe definitions.\n *\n * @public\n */\nexport function keyframes(timeline: { [key: string]: {} }): string {\n  const stylesheet = Stylesheet.getInstance();\n  const name = stylesheet.getClassName();\n\n  const rulesArray: string[] = [];\n\n  for (const prop in timeline) {\n    if (timeline.hasOwnProperty(prop)) {\n      rulesArray.push(prop, '{', serializeRuleEntries(getStyleOptions(), timeline[prop]), '}');\n    }\n  }\n  const rules = rulesArray.join('');\n\n  stylesheet.insertRule(`@keyframes ${name}{${rules}}`, true);\n\n  stylesheet.cacheClassName(name, rules, [], ['keyframes', rules]);\n\n  return name;\n}\n","import { mergeStyles } from '../MergeStyles';\n\n/**\n * Builds a class names object from a given map.\n *\n * @param styles - Map of unprocessed styles.\n * @returns Map of property name to class name.\n */\nexport function buildClassMap<T extends Object>(styles: T): { [key in keyof T]?: string } {\n  let classes: { [key in keyof T]?: string } = {};\n\n  for (let styleName in styles) {\n    if (styles.hasOwnProperty(styleName)) {\n      let className: string;\n\n      Object.defineProperty(classes, styleName, {\n        get: (): string => {\n          if (className === undefined) {\n            // tslint:disable-next-line:no-any\n            className = mergeStyles(styles[styleName] as any).toString();\n          }\n          return className;\n        },\n        enumerable: true,\n        configurable: true,\n      });\n    }\n  }\n\n  return classes;\n}\n","import { IFontFace } from './IRawStyleBase';\nimport { getStyleOptions } from './StyleOptionsState';\nimport { Stylesheet } from './Stylesheet';\nimport { serializeRuleEntries } from './styleToClassName';\n\n/**\n * Registers a font face.\n * @public\n */\nexport function fontFace(font: IFontFace): void {\n  Stylesheet.getInstance().insertRule(`@font-face{${serializeRuleEntries(getStyleOptions(), font as {})}}`, true);\n}\n","import { GlobalSettings, warn } from '@uifabric/utilities';\nimport { IRawStyle, IFontFace, fontFace, mergeStyles, Stylesheet } from '@uifabric/merge-styles';\n\nexport interface IIconSubset {\n  fontFace?: IFontFace;\n  icons: {\n    [key: string]: string | JSX.Element;\n  };\n\n  style?: IRawStyle;\n}\n\nexport interface IIconSubsetRecord extends IIconSubset {\n  isRegistered?: boolean;\n  className?: string;\n}\n\nexport interface IIconRecord {\n  code: string | undefined;\n  subset: IIconSubsetRecord;\n}\n\nexport interface IIconOptions {\n  /**\n   * By default, registering the same set of icons will generate a console warning per duplicate icon\n   * registered, because this scenario can create unexpected consequences.\n   *\n   * Some scenarios include:\n   *\n   * Icon set was previously registered using a different base url.\n   * Icon set was previously registered but a different version was provided.\n   * Icons in a previous registered set overlap with a new set.\n   *\n   * To simply ignore previously registered icons, you can specify to disable warnings. This means\n   * that if an icon which was previous registered is registered again, it will be silently ignored.\n   * However, consider whether the problems listed above will cause issues.\n   **/\n  disableWarnings: boolean;\n\n  /**\n   * @deprecated\n   * Use 'disableWarnings' instead.\n   */\n  warnOnMissingIcons?: boolean;\n}\n\nexport interface IIconRecords {\n  __options: IIconOptions;\n  __remapped: { [key: string]: string };\n  [key: string]: IIconRecord | {};\n}\n\nconst ICON_SETTING_NAME = 'icons';\n\nconst _iconSettings = GlobalSettings.getValue<IIconRecords>(ICON_SETTING_NAME, {\n  __options: {\n    disableWarnings: false,\n    warnOnMissingIcons: true,\n  },\n  __remapped: {},\n});\n\n// Reset icon registration on stylesheet resets.\nconst stylesheet = Stylesheet.getInstance();\n\nif (stylesheet && stylesheet.onReset) {\n  stylesheet.onReset(() => {\n    for (const name in _iconSettings) {\n      if (_iconSettings.hasOwnProperty(name) && !!(_iconSettings[name] as IIconRecord).subset) {\n        (_iconSettings[name] as IIconRecord).subset.className = undefined;\n      }\n    }\n  });\n}\n\n/**\n * Normalizes an icon name for consistent mapping.\n * Current implementation is to convert the icon name to lower case.\n *\n * @param name - Icon name to normalize.\n * @returns {string} Normalized icon name to use for indexing and mapping.\n */\nconst normalizeIconName = (name: string): string => name.toLowerCase();\n\n/**\n * Registers a given subset of icons.\n *\n * @param iconSubset - the icon subset definition.\n */\nexport function registerIcons(iconSubset: IIconSubset, options?: Partial<IIconOptions>): void {\n  let subset = {\n    ...iconSubset,\n    isRegistered: false,\n    className: undefined,\n  };\n  let { icons } = iconSubset;\n\n  // Grab options, optionally mix user provided ones on top.\n  options = options ? { ..._iconSettings.__options, ...options } : _iconSettings.__options;\n\n  for (const iconName in icons) {\n    if (icons.hasOwnProperty(iconName)) {\n      const code = icons[iconName];\n      const normalizedIconName = normalizeIconName(iconName);\n\n      if (_iconSettings[normalizedIconName]) {\n        _warnDuplicateIcon(iconName);\n      } else {\n        _iconSettings[normalizedIconName] = {\n          code,\n          subset,\n        } as IIconRecord;\n      }\n    }\n  }\n}\n\n/**\n * Unregisters icons by name.\n *\n * @param iconNames - List of icons to unregister.\n */\nexport function unregisterIcons(iconNames: string[]): void {\n  const options = _iconSettings.__options;\n\n  for (const iconName of iconNames) {\n    const normalizedIconName = normalizeIconName(iconName);\n    if (_iconSettings[normalizedIconName]) {\n      delete _iconSettings[normalizedIconName];\n    } else {\n      // Warn that we are trying to delete an icon that doesn't exist\n      if (!options.disableWarnings) {\n        warn(`The icon \"${iconName}\" tried to unregister but was not registered.`);\n      }\n    }\n\n    // Delete any aliases for this iconName\n    if (_iconSettings.__remapped[normalizedIconName]) {\n      delete _iconSettings.__remapped[normalizedIconName];\n    }\n\n    // Delete any items that were an alias for this iconName\n    Object.keys(_iconSettings.__remapped).forEach((key: string) => {\n      if (_iconSettings.__remapped[key] === normalizedIconName) {\n        delete _iconSettings.__remapped[key];\n      }\n    });\n  }\n}\n\n/**\n * Remaps one icon name to another.\n */\nexport function registerIconAlias(iconName: string, mappedToName: string): void {\n  _iconSettings.__remapped[normalizeIconName(iconName)] = normalizeIconName(mappedToName);\n}\n\n/**\n * Gets an icon definition. If an icon is requested but the subset has yet to be registered,\n * it will get registered immediately.\n *\n * @public\n * @param name - Name of icon.\n */\nexport function getIcon(name?: string): IIconRecord | undefined {\n  let icon: IIconRecord | undefined = undefined;\n  const options = _iconSettings.__options;\n\n  name = name ? normalizeIconName(name) : '';\n  name = _iconSettings.__remapped[name] || name;\n\n  if (name) {\n    icon = _iconSettings[name!] as IIconRecord;\n\n    if (icon) {\n      let { subset } = icon;\n      if (subset && subset.fontFace) {\n        if (!subset.isRegistered) {\n          fontFace(subset.fontFace);\n          subset.isRegistered = true;\n        }\n\n        if (!subset.className) {\n          subset.className = mergeStyles(subset.style, {\n            fontFamily: subset.fontFace.fontFamily,\n            fontWeight: subset.fontFace.fontWeight || 'normal',\n            fontStyle: subset.fontFace.fontStyle || 'normal',\n          });\n        }\n      }\n    } else {\n      // tslint:disable-next-line:deprecation\n      if (!options.disableWarnings && options.warnOnMissingIcons) {\n        warn(\n          `The icon \"${name}\" was used but not registered. See https://github.com/microsoft/fluentui/wiki/Using-icons for more information.`,\n        );\n      }\n    }\n  }\n\n  return icon;\n}\n\n/**\n * Sets the icon options.\n *\n * @public\n */\nexport function setIconOptions(options: Partial<IIconOptions>): void {\n  _iconSettings.__options = {\n    ..._iconSettings.__options,\n    ...options,\n  };\n}\n\nlet _missingIcons: string[] = [];\nlet _missingIconsTimer: number | undefined = undefined;\n\nfunction _warnDuplicateIcon(iconName: string): void {\n  const options = _iconSettings.__options;\n  const warningDelay = 2000;\n  const maxIconsInMessage = 10;\n\n  if (!options.disableWarnings) {\n    _missingIcons.push(iconName);\n    if (_missingIconsTimer === undefined) {\n      _missingIconsTimer = setTimeout(() => {\n        warn(\n          `Some icons were re-registered. Applications should only call registerIcons for any given ` +\n            `icon once. Redefining what an icon is may have unintended consequences. Duplicates ` +\n            `include: \\n` +\n            _missingIcons.slice(0, maxIconsInMessage).join(', ') +\n            (_missingIcons.length > maxIconsInMessage ? ` (+ ${_missingIcons.length - maxIconsInMessage} more)` : ''),\n        );\n        _missingIconsTimer = undefined;\n        _missingIcons = [];\n      }, warningDelay);\n    }\n  }\n}\n","import { IAnimationStyles, IAnimationVariables } from '../interfaces/index';\nimport { IRawStyle, keyframes } from '@uifabric/merge-styles';\n\n/* Register the keyframes */\n\nconst EASING_FUNCTION_1 = 'cubic-bezier(.1,.9,.2,1)';\nconst EASING_FUNCTION_2 = 'cubic-bezier(.1,.25,.75,.9)';\nconst DURATION_1 = '0.167s';\nconst DURATION_2 = '0.267s';\nconst DURATION_3 = '0.367s';\nconst DURATION_4 = '0.467s';\n\nconst FADE_IN: string = keyframes({\n  from: { opacity: 0 },\n  to: { opacity: 1 },\n});\n\nconst FADE_OUT: string = keyframes({\n  from: { opacity: 1 },\n  to: { opacity: 0, visibility: 'hidden' },\n});\n\nconst SLIDE_RIGHT_IN10: string = _createSlideInX(-10);\nconst SLIDE_RIGHT_IN20: string = _createSlideInX(-20);\nconst SLIDE_RIGHT_IN40: string = _createSlideInX(-40);\nconst SLIDE_RIGHT_IN400: string = _createSlideInX(-400);\nconst SLIDE_LEFT_IN10: string = _createSlideInX(10);\nconst SLIDE_LEFT_IN20: string = _createSlideInX(20);\nconst SLIDE_LEFT_IN40: string = _createSlideInX(40);\nconst SLIDE_LEFT_IN400: string = _createSlideInX(400);\nconst SLIDE_UP_IN10: string = _createSlideInY(10);\nconst SLIDE_UP_IN20: string = _createSlideInY(20);\nconst SLIDE_DOWN_IN10: string = _createSlideInY(-10);\nconst SLIDE_DOWN_IN20: string = _createSlideInY(-20);\n\nconst SLIDE_RIGHT_OUT10: string = _createSlideOutX(10);\nconst SLIDE_RIGHT_OUT20: string = _createSlideOutX(20);\nconst SLIDE_RIGHT_OUT40: string = _createSlideOutX(40);\nconst SLIDE_RIGHT_OUT400: string = _createSlideOutX(400);\nconst SLIDE_LEFT_OUT10: string = _createSlideOutX(-10);\nconst SLIDE_LEFT_OUT20: string = _createSlideOutX(-20);\nconst SLIDE_LEFT_OUT40: string = _createSlideOutX(-40);\nconst SLIDE_LEFT_OUT400: string = _createSlideOutX(-400);\nconst SLIDE_UP_OUT10: string = _createSlideOutY(-10);\nconst SLIDE_UP_OUT20: string = _createSlideOutY(-20);\nconst SLIDE_DOWN_OUT10: string = _createSlideOutY(10);\nconst SLIDE_DOWN_OUT20: string = _createSlideOutY(20);\n\nconst SCALE_UP100: string = keyframes({\n  from: { transform: 'scale3d(.98,.98,1)' },\n  to: { transform: 'scale3d(1,1,1)' },\n});\n\nconst SCALE_DOWN98: string = keyframes({\n  from: { transform: 'scale3d(1,1,1)' },\n  to: { transform: 'scale3d(.98,.98,1)' },\n});\n\nconst SCALE_DOWN100: string = keyframes({\n  from: { transform: 'scale3d(1.03,1.03,1)' },\n  to: { transform: 'scale3d(1,1,1)' },\n});\n\nconst SCALE_UP103: string = keyframes({\n  from: { transform: 'scale3d(1,1,1)' },\n  to: { transform: 'scale3d(1.03,1.03,1)' },\n});\n\nconst ROTATE90: string = keyframes({\n  from: { transform: 'rotateZ(0deg)' },\n  to: { transform: 'rotateZ(90deg)' },\n});\n\nconst ROTATE_N90: string = keyframes({\n  from: { transform: 'rotateZ(0deg)' },\n  to: { transform: 'rotateZ(-90deg)' },\n});\n\n/**\n * Exporting raw duraction values and easing functions to be used in custom animations\n */\nexport const AnimationVariables: IAnimationVariables = {\n  easeFunction1: EASING_FUNCTION_1,\n  easeFunction2: EASING_FUNCTION_2,\n  durationValue1: DURATION_1,\n  durationValue2: DURATION_2,\n  durationValue3: DURATION_3,\n  durationValue4: DURATION_4,\n};\n\n/**\n * All Fabric standard animations, exposed as json objects referencing predefined\n * keyframes. These objects can be mixed in with other class definitions.\n */\nexport const AnimationStyles: IAnimationStyles = {\n  slideRightIn10: _createAnimation(`${FADE_IN},${SLIDE_RIGHT_IN10}`, DURATION_3, EASING_FUNCTION_1),\n  slideRightIn20: _createAnimation(`${FADE_IN},${SLIDE_RIGHT_IN20}`, DURATION_3, EASING_FUNCTION_1),\n  slideRightIn40: _createAnimation(`${FADE_IN},${SLIDE_RIGHT_IN40}`, DURATION_3, EASING_FUNCTION_1),\n  slideRightIn400: _createAnimation(`${FADE_IN},${SLIDE_RIGHT_IN400}`, DURATION_3, EASING_FUNCTION_1),\n  slideLeftIn10: _createAnimation(`${FADE_IN},${SLIDE_LEFT_IN10}`, DURATION_3, EASING_FUNCTION_1),\n  slideLeftIn20: _createAnimation(`${FADE_IN},${SLIDE_LEFT_IN20}`, DURATION_3, EASING_FUNCTION_1),\n  slideLeftIn40: _createAnimation(`${FADE_IN},${SLIDE_LEFT_IN40}`, DURATION_3, EASING_FUNCTION_1),\n  slideLeftIn400: _createAnimation(`${FADE_IN},${SLIDE_LEFT_IN400}`, DURATION_3, EASING_FUNCTION_1),\n  slideUpIn10: _createAnimation(`${FADE_IN},${SLIDE_UP_IN10}`, DURATION_3, EASING_FUNCTION_1),\n  slideUpIn20: _createAnimation(`${FADE_IN},${SLIDE_UP_IN20}`, DURATION_3, EASING_FUNCTION_1),\n  slideDownIn10: _createAnimation(`${FADE_IN},${SLIDE_DOWN_IN10}`, DURATION_3, EASING_FUNCTION_1),\n  slideDownIn20: _createAnimation(`${FADE_IN},${SLIDE_DOWN_IN20}`, DURATION_3, EASING_FUNCTION_1),\n\n  slideRightOut10: _createAnimation(`${FADE_OUT},${SLIDE_RIGHT_OUT10}`, DURATION_3, EASING_FUNCTION_1),\n  slideRightOut20: _createAnimation(`${FADE_OUT},${SLIDE_RIGHT_OUT20}`, DURATION_3, EASING_FUNCTION_1),\n  slideRightOut40: _createAnimation(`${FADE_OUT},${SLIDE_RIGHT_OUT40}`, DURATION_3, EASING_FUNCTION_1),\n  slideRightOut400: _createAnimation(`${FADE_OUT},${SLIDE_RIGHT_OUT400}`, DURATION_3, EASING_FUNCTION_1),\n  slideLeftOut10: _createAnimation(`${FADE_OUT},${SLIDE_LEFT_OUT10}`, DURATION_3, EASING_FUNCTION_1),\n  slideLeftOut20: _createAnimation(`${FADE_OUT},${SLIDE_LEFT_OUT20}`, DURATION_3, EASING_FUNCTION_1),\n  slideLeftOut40: _createAnimation(`${FADE_OUT},${SLIDE_LEFT_OUT40}`, DURATION_3, EASING_FUNCTION_1),\n  slideLeftOut400: _createAnimation(`${FADE_OUT},${SLIDE_LEFT_OUT400}`, DURATION_3, EASING_FUNCTION_1),\n  slideUpOut10: _createAnimation(`${FADE_OUT},${SLIDE_UP_OUT10}`, DURATION_3, EASING_FUNCTION_1),\n  slideUpOut20: _createAnimation(`${FADE_OUT},${SLIDE_UP_OUT20}`, DURATION_3, EASING_FUNCTION_1),\n  slideDownOut10: _createAnimation(`${FADE_OUT},${SLIDE_DOWN_OUT10}`, DURATION_3, EASING_FUNCTION_1),\n  slideDownOut20: _createAnimation(`${FADE_OUT},${SLIDE_DOWN_OUT20}`, DURATION_3, EASING_FUNCTION_1),\n\n  scaleUpIn100: _createAnimation(`${FADE_IN},${SCALE_UP100}`, DURATION_3, EASING_FUNCTION_1),\n  scaleDownIn100: _createAnimation(`${FADE_IN},${SCALE_DOWN100}`, DURATION_3, EASING_FUNCTION_1),\n  scaleUpOut103: _createAnimation(`${FADE_OUT},${SCALE_UP103}`, DURATION_1, EASING_FUNCTION_2),\n  scaleDownOut98: _createAnimation(`${FADE_OUT},${SCALE_DOWN98}`, DURATION_1, EASING_FUNCTION_2),\n\n  fadeIn100: _createAnimation(FADE_IN, DURATION_1, EASING_FUNCTION_2),\n  fadeIn200: _createAnimation(FADE_IN, DURATION_2, EASING_FUNCTION_2),\n  fadeIn400: _createAnimation(FADE_IN, DURATION_3, EASING_FUNCTION_2),\n  fadeIn500: _createAnimation(FADE_IN, DURATION_4, EASING_FUNCTION_2),\n\n  fadeOut100: _createAnimation(FADE_OUT, DURATION_1, EASING_FUNCTION_2),\n  fadeOut200: _createAnimation(FADE_OUT, DURATION_2, EASING_FUNCTION_2),\n  fadeOut400: _createAnimation(FADE_OUT, DURATION_3, EASING_FUNCTION_2),\n  fadeOut500: _createAnimation(FADE_OUT, DURATION_4, EASING_FUNCTION_2),\n\n  rotate90deg: _createAnimation(ROTATE90, '0.1s', EASING_FUNCTION_2),\n  rotateN90deg: _createAnimation(ROTATE_N90, '0.1s', EASING_FUNCTION_2),\n\n  // expandCollapse 100/200/400, delay 100/200\n};\n\nfunction _createAnimation(\n  animationName: string,\n  animationDuration: string,\n  animationTimingFunction: string,\n): IRawStyle {\n  return {\n    animationName,\n    animationDuration,\n    animationTimingFunction,\n    animationFillMode: 'both',\n  };\n}\n\nfunction _createSlideInX(fromX: number): string {\n  return keyframes({\n    from: { transform: `translate3d(${fromX}px,0,0)` },\n    to: { transform: `translate3d(0,0,0)` },\n  });\n}\n\nfunction _createSlideInY(fromY: number): string {\n  return keyframes({\n    from: { transform: `translate3d(0,${fromY}px,0)` },\n    to: { transform: `translate3d(0,0,0)` },\n  });\n}\n\nfunction _createSlideOutX(toX: number): string {\n  return keyframes({\n    from: { transform: `translate3d(0,0,0)` },\n    to: { transform: `translate3d(${toX}px,0,0)` },\n  });\n}\n\nfunction _createSlideOutY(toY: number): string {\n  return keyframes({\n    from: { transform: `translate3d(0,0,0)` },\n    to: { transform: `translate3d(0,${toY}px,0)` },\n  });\n}\n","import { IPalette } from '../interfaces/index';\n\n// When adding or removing a color, make sure you keep this consistent with IColorClassNames\n// by adding the color variants.\nexport const DefaultPalette: IPalette = {\n  themeDarker: '#004578',\n  themeDark: '#005a9e',\n  themeDarkAlt: '#106ebe',\n  themePrimary: '#0078d4',\n  themeSecondary: '#2b88d8',\n  themeTertiary: '#71afe5',\n  themeLight: '#c7e0f4',\n  themeLighter: '#deecf9',\n  themeLighterAlt: '#eff6fc',\n  black: '#000000',\n  blackTranslucent40: 'rgba(0,0,0,.4)',\n  neutralDark: '#201f1e',\n  neutralPrimary: '#323130',\n  neutralPrimaryAlt: '#3b3a39',\n  neutralSecondary: '#605e5c',\n  neutralSecondaryAlt: '#8a8886',\n  neutralTertiary: '#a19f9d',\n  neutralTertiaryAlt: '#c8c6c4',\n  neutralQuaternary: '#d2d0ce',\n  neutralQuaternaryAlt: '#e1dfdd',\n  neutralLight: '#edebe9',\n  neutralLighter: '#f3f2f1',\n  neutralLighterAlt: '#faf9f8',\n  accent: '#0078d4',\n  white: '#ffffff',\n  whiteTranslucent40: 'rgba(255,255,255,.4)',\n  yellowDark: '#d29200',\n  yellow: '#ffb900',\n  yellowLight: '#fff100',\n  orange: '#d83b01',\n  orangeLight: '#ea4300',\n  orangeLighter: '#ff8c00',\n  redDark: '#a4262c',\n  red: '#e81123',\n  magentaDark: '#5c005c',\n  magenta: '#b4009e',\n  magentaLight: '#e3008c',\n  purpleDark: '#32145a',\n  purple: '#5c2d91',\n  purpleLight: '#b4a0ff',\n  blueDark: '#002050',\n  blueMid: '#00188f',\n  blue: '#0078d4',\n  blueLight: '#00bcf2',\n  tealDark: '#004b50',\n  teal: '#008272',\n  tealLight: '#00b294',\n  greenDark: '#004b1c',\n  green: '#107c10',\n  greenLight: '#bad80a',\n};\n","import { IRawStyle, IFontWeight } from '@uifabric/merge-styles';\nimport { IFontStyles } from '../interfaces/index';\n\n// Fallback fonts, if specified system or web fonts are unavailable.\nconst FontFamilyFallbacks = `'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif`;\n\n// Font face names to be registered.\nexport namespace LocalizedFontNames {\n  export const Arabic = 'Segoe UI Web (Arabic)';\n  export const Cyrillic = 'Segoe UI Web (Cyrillic)';\n  export const EastEuropean = 'Segoe UI Web (East European)';\n  export const Greek = 'Segoe UI Web (Greek)';\n  export const Hebrew = 'Segoe UI Web (Hebrew)';\n  export const Thai = 'Leelawadee UI Web';\n  export const Vietnamese = 'Segoe UI Web (Vietnamese)';\n  export const WestEuropean = 'Segoe UI Web (West European)';\n  export const Selawik = 'Selawik Web';\n  export const Armenian = 'Segoe UI Web (Armenian)';\n  export const Georgian = 'Segoe UI Web (Georgian)';\n}\n\n// Font families with fallbacks, for the general regions.\nexport namespace LocalizedFontFamilies {\n  export const Arabic = `'${LocalizedFontNames.Arabic}'`;\n  export const ChineseSimplified = `'Microsoft Yahei UI', Verdana, Simsun`;\n  export const ChineseTraditional = `'Microsoft Jhenghei UI', Pmingliu`;\n  export const Cyrillic = `'${LocalizedFontNames.Cyrillic}'`;\n  export const EastEuropean = `'${LocalizedFontNames.EastEuropean}'`;\n  export const Greek = `'${LocalizedFontNames.Greek}'`;\n  export const Hebrew = `'${LocalizedFontNames.Hebrew}'`;\n  export const Hindi = `'Nirmala UI'`;\n  export const Japanese = `'Yu Gothic UI', 'Meiryo UI', Meiryo, 'MS Pgothic', Osaka`;\n  export const Korean = `'Malgun Gothic', Gulim`;\n  export const Selawik = `'${LocalizedFontNames.Selawik}'`;\n  export const Thai = `'Leelawadee UI Web', 'Kmer UI'`;\n  export const Vietnamese = `'${LocalizedFontNames.Vietnamese}'`;\n  export const WestEuropean = `'${LocalizedFontNames.WestEuropean}'`;\n  export const Armenian = `'${LocalizedFontNames.Armenian}'`;\n  export const Georgian = `'${LocalizedFontNames.Georgian}'`;\n}\n\n// By default, we favor system fonts for the default.\n// All localized fonts use a web font and never use the system font.\nconst defaultFontFamily = `'Segoe UI', '${LocalizedFontNames.WestEuropean}'`;\n\n// Mapping of language prefix to to font family.\nconst LanguageToFontMap = {\n  ar: LocalizedFontFamilies.Arabic,\n  bg: LocalizedFontFamilies.Cyrillic,\n  cs: LocalizedFontFamilies.EastEuropean,\n  el: LocalizedFontFamilies.Greek,\n  et: LocalizedFontFamilies.EastEuropean,\n  he: LocalizedFontFamilies.Hebrew,\n  hi: LocalizedFontFamilies.Hindi,\n  hr: LocalizedFontFamilies.EastEuropean,\n  hu: LocalizedFontFamilies.EastEuropean,\n  ja: LocalizedFontFamilies.Japanese,\n  kk: LocalizedFontFamilies.EastEuropean,\n  ko: LocalizedFontFamilies.Korean,\n  lt: LocalizedFontFamilies.EastEuropean,\n  lv: LocalizedFontFamilies.EastEuropean,\n  pl: LocalizedFontFamilies.EastEuropean,\n  ru: LocalizedFontFamilies.Cyrillic,\n  sk: LocalizedFontFamilies.EastEuropean,\n  'sr-latn': LocalizedFontFamilies.EastEuropean,\n  th: LocalizedFontFamilies.Thai,\n  tr: LocalizedFontFamilies.EastEuropean,\n  uk: LocalizedFontFamilies.Cyrillic,\n  vi: LocalizedFontFamilies.Vietnamese,\n  'zh-hans': LocalizedFontFamilies.ChineseSimplified,\n  'zh-hant': LocalizedFontFamilies.ChineseTraditional,\n  hy: LocalizedFontFamilies.Armenian,\n  ka: LocalizedFontFamilies.Georgian,\n};\n\n// Standard font sizes.\nexport namespace FontSizes {\n  export const mini: string = '10px';\n  export const xSmall: string = '10px';\n  export const small: string = '12px';\n  export const smallPlus: string = '12px';\n  export const medium: string = '14px';\n  export const mediumPlus: string = '16px';\n  export const icon: string = '16px';\n  export const large: string = '18px';\n  export const xLarge: string = '20px';\n  export const xLargePlus: string = '24px';\n  export const xxLarge: string = '28px';\n  export const xxLargePlus: string = '32px';\n  export const superLarge: string = '42px';\n  export const mega: string = '68px';\n}\n\n// Standard font weights.\nexport namespace FontWeights {\n  export const light: IFontWeight = 100;\n  export const semilight: IFontWeight = 300;\n  export const regular: IFontWeight = 400;\n  export const semibold: IFontWeight = 600;\n  export const bold: IFontWeight = 700;\n}\n\n// Standard Icon Sizes.\nexport namespace IconFontSizes {\n  export const xSmall: string = '10px';\n  export const small: string = '12px';\n  export const medium: string = '16px';\n  export const large: string = '20px';\n}\n\nfunction _fontFamilyWithFallbacks(fontFamily: string): string {\n  return `${fontFamily}, ${FontFamilyFallbacks}`;\n}\n\nexport function createFontStyles(localeCode: string | null): IFontStyles {\n  const localizedFont = _getLocalizedFontFamily(localeCode);\n  let fontFamilyWithFallback = _fontFamilyWithFallbacks(localizedFont);\n\n  const fontStyles = {\n    tiny: _createFont(FontSizes.mini, FontWeights.regular, fontFamilyWithFallback),\n    xSmall: _createFont(FontSizes.xSmall, FontWeights.regular, fontFamilyWithFallback),\n    small: _createFont(FontSizes.small, FontWeights.regular, fontFamilyWithFallback),\n    smallPlus: _createFont(FontSizes.smallPlus, FontWeights.regular, fontFamilyWithFallback),\n    medium: _createFont(FontSizes.medium, FontWeights.regular, fontFamilyWithFallback),\n    mediumPlus: _createFont(FontSizes.mediumPlus, FontWeights.regular, fontFamilyWithFallback),\n    large: _createFont(FontSizes.large, FontWeights.regular, fontFamilyWithFallback),\n    xLarge: _createFont(FontSizes.xLarge, FontWeights.semibold, fontFamilyWithFallback),\n    xLargePlus: _createFont(FontSizes.xLargePlus, FontWeights.semibold, fontFamilyWithFallback),\n    xxLarge: _createFont(FontSizes.xxLarge, FontWeights.semibold, fontFamilyWithFallback),\n    xxLargePlus: _createFont(FontSizes.xxLargePlus, FontWeights.semibold, fontFamilyWithFallback),\n    superLarge: _createFont(FontSizes.superLarge, FontWeights.semibold, fontFamilyWithFallback),\n    mega: _createFont(FontSizes.mega, FontWeights.semibold, fontFamilyWithFallback),\n  };\n\n  return fontStyles;\n}\n\n/**\n * If there is a localized font for this language, return that.\n * Returns undefined if there is no localized font for that language.\n */\nfunction _getLocalizedFontFamily(language: string | null): string {\n  for (let lang in LanguageToFontMap) {\n    if (LanguageToFontMap.hasOwnProperty(lang) && language && lang.indexOf(language) === 0) {\n      // tslint:disable-next-line:no-any\n      return (LanguageToFontMap as any)[lang];\n    }\n  }\n\n  return defaultFontFamily;\n}\n\nfunction _createFont(size: string, weight: IFontWeight, fontFamily: string): IRawStyle {\n  return {\n    fontFamily: fontFamily,\n    MozOsxFontSmoothing: 'grayscale',\n    WebkitFontSmoothing: 'antialiased',\n    fontSize: size,\n    fontWeight: weight,\n  };\n}\n","import { IEffects } from '../interfaces/index';\n\nexport const DefaultEffects: IEffects = {\n  elevation4: '0 1.6px 3.6px 0 rgba(0, 0, 0, 0.132), 0 0.3px 0.9px 0 rgba(0, 0, 0, 0.108)',\n  elevation8: '0 3.2px 7.2px 0 rgba(0, 0, 0, 0.132), 0 0.6px 1.8px 0 rgba(0, 0, 0, 0.108)',\n  elevation16: '0 6.4px 14.4px 0 rgba(0, 0, 0, 0.132), 0 1.2px 3.6px 0 rgba(0, 0, 0, 0.108)',\n  elevation64: '0 25.6px 57.6px 0 rgba(0, 0, 0, 0.22), 0 4.8px 14.4px 0 rgba(0, 0, 0, 0.18)',\n\n  roundedCorner2: '2px',\n};\n","import { getDocument } from './dom/getDocument';\nimport { getItem, setItem } from './localStorage';\n\n// Default to undefined so that we initialize on first read.\nlet _language: string | null;\n\n/**\n * Gets the rtl state of the page (returns true if in rtl.)\n *\n * @public\n */\nexport function getLanguage(): string | null {\n  if (_language === undefined) {\n    let doc = getDocument();\n    const savedLanguage = getItem('language');\n\n    if (savedLanguage !== null) {\n      _language = savedLanguage;\n    }\n\n    if (_language === undefined && doc) {\n      _language = doc.documentElement.getAttribute('lang');\n    }\n\n    if (_language === undefined) {\n      _language = 'en';\n    }\n  }\n\n  return _language;\n}\n\n/**\n * Sets the rtl state of the page (by adjusting the dir attribute of the html element.)\n *\n * @public\n */\nexport function setLanguage(language: string, avoidPersisting: boolean = false): void {\n  let doc = getDocument();\n\n  if (doc) {\n    doc.documentElement.setAttribute('lang', language);\n  }\n\n  if (!avoidPersisting) {\n    setItem('language', language);\n  }\n\n  _language = language;\n}\n","import { fontFace, IFontWeight } from '@uifabric/merge-styles';\nimport { IFontStyles } from '../interfaces/index';\nimport { createFontStyles, FontWeights, LocalizedFontFamilies, LocalizedFontNames } from './fonts';\nimport { getLanguage, getWindow } from '@uifabric/utilities';\nimport { IFabricConfig } from '../interfaces/IFabricConfig';\n\n// Default urls.\nconst DefaultBaseUrl = 'https://static2.sharepointonline.com/files/fabric/assets';\n\n// Standard font styling.\nexport const DefaultFontStyles: IFontStyles = createFontStyles(getLanguage());\n\nfunction _registerFontFace(fontFamily: string, url: string, fontWeight?: IFontWeight, localFontName?: string): void {\n  fontFamily = `'${fontFamily}'`;\n\n  const localFontSrc = localFontName !== undefined ? `local('${localFontName}'),` : '';\n\n  fontFace({\n    fontFamily,\n    src: localFontSrc + `url('${url}.woff2') format('woff2'),` + `url('${url}.woff') format('woff')`,\n    fontWeight,\n    fontStyle: 'normal',\n    fontDisplay: 'swap',\n  });\n}\n\nfunction _registerFontFaceSet(\n  baseUrl: string,\n  fontFamily: string,\n  cdnFolder: string,\n  cdnFontName: string = 'segoeui',\n  localFontName?: string,\n): void {\n  const urlBase = `${baseUrl}/${cdnFolder}/${cdnFontName}`;\n\n  _registerFontFace(fontFamily, urlBase + '-light', FontWeights.light, localFontName && localFontName + ' Light');\n  _registerFontFace(\n    fontFamily,\n    urlBase + '-semilight',\n    FontWeights.semilight,\n    localFontName && localFontName + ' SemiLight',\n  );\n  _registerFontFace(fontFamily, urlBase + '-regular', FontWeights.regular, localFontName);\n  _registerFontFace(\n    fontFamily,\n    urlBase + '-semibold',\n    FontWeights.semibold,\n    localFontName && localFontName + ' SemiBold',\n  );\n  _registerFontFace(fontFamily, urlBase + '-bold', FontWeights.bold, localFontName && localFontName + ' Bold');\n}\n\nexport function registerDefaultFontFaces(baseUrl: string): void {\n  if (baseUrl) {\n    const fontUrl = `${baseUrl}/fonts`;\n\n    // Produce @font-face definitions for all supported web fonts.\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Thai, 'leelawadeeui-thai', 'leelawadeeui');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Arabic, 'segoeui-arabic');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Cyrillic, 'segoeui-cyrillic');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.EastEuropean, 'segoeui-easteuropean');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Greek, 'segoeui-greek');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Hebrew, 'segoeui-hebrew');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Vietnamese, 'segoeui-vietnamese');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.WestEuropean, 'segoeui-westeuropean', 'segoeui', 'Segoe UI');\n    _registerFontFaceSet(fontUrl, LocalizedFontFamilies.Selawik, 'selawik', 'selawik');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Armenian, 'segoeui-armenian');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Georgian, 'segoeui-georgian');\n\n    // Leelawadee UI (Thai) does not have a 'light' weight, so we override\n    // the font-face generated above to use the 'semilight' weight instead.\n    _registerFontFace('Leelawadee UI Web', `${fontUrl}/leelawadeeui-thai/leelawadeeui-semilight`, FontWeights.light);\n\n    // Leelawadee UI (Thai) does not have a 'semibold' weight, so we override\n    // the font-face generated above to use the 'bold' weight instead.\n    _registerFontFace('Leelawadee UI Web', `${fontUrl}/leelawadeeui-thai/leelawadeeui-bold`, FontWeights.semibold);\n  }\n}\n\n/**\n * Reads the fontBaseUrl from window.FabricConfig.fontBaseUrl or falls back to a default.\n */\nfunction _getFontBaseUrl(): string {\n  let win = getWindow();\n\n  // tslint:disable-next-line:no-string-literal no-any\n  let fabricConfig: IFabricConfig = win ? win['FabricConfig'] : undefined;\n\n  return fabricConfig && fabricConfig.fontBaseUrl !== undefined ? fabricConfig.fontBaseUrl : DefaultBaseUrl;\n}\n\n/**\n * Register the font faces.\n */\nregisterDefaultFontFaces(_getFontBaseUrl());\n","import { getWindow } from './dom/getWindow';\n\n/**\n * Fetches an item from local storage without throwing an exception\n * @param key The key of the item to fetch from local storage\n */\nexport function getItem(key: string): string | null {\n  let result = null;\n  try {\n    const win = getWindow();\n    result = win ? win.localStorage.getItem(key) : null;\n  } catch (e) {\n    /* Eat the exception */\n  }\n  return result;\n}\n\n/**\n * Inserts an item into local storage without throwing an exception\n * @param key The key of the item to add to local storage\n * @param data The data to put into local storage\n */\nexport function setItem(key: string, data: string): void {\n  try {\n    const win = getWindow();\n\n    win && win.localStorage.setItem(key, data);\n  } catch (e) {\n    /* Eat the exception */\n  }\n}\n","export const HighContrastSelector = '@media screen and (-ms-high-contrast: active)';\nexport const HighContrastSelectorWhite = '@media screen and (-ms-high-contrast: black-on-white)';\nexport const HighContrastSelectorBlack = '@media screen and (-ms-high-contrast: white-on-black)';\n\nexport const ScreenWidthMinSmall = 320;\nexport const ScreenWidthMinMedium = 480;\nexport const ScreenWidthMinLarge = 640;\nexport const ScreenWidthMinXLarge = 1024;\nexport const ScreenWidthMinXXLarge = 1366;\nexport const ScreenWidthMinXXXLarge = 1920;\nexport const ScreenWidthMaxSmall = ScreenWidthMinMedium - 1;\nexport const ScreenWidthMaxMedium = ScreenWidthMinLarge - 1;\nexport const ScreenWidthMaxLarge = ScreenWidthMinXLarge - 1;\nexport const ScreenWidthMaxXLarge = ScreenWidthMinXXLarge - 1;\nexport const ScreenWidthMaxXXLarge = ScreenWidthMinXXXLarge - 1;\n\nexport const ScreenWidthMinUhfMobile = 768;\n\nexport function getScreenSelector(min: number, max: number): string {\n  return `@media only screen and (min-width: ${min}px) and (max-width: ${max}px)`;\n}\n","export namespace ZIndexes {\n  export const Nav: number = 1;\n  /**\n   * @deprecated ScrollablePane\n   */\n  export const ScrollablePane: number = 1;\n  export const FocusStyle: number = 1;\n  export const Coachmark: number = 1000;\n  export const Layer: number = 1000000;\n  export const KeytipLayer: number = 1000001;\n}\n","import { IRawStyle } from '@uifabric/merge-styles';\nimport { IGetFocusStylesOptions, ITheme } from '../interfaces/index';\nimport { HighContrastSelector } from './CommonStyles';\nimport { IsFocusVisibleClassName } from '@uifabric/utilities';\nimport { ZIndexes } from './zIndexes';\n\n/**\n * Generates a focus style which can be used to define an :after focus border.\n *\n * @param theme - The theme object to use.\n * @param options - Options to customize the focus border.\n * @returns The style object.\n */\nexport function getFocusStyle(theme: ITheme, options?: IGetFocusStylesOptions): IRawStyle;\n/**\n * Generates a focus style which can be used to define an :after focus border.\n *\n * @param theme - The theme object to use.\n * @param inset - The number of pixels to inset the border.\n * @param position - The positioning applied to the container. Must\n * be 'relative' or 'absolute' so that the focus border can live around it.\n * @param highContrastStyle - Style for high contrast mode.\n * @param borderColor - Color of the border.\n * @param outlineColor - Color of the outline.\n * @param isFocusedOnly - If the styles should apply on focus or not.\n * @returns The style object.\n * @deprecated Use the object parameter version instead.\n */\nexport function getFocusStyle(\n  theme: ITheme,\n  inset?: number,\n  position?: 'relative' | 'absolute',\n  highContrastStyle?: IRawStyle | undefined,\n  borderColor?: string,\n  outlineColor?: string,\n  isFocusedOnly?: boolean,\n): IRawStyle;\nexport function getFocusStyle(\n  theme: ITheme,\n  insetOrOptions?: number | IGetFocusStylesOptions,\n  position?: 'relative' | 'absolute',\n  highContrastStyle?: IRawStyle,\n  borderColor?: string,\n  outlineColor?: string,\n  isFocusedOnly?: boolean,\n): IRawStyle {\n  if (typeof insetOrOptions === 'number' || !insetOrOptions) {\n    return _getFocusStyleInternal(theme, {\n      inset: insetOrOptions,\n      position,\n      highContrastStyle,\n      borderColor,\n      outlineColor,\n      isFocusedOnly,\n    });\n  } else {\n    return _getFocusStyleInternal(theme, insetOrOptions);\n  }\n}\n\nfunction _getFocusStyleInternal(theme: ITheme, options: IGetFocusStylesOptions = {}): IRawStyle {\n  const {\n    inset = 0,\n    width = 1,\n    position = 'relative',\n    highContrastStyle,\n    borderColor = theme.palette.white,\n    outlineColor = theme.palette.neutralSecondary,\n    isFocusedOnly = true,\n  } = options;\n\n  return {\n    // Clear browser-specific focus styles and use 'transparent' as placeholder for focus style.\n    outline: 'transparent',\n    // Requirement because pseudo-element is absolutely positioned.\n    position,\n\n    selectors: {\n      // Clear the focus border in Firefox.\n      // Reference: http://stackoverflow.com/a/199319/1436671\n      '::-moz-focus-inner': {\n        border: '0',\n      },\n\n      // When the element that uses this mixin is in a :focus state, add a pseudo-element to\n      // create a border.\n      [`.${IsFocusVisibleClassName} &${isFocusedOnly ? ':focus' : ''}:after`]: {\n        content: '\"\"',\n        position: 'absolute',\n        left: inset + 1,\n        top: inset + 1,\n        bottom: inset + 1,\n        right: inset + 1,\n        border: `${width}px solid ${borderColor}`,\n        outline: `${width}px solid ${outlineColor}`,\n        zIndex: ZIndexes.FocusStyle,\n        selectors: {\n          [HighContrastSelector]: highContrastStyle,\n        },\n      },\n    },\n  };\n}\n\n/**\n * Generates style to clear browser specific focus styles.\n */\nexport function focusClear(): IRawStyle {\n  return {\n    selectors: {\n      '&::-moz-focus-inner': {\n        // Clear the focus border in Firefox. Reference: http://stackoverflow.com/a/199319/1436671\n        border: 0,\n      },\n      '&': {\n        // Clear browser specific focus styles and use transparent as placeholder for focus style\n        outline: 'transparent',\n      },\n    },\n  };\n}\n\n/**\n * Generates a style which can be used to set a border on focus.\n *\n * @param theme - The theme object to use.\n * @param inset - The number of pixels to inset the border (default 0)\n * @param width - The border width in pixels (default 1)\n * @param color - Color of the outline (default `theme.palette.neutralSecondary`)\n * @returns The style object.\n */\nexport function getFocusOutlineStyle(theme: ITheme, inset: number = 0, width: number = 1, color?: string): IRawStyle {\n  return {\n    selectors: {\n      [`:global(${IsFocusVisibleClassName}) &:focus`]: {\n        outline: `${width} solid ${color || theme.palette.neutralSecondary}`,\n        outlineOffset: `${-inset}px`,\n      },\n    },\n  };\n}\n\n/**\n * Generates text input border styles on focus.\n *\n * @param borderColor - Color of the border.\n * @param borderRadius - Radius of the border.\n * @param borderType - Type of the border.\n * @param borderPosition - Position of the border relative to the input element (default to -1\n * as it's the most common border width of the input element)\n * @returns The style object.\n */\nexport const getInputFocusStyle = (\n  borderColor: string,\n  borderRadius: string | number,\n  borderType: 'border' | 'borderBottom' = 'border',\n  borderPosition: number = -1,\n): IRawStyle => {\n  const isBorderBottom = borderType === 'borderBottom';\n\n  return {\n    borderColor,\n    selectors: {\n      ':after': {\n        pointerEvents: 'none',\n        content: \"''\",\n        position: 'absolute',\n        left: isBorderBottom ? 0 : borderPosition,\n        top: borderPosition,\n        bottom: borderPosition,\n        right: isBorderBottom ? 0 : borderPosition,\n        [borderType]: `2px solid ${borderColor}`,\n        borderRadius,\n        width: borderType === 'borderBottom' ? '100%' : undefined,\n        selectors: {\n          [HighContrastSelector]: {\n            [borderType === 'border' ? 'borderColor' : 'borderBottomColor']: 'Highlight',\n          },\n        },\n      },\n    },\n  };\n};\n","import { IRawStyle } from '@uifabric/merge-styles';\n\nexport const hiddenContentStyle: IRawStyle = {\n  position: 'absolute',\n  width: 1,\n  height: 1,\n  margin: -1,\n  padding: 0,\n  border: 0,\n  overflow: 'hidden',\n};\n","import { IRawStyle, keyframes } from '@uifabric/merge-styles';\n\nconst DEFAULT_DURATION = '14s';\nconst DEFAULT_DELAY = '2s';\nconst DEFAULT_ITERATION_COUNT = '1';\n\nfunction _continuousPulseStepOne(beaconColorOne: string, innerDimension: string): IRawStyle {\n  return {\n    borderColor: beaconColorOne,\n    borderWidth: '0px',\n    width: innerDimension,\n    height: innerDimension,\n  };\n}\n\nfunction _continuousPulseStepTwo(borderWidth: string): IRawStyle {\n  return {\n    opacity: 1,\n    borderWidth: borderWidth,\n  };\n}\n\nfunction _continuousPulseStepThree(): IRawStyle {\n  return {\n    opacity: 1,\n  };\n}\n\nfunction _continuousPulseStepFour(beaconColorTwo: string, outerDimension: string): IRawStyle {\n  return {\n    borderWidth: '0',\n    width: outerDimension,\n    height: outerDimension,\n    opacity: 0,\n    borderColor: beaconColorTwo,\n  };\n}\n\nfunction _continuousPulseStepFive(beaconColorOne: string, innerDimension: string): IRawStyle {\n  return {\n    ..._continuousPulseStepOne(beaconColorOne, innerDimension),\n    ...{\n      opacity: 0,\n    },\n  };\n}\n\nfunction _continuousPulseAnimationDouble(\n  beaconColorOne: string,\n  beaconColorTwo: string,\n  innerDimension: string,\n  outerDimension: string,\n  borderWidth: string,\n): string {\n  return keyframes({\n    '0%': _continuousPulseStepOne(beaconColorOne, innerDimension),\n    '1.42%': _continuousPulseStepTwo(borderWidth),\n    '3.57%': _continuousPulseStepThree(),\n    '7.14%': _continuousPulseStepFour(beaconColorTwo, outerDimension),\n    '8%': _continuousPulseStepFive(beaconColorOne, innerDimension),\n    '29.99%': _continuousPulseStepFive(beaconColorOne, innerDimension),\n    '30%': _continuousPulseStepOne(beaconColorOne, innerDimension),\n    '31.42%': _continuousPulseStepTwo(borderWidth),\n    '33.57%': _continuousPulseStepThree(),\n    '37.14%': _continuousPulseStepFour(beaconColorTwo, outerDimension),\n    '38%': _continuousPulseStepFive(beaconColorOne, innerDimension),\n    '79.42%': _continuousPulseStepFive(beaconColorOne, innerDimension),\n    '79.43': _continuousPulseStepOne(beaconColorOne, innerDimension),\n    '81.85': _continuousPulseStepTwo(borderWidth),\n    '83.42': _continuousPulseStepThree(),\n    '87%': _continuousPulseStepFour(beaconColorTwo, outerDimension),\n    '100%': {},\n  });\n}\n\nfunction _continuousPulseAnimationSingle(\n  beaconColorOne: string,\n  beaconColorTwo: string,\n  innerDimension: string,\n  outerDimension: string,\n  borderWidth: string,\n): string {\n  return keyframes({\n    '0%': _continuousPulseStepOne(beaconColorOne, innerDimension),\n    '14.2%': _continuousPulseStepTwo(borderWidth),\n    '35.7%': _continuousPulseStepThree(),\n    '71.4%': _continuousPulseStepFour(beaconColorTwo, outerDimension),\n    '100%': {},\n  });\n}\n\nfunction _createDefaultAnimation(animationName: string, delayLength?: string): IRawStyle {\n  return {\n    animationName,\n    animationIterationCount: DEFAULT_ITERATION_COUNT,\n    animationDuration: DEFAULT_DURATION,\n    animationDelay: delayLength || DEFAULT_DELAY,\n  };\n}\n\nexport const PulsingBeaconAnimationStyles = {\n  continuousPulseAnimationDouble: _continuousPulseAnimationDouble,\n  continuousPulseAnimationSingle: _continuousPulseAnimationSingle,\n  createDefaultAnimation: _createDefaultAnimation,\n};\n","import { ITheme } from '../interfaces/index';\nimport { Stylesheet } from '@uifabric/merge-styles';\nimport { memoizeFunction } from '@uifabric/utilities';\n\nexport type GlobalClassNames<IStyles> = Record<keyof IStyles, string>;\n\n/**\n * Internal memoized function which simply takes in the class map and the\n * disable boolean. These immutable values can be memoized.\n */\nconst _getGlobalClassNames = memoizeFunction(\n  <T>(classNames: GlobalClassNames<T>, disableGlobalClassNames?: boolean): Partial<GlobalClassNames<T>> => {\n    const styleSheet = Stylesheet.getInstance();\n\n    if (disableGlobalClassNames) {\n      // disable global classnames\n      return Object.keys(classNames).reduce((acc: {}, className: string) => {\n        acc[className] = styleSheet.getClassName(classNames[className]);\n        return acc;\n      }, {});\n    }\n\n    // use global classnames\n    return classNames;\n  },\n);\n\n/**\n * Checks for the `disableGlobalClassNames` property on the `theme` to determine if it should return `classNames`\n * Note that calls to this function are memoized.\n *\n * @param classNames - The collection of global class names that apply when the flag is false. Make sure to pass in\n * the same instance on each call to benefit from memoization.\n * @param theme - The theme to check the flag on\n * @param disableGlobalClassNames - Optional. Explicitly opt in/out of disabling global classnames. Defaults to false.\n */\nexport function getGlobalClassNames<T>(\n  classNames: GlobalClassNames<T>,\n  theme: ITheme,\n  disableGlobalClassNames?: boolean,\n): Partial<GlobalClassNames<T>> {\n  return _getGlobalClassNames(\n    classNames,\n    disableGlobalClassNames !== undefined ? disableGlobalClassNames : theme.disableGlobalClassNames,\n  );\n}\n","/**\n * Simple deep merge function. Takes all arguments and returns a deep copy of the objects merged\n * together in the order provided. If an object creates a circular reference, it will assign the\n * original reference.\n */\nexport function merge<T = {}>(target: Partial<T>, ...args: (Partial<T> | null | undefined | false)[]): T {\n  for (const arg of args) {\n    _merge(target || {}, arg as Partial<T>);\n  }\n\n  return target as T;\n}\n\n/**\n * The _merge helper iterates through all props on source and assigns them to target.\n * When the value is an object, we will create a deep clone of the object. However if\n * there is a circular reference, the value will not be deep cloned and will persist\n * the reference.\n */\n// tslint:disable-next-line:no-any\nfunction _merge<T extends Object>(target: T, source: T, circularReferences: any[] = []): T {\n  circularReferences.push(source);\n\n  for (let name in source) {\n    if (source.hasOwnProperty(name)) {\n      const value: T[Extract<keyof T, string>] = source[name];\n      if (typeof value === 'object' && value !== null) {\n        const isCircularReference = circularReferences.indexOf(value) > -1;\n        target[name] = (isCircularReference\n          ? value\n          : _merge(target[name] || {}, value, circularReferences)) as T[Extract<keyof T, string>];\n      } else {\n        target[name] = value;\n      }\n    }\n  }\n\n  circularReferences.pop();\n\n  return target;\n}\n","import { ISpacing } from '../interfaces/index';\n\nexport const DefaultSpacing: ISpacing = {\n  s2: '4px',\n  s1: '8px',\n  m: '16px',\n  l1: '20px',\n  l2: '32px',\n};\n","import { Customizations, merge, getWindow } from '@uifabric/utilities';\nimport { IPalette, ISemanticColors, ITheme, IPartialTheme, IFontStyles } from '../interfaces/index';\nimport { DefaultFontStyles } from './DefaultFontStyles';\nimport { DefaultPalette } from './DefaultPalette';\nimport { DefaultSpacing } from './DefaultSpacing';\nimport { loadTheme as legacyLoadTheme } from '@microsoft/load-themed-styles';\nimport { DefaultEffects } from './DefaultEffects';\n\nlet _theme: ITheme = createTheme({\n  palette: DefaultPalette,\n  semanticColors: _makeSemanticColorsFromPalette(DefaultPalette, false, false),\n  fonts: DefaultFontStyles,\n  isInverted: false,\n  disableGlobalClassNames: false,\n});\nlet _onThemeChangeCallbacks: Array<(theme: ITheme) => void> = [];\n\nexport const ThemeSettingName = 'theme';\n\nif (!Customizations.getSettings([ThemeSettingName]).theme) {\n  const win = getWindow();\n\n  // tslint:disable:no-string-literal no-any\n  if (win && (win as any)['FabricConfig'] && (win as any)['FabricConfig'].theme) {\n    _theme = createTheme((win as any)['FabricConfig'].theme);\n  }\n  // tslint:enable:no-string-literal no-any\n\n  // Set the default theme.\n  Customizations.applySettings({ [ThemeSettingName]: _theme });\n}\n\n/**\n * Gets the theme object\n * @param depComments - Whether to include deprecated tags as comments for deprecated slots.\n */\nexport function getTheme(depComments: boolean = false): ITheme {\n  if (depComments === true) {\n    _theme = createTheme({}, depComments);\n  }\n  return _theme;\n}\n\n/**\n * Registers a callback that gets called whenever the theme changes.\n * This should only be used when the component cannot automatically get theme changes through its state.\n * This will not register duplicate callbacks.\n */\nexport function registerOnThemeChangeCallback(callback: (theme: ITheme) => void): void {\n  if (_onThemeChangeCallbacks.indexOf(callback) === -1) {\n    _onThemeChangeCallbacks.push(callback);\n  }\n}\n\n/**\n * See registerOnThemeChangeCallback().\n * Removes previously registered callbacks.\n */\nexport function removeOnThemeChangeCallback(callback: (theme: ITheme) => void): void {\n  const i = _onThemeChangeCallbacks.indexOf(callback);\n  if (i === -1) {\n    return;\n  }\n\n  _onThemeChangeCallbacks.splice(i, 1);\n}\n\n/**\n * Applies the theme, while filling in missing slots.\n * @param theme - Partial theme object.\n * @param depComments - Whether to include deprecated tags as comments for deprecated slots.\n */\nexport function loadTheme(theme: IPartialTheme, depComments: boolean = false): ITheme {\n  _theme = createTheme(theme, depComments);\n\n  // Invoke the legacy method of theming the page as well.\n  legacyLoadTheme({ ..._theme.palette, ..._theme.semanticColors, ..._theme.effects, ..._loadFonts(_theme) });\n\n  Customizations.applySettings({ [ThemeSettingName]: _theme });\n\n  _onThemeChangeCallbacks.forEach((callback: (theme: ITheme) => void) => {\n    try {\n      callback(_theme);\n    } catch (e) {\n      // don't let a bad callback break everything else\n    }\n  });\n\n  return _theme;\n}\n\n/**\n * Loads font variables into a JSON object.\n * @param theme - The theme object\n */\nfunction _loadFonts(theme: ITheme): { [name: string]: string } {\n  const lines = {};\n\n  for (const fontName of Object.keys(theme.fonts)) {\n    const font = theme.fonts[fontName];\n    for (const propName of Object.keys(font)) {\n      const name = fontName + propName.charAt(0).toUpperCase() + propName.slice(1);\n      let value = font[propName];\n      if (propName === 'fontSize' && typeof value === 'number') {\n        // if it's a number, convert it to px by default like our theming system does\n        value = value + 'px';\n      }\n      lines[name] = value;\n    }\n  }\n  return lines;\n}\n\n/**\n * Creates a custom theme definition which can be used with the Customizer.\n * @param theme - Partial theme object.\n * @param depComments - Whether to include deprecated tags as comments for deprecated slots.\n */\nexport function createTheme(theme: IPartialTheme, depComments: boolean = false): ITheme {\n  let newPalette = { ...DefaultPalette, ...theme.palette };\n\n  if (!theme.palette || !theme.palette.accent) {\n    newPalette.accent = newPalette.themePrimary;\n  }\n\n  // mix in custom overrides with good slots first, since custom overrides might be used in fixing deprecated slots\n  let newSemanticColors = {\n    ..._makeSemanticColorsFromPalette(newPalette, !!theme.isInverted, depComments),\n    ...theme.semanticColors,\n  };\n\n  let defaultFontStyles: IFontStyles = { ...DefaultFontStyles };\n\n  if (theme.defaultFontStyle) {\n    for (const fontStyle of Object.keys(defaultFontStyles)) {\n      defaultFontStyles[fontStyle] = merge({}, defaultFontStyles[fontStyle], theme.defaultFontStyle);\n    }\n  }\n\n  if (theme.fonts) {\n    for (const fontStyle of Object.keys(theme.fonts)) {\n      defaultFontStyles[fontStyle] = merge({}, defaultFontStyles[fontStyle], theme.fonts[fontStyle]);\n    }\n  }\n\n  return {\n    palette: newPalette,\n    fonts: {\n      ...defaultFontStyles,\n    },\n    rtl: theme.rtl,\n    semanticColors: newSemanticColors,\n    isInverted: !!theme.isInverted,\n    disableGlobalClassNames: !!theme.disableGlobalClassNames,\n    spacing: {\n      ...DefaultSpacing,\n      ...theme.spacing,\n    },\n    effects: {\n      ...DefaultEffects,\n      ...theme.effects,\n    },\n  };\n}\n\n/**\n * Helper to pull a given property name from a given set of sources, in order, if available.\n * Otherwise returns the property name.\n */\nfunction _expandFrom<TRetVal, TMapType>(propertyName: string | TRetVal | undefined, ...maps: TMapType[]): TRetVal {\n  if (propertyName) {\n    for (const map of maps) {\n      if (map[propertyName as string]) {\n        return map[propertyName as string];\n      }\n    }\n  }\n\n  return propertyName as TRetVal;\n}\n\n// Generates all the semantic slot colors based on the Fabric palette.\n// We'll use these as fallbacks for semantic slots that the passed in theme did not define.\nfunction _makeSemanticColorsFromPalette(p: IPalette, isInverted: boolean, depComments: boolean): ISemanticColors {\n  let toReturn: ISemanticColors = {\n    // DEFAULTS\n    bodyBackground: p.white,\n    bodyBackgroundHovered: p.neutralLighter,\n    bodyBackgroundChecked: p.neutralLight,\n    bodyStandoutBackground: p.neutralLighterAlt,\n    bodyFrameBackground: p.white,\n    bodyFrameDivider: p.neutralLight,\n    bodyText: p.neutralPrimary,\n    bodyTextChecked: p.black,\n    bodySubtext: p.neutralSecondary,\n    bodyDivider: p.neutralLight,\n    disabledBodyText: p.neutralTertiary,\n    disabledBodySubtext: p.neutralTertiaryAlt,\n    disabledBorder: p.neutralTertiaryAlt,\n    focusBorder: p.neutralSecondary,\n    variantBorder: p.neutralLight,\n    variantBorderHovered: p.neutralTertiary,\n    defaultStateBackground: p.neutralLighterAlt,\n\n    // LINKS\n    actionLink: p.neutralPrimary,\n    actionLinkHovered: p.neutralDark,\n    link: p.themePrimary,\n    linkHovered: p.themeDarker,\n\n    // BUTTONS\n    buttonBackground: p.white,\n    buttonBackgroundChecked: p.neutralTertiaryAlt,\n    buttonBackgroundHovered: p.neutralLighter,\n    buttonBackgroundCheckedHovered: p.neutralLight,\n    buttonBackgroundPressed: p.neutralLight,\n    buttonBackgroundDisabled: p.neutralLighter,\n    buttonBorder: p.neutralSecondaryAlt,\n    buttonText: p.neutralPrimary,\n    buttonTextHovered: p.neutralDark,\n    buttonTextChecked: p.neutralDark,\n    buttonTextCheckedHovered: p.black,\n    buttonTextPressed: p.neutralDark,\n    buttonTextDisabled: p.neutralTertiary,\n    buttonBorderDisabled: p.neutralLighter,\n\n    primaryButtonBackground: p.themePrimary,\n    primaryButtonBackgroundHovered: p.themeDarkAlt,\n    primaryButtonBackgroundPressed: p.themeDark,\n    primaryButtonBackgroundDisabled: p.neutralLighter,\n    primaryButtonBorder: 'transparent',\n    primaryButtonText: p.white,\n    primaryButtonTextHovered: p.white,\n    primaryButtonTextPressed: p.white,\n    primaryButtonTextDisabled: p.neutralQuaternary,\n\n    accentButtonBackground: p.accent,\n    accentButtonText: p.white,\n\n    // INPUTS\n    inputBorder: p.neutralSecondary,\n    inputBorderHovered: p.neutralPrimary,\n    inputBackground: p.white,\n    inputBackgroundChecked: p.themePrimary,\n    inputBackgroundCheckedHovered: p.themeDark,\n    inputPlaceholderBackgroundChecked: p.themeLighter,\n    inputForegroundChecked: p.white,\n    inputIcon: p.themePrimary,\n    inputIconHovered: p.themeDark,\n    inputIconDisabled: p.neutralTertiary,\n    inputFocusBorderAlt: p.themePrimary,\n    smallInputBorder: p.neutralSecondary,\n    inputText: p.neutralPrimary,\n    inputTextHovered: p.neutralDark,\n    inputPlaceholderText: p.neutralSecondary,\n    disabledBackground: p.neutralLighter,\n    disabledText: p.neutralTertiary,\n    disabledSubtext: p.neutralQuaternary,\n\n    // LISTS\n    listBackground: p.white,\n    listText: p.neutralPrimary,\n    listItemBackgroundHovered: p.neutralLighter,\n    listItemBackgroundChecked: p.neutralLight,\n    listItemBackgroundCheckedHovered: p.neutralQuaternaryAlt,\n\n    listHeaderBackgroundHovered: p.neutralLighter,\n    listHeaderBackgroundPressed: p.neutralLight,\n\n    // MENUS\n    menuBackground: p.white,\n    menuDivider: p.neutralTertiaryAlt,\n    menuIcon: p.themePrimary,\n    menuHeader: p.themePrimary,\n    menuItemBackgroundHovered: p.neutralLighter,\n    menuItemBackgroundPressed: p.neutralLight,\n    menuItemText: p.neutralPrimary,\n    menuItemTextHovered: p.neutralDark,\n\n    errorText: !isInverted ? p.redDark : '#ff5f5f',\n    warningText: !isInverted ? '#333333' : '#ffffff',\n    successText: !isInverted ? '#107C10' : '#92c353',\n    errorBackground: !isInverted ? 'rgba(245, 135, 145, .2)' : 'rgba(232, 17, 35, .5)',\n    blockingBackground: !isInverted ? 'rgba(250, 65, 0, .2)' : 'rgba(234, 67, 0, .5)',\n    warningBackground: !isInverted ? 'rgba(255, 200, 10, .2)' : 'rgba(255, 251, 0, .6)',\n    warningHighlight: !isInverted ? '#ffb900' : '#fff100',\n    successBackground: !isInverted ? 'rgba(95, 210, 85, .2)' : 'rgba(186, 216, 10, .4)',\n\n    // Deprecated slots, second pass by _fixDeprecatedSlots() later for self-referential slots\n    listTextColor: '',\n    menuItemBackgroundChecked: p.neutralLight,\n  };\n\n  return _fixDeprecatedSlots(toReturn, depComments!);\n}\n\nfunction _fixDeprecatedSlots(s: ISemanticColors, depComments: boolean): ISemanticColors {\n  // Add @deprecated tag as comment if enabled\n  let dep = '';\n  if (depComments === true) {\n    dep = ' /* @deprecated */';\n  }\n\n  // tslint:disable-next-line:deprecation\n  s.listTextColor = s.listText + dep;\n  // tslint:disable-next-line:deprecation\n  s.menuItemBackgroundChecked += dep;\n  return s;\n}\n","// This file mimics styles and mixins from _General.Mixins.scss\n\nimport { IRawStyle } from '@uifabric/merge-styles';\n\nexport const normalize: IRawStyle = {\n  boxShadow: 'none',\n  margin: 0,\n  padding: 0,\n  boxSizing: 'border-box',\n};\n\nexport const noWrap: IRawStyle = {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap',\n};\n","import { IStyle } from '@uifabric/merge-styles';\n\n/**\n * Generates placeholder style for each of the browsers supported by office-ui-fabric-react.\n * @param styles - The style to use.\n * @returns The placeholder style object for each browser depending on the placeholder directive it uses.\n */\nexport function getPlaceholderStyles(styles: IStyle): IStyle {\n  return {\n    selectors: {\n      '::placeholder': styles, // Chrome, Safari, Opera, Firefox\n      ':-ms-input-placeholder': styles, // IE 10+\n      '::-ms-input-placeholder': styles, // Edge\n    },\n  };\n}\n","import { buildClassMap } from '../utilities/index';\nimport { AnimationStyles } from '../styles/index';\nimport { IAnimationStyles } from '../interfaces/index';\n\n/**\n * {@docCategory AnimationClassNames}\n */\nexport const AnimationClassNames: { [key in keyof IAnimationStyles]?: string } = buildClassMap(AnimationStyles);\n","import { IRawStyle, mergeStyles } from '@uifabric/merge-styles';\nimport { DefaultPalette } from '../styles/DefaultPalette';\nimport { getTheme } from '../styles/index';\n\n/**\n * {@docCategory IColorClassNames}\n */\nexport interface IColorClassNames {\n  themeDarker: string;\n  themeDarkerHover: string;\n  themeDarkerBackground: string;\n  themeDarkerBackgroundHover: string;\n  themeDarkerBorder: string;\n  themeDarkerBorderHover: string;\n  themeDark: string;\n  themeDarkHover: string;\n  themeDarkBackground: string;\n  themeDarkBackgroundHover: string;\n  themeDarkBorder: string;\n  themeDarkBorderHover: string;\n  themeDarkAlt: string;\n  themeDarkAltHover: string;\n  themeDarkAltBackground: string;\n  themeDarkAltBackgroundHover: string;\n  themeDarkAltBorder: string;\n  themeDarkAltBorderHover: string;\n  themePrimary: string;\n  themePrimaryHover: string;\n  themePrimaryBackground: string;\n  themePrimaryBackgroundHover: string;\n  themePrimaryBorder: string;\n  themePrimaryBorderHover: string;\n  themeSecondary: string;\n  themeSecondaryHover: string;\n  themeSecondaryBackground: string;\n  themeSecondaryBackgroundHover: string;\n  themeSecondaryBorder: string;\n  themeSecondaryBorderHover: string;\n  themeTertiary: string;\n  themeTertiaryHover: string;\n  themeTertiaryBackground: string;\n  themeTertiaryBackgroundHover: string;\n  themeTertiaryBorder: string;\n  themeTertiaryBorderHover: string;\n  themeLight: string;\n  themeLightHover: string;\n  themeLightBackground: string;\n  themeLightBackgroundHover: string;\n  themeLightBorder: string;\n  themeLightBorderHover: string;\n  themeLighter: string;\n  themeLighterHover: string;\n  themeLighterBackground: string;\n  themeLighterBackgroundHover: string;\n  themeLighterBorder: string;\n  themeLighterBorderHover: string;\n  themeLighterAlt: string;\n  themeLighterAltHover: string;\n  themeLighterAltBackground: string;\n  themeLighterAltBackgroundHover: string;\n  themeLighterAltBorder: string;\n  themeLighterAltBorderHover: string;\n  black: string;\n  blackHover: string;\n  blackBackground: string;\n  blackBackgroundHover: string;\n  blackBorder: string;\n  blackBorderHover: string;\n  blackTranslucent40: string;\n  blackTranslucent40Hover: string;\n  blackTranslucent40Background: string;\n  blackTranslucent40BackgroundHover: string;\n  blackTranslucent40Border: string;\n  blackTranslucent40BorderHover: string;\n  neutralDark: string;\n  neutralDarkHover: string;\n  neutralDarkBackground: string;\n  neutralDarkBackgroundHover: string;\n  neutralDarkBorder: string;\n  neutralDarkBorderHover: string;\n  neutralPrimary: string;\n  neutralPrimaryHover: string;\n  neutralPrimaryBackground: string;\n  neutralPrimaryBackgroundHover: string;\n  neutralPrimaryBorder: string;\n  neutralPrimaryBorderHover: string;\n  neutralPrimaryAlt: string;\n  neutralPrimaryAltHover: string;\n  neutralPrimaryAltBackground: string;\n  neutralPrimaryAltBackgroundHover: string;\n  neutralPrimaryAltBorder: string;\n  neutralPrimaryAltBorderHover: string;\n  neutralSecondary: string;\n  neutralSecondaryHover: string;\n  neutralSecondaryBackground: string;\n  neutralSecondaryBackgroundHover: string;\n  neutralSecondaryBorder: string;\n  neutralSecondaryBorderHover: string;\n  neutralSecondaryAlt: string;\n  neutralSecondaryAltHover: string;\n  neutralSecondaryAltBackground: string;\n  neutralSecondaryAltBackgroundHover: string;\n  neutralSecondaryAltBorder: string;\n  neutralSecondaryAltBorderHover: string;\n  neutralTertiary: string;\n  neutralTertiaryHover: string;\n  neutralTertiaryBackground: string;\n  neutralTertiaryBackgroundHover: string;\n  neutralTertiaryBorder: string;\n  neutralTertiaryBorderHover: string;\n  neutralTertiaryAlt: string;\n  neutralTertiaryAltHover: string;\n  neutralTertiaryAltBackground: string;\n  neutralTertiaryAltBackgroundHover: string;\n  neutralTertiaryAltBorder: string;\n  neutralTertiaryAltBorderHover: string;\n  neutralQuaternary: string;\n  neutralQuaternaryHover: string;\n  neutralQuaternaryBackground: string;\n  neutralQuaternaryBackgroundHover: string;\n  neutralQuaternaryBorder: string;\n  neutralQuaternaryBorderHover: string;\n  neutralQuaternaryAlt: string;\n  neutralQuaternaryAltHover: string;\n  neutralQuaternaryAltBackground: string;\n  neutralQuaternaryAltBackgroundHover: string;\n  neutralQuaternaryAltBorder: string;\n  neutralQuaternaryAltBorderHover: string;\n  neutralLight: string;\n  neutralLightHover: string;\n  neutralLightBackground: string;\n  neutralLightBackgroundHover: string;\n  neutralLightBorder: string;\n  neutralLightBorderHover: string;\n  neutralLighter: string;\n  neutralLighterHover: string;\n  neutralLighterBackground: string;\n  neutralLighterBackgroundHover: string;\n  neutralLighterBorder: string;\n  neutralLighterBorderHover: string;\n  neutralLighterAlt: string;\n  neutralLighterAltHover: string;\n  neutralLighterAltBackground: string;\n  neutralLighterAltBackgroundHover: string;\n  neutralLighterAltBorder: string;\n  neutralLighterAltBorderHover: string;\n  white: string;\n  whiteHover: string;\n  whiteBackground: string;\n  whiteBackgroundHover: string;\n  whiteBorder: string;\n  whiteBorderHover: string;\n  whiteTranslucent40: string;\n  whiteTranslucent40Hover: string;\n  whiteTranslucent40Background: string;\n  whiteTranslucent40BackgroundHover: string;\n  whiteTranslucent40Border: string;\n  whiteTranslucent40BorderHover: string;\n  yellow: string;\n  yellowHover: string;\n  yellowBackground: string;\n  yellowBackgroundHover: string;\n  yellowBorder: string;\n  yellowBorderHover: string;\n  yellowLight: string;\n  yellowLightHover: string;\n  yellowLightBackground: string;\n  yellowLightBackgroundHover: string;\n  yellowLightBorder: string;\n  yellowLightBorderHover: string;\n  orange: string;\n  orangeHover: string;\n  orangeBackground: string;\n  orangeBackgroundHover: string;\n  orangeBorder: string;\n  orangeBorderHover: string;\n  orangeLight: string;\n  orangeLightHover: string;\n  orangeLightBackground: string;\n  orangeLightBackgroundHover: string;\n  orangeLightBorder: string;\n  orangeLightBorderHover: string;\n  orangeLighter: string;\n  orangeLighterHover: string;\n  orangeLighterBackground: string;\n  orangeLighterBackgroundHover: string;\n  orangeLighterBorder: string;\n  orangeLighterBorderHover: string;\n  redDark: string;\n  redDarkHover: string;\n  redDarkBackground: string;\n  redDarkBackgroundHover: string;\n  redDarkBorder: string;\n  redDarkBorderHover: string;\n  red: string;\n  redHover: string;\n  redBackground: string;\n  redBackgroundHover: string;\n  redBorder: string;\n  redBorderHover: string;\n  magentaDark: string;\n  magentaDarkHover: string;\n  magentaDarkBackground: string;\n  magentaDarkBackgroundHover: string;\n  magentaDarkBorder: string;\n  magentaDarkBorderHover: string;\n  magenta: string;\n  magentaHover: string;\n  magentaBackground: string;\n  magentaBackgroundHover: string;\n  magentaBorder: string;\n  magentaBorderHover: string;\n  magentaLight: string;\n  magentaLightHover: string;\n  magentaLightBackground: string;\n  magentaLightBackgroundHover: string;\n  magentaLightBorder: string;\n  magentaLightBorderHover: string;\n  purpleDark: string;\n  purpleDarkHover: string;\n  purpleDarkBackground: string;\n  purpleDarkBackgroundHover: string;\n  purpleDarkBorder: string;\n  purpleDarkBorderHover: string;\n  purple: string;\n  purpleHover: string;\n  purpleBackground: string;\n  purpleBackgroundHover: string;\n  purpleBorder: string;\n  purpleBorderHover: string;\n  purpleLight: string;\n  purpleLightHover: string;\n  purpleLightBackground: string;\n  purpleLightBackgroundHover: string;\n  purpleLightBorder: string;\n  purpleLightBorderHover: string;\n  blueDark: string;\n  blueDarkHover: string;\n  blueDarkBackground: string;\n  blueDarkBackgroundHover: string;\n  blueDarkBorder: string;\n  blueDarkBorderHover: string;\n  blueMid: string;\n  blueMidHover: string;\n  blueMidBackground: string;\n  blueMidBackgroundHover: string;\n  blueMidBorder: string;\n  blueMidBorderHover: string;\n  blue: string;\n  blueHover: string;\n  blueBackground: string;\n  blueBackgroundHover: string;\n  blueBorder: string;\n  blueBorderHover: string;\n  blueLight: string;\n  blueLightHover: string;\n  blueLightBackground: string;\n  blueLightBackgroundHover: string;\n  blueLightBorder: string;\n  blueLightBorderHover: string;\n  tealDark: string;\n  tealDarkHover: string;\n  tealDarkBackground: string;\n  tealDarkBackgroundHover: string;\n  tealDarkBorder: string;\n  tealDarkBorderHover: string;\n  teal: string;\n  tealHover: string;\n  tealBackground: string;\n  tealBackgroundHover: string;\n  tealBorder: string;\n  tealBorderHover: string;\n  tealLight: string;\n  tealLightHover: string;\n  tealLightBackground: string;\n  tealLightBackgroundHover: string;\n  tealLightBorder: string;\n  tealLightBorderHover: string;\n  greenDark: string;\n  greenDarkHover: string;\n  greenDarkBackground: string;\n  greenDarkBackgroundHover: string;\n  greenDarkBorder: string;\n  greenDarkBorderHover: string;\n  green: string;\n  greenHover: string;\n  greenBackground: string;\n  greenBackgroundHover: string;\n  greenBorder: string;\n  greenBorderHover: string;\n  greenLight: string;\n  greenLightHover: string;\n  greenLightBackground: string;\n  greenLightBackgroundHover: string;\n  greenLightBorder: string;\n  greenLightBorderHover: string;\n}\n\nexport const ColorClassNames: IColorClassNames = {} as IColorClassNames;\n\nfor (const colorName in DefaultPalette) {\n  if (DefaultPalette.hasOwnProperty(colorName)) {\n    // Foreground color\n    _defineGetter(ColorClassNames, colorName, '', false, 'color');\n\n    // Hover color\n    _defineGetter(ColorClassNames, colorName, 'Hover', true, 'color');\n\n    // Background color\n    _defineGetter(ColorClassNames, colorName, 'Background', false, 'background');\n\n    // Background hover\n    _defineGetter(ColorClassNames, colorName, 'BackgroundHover', true, 'background');\n\n    // Border color\n    _defineGetter(ColorClassNames, colorName, 'Border', false, 'borderColor');\n\n    // Border hover color\n    _defineGetter(ColorClassNames, colorName, 'BorderHover', true, 'borderColor');\n  }\n}\n\n/**\n * Defines a getter for the given class configuration.\n */\nfunction _defineGetter(\n  obj: IColorClassNames,\n  colorName: string,\n  suffix: string,\n  isHover: boolean,\n  cssProperty: string,\n): void {\n  Object.defineProperty(obj, colorName + suffix, {\n    get: (): string => {\n      // tslint:disable-next-line:no-any\n      const style: IRawStyle = { [cssProperty]: (getTheme().palette as any)[colorName] };\n\n      return mergeStyles(isHover ? { selectors: { ':hover': style } } : style).toString();\n    },\n    enumerable: true,\n    configurable: true,\n  });\n}\n","import { buildClassMap } from '../utilities/buildClassMap';\nimport { IFontStyles } from '../interfaces/IFontStyles';\nimport { DefaultFontStyles } from '../styles/DefaultFontStyles';\n\n/**\n * {@docCategory FontClassNames}\n */\nexport const FontClassNames: { [key in keyof IFontStyles]?: string } = buildClassMap(DefaultFontStyles);\n","// @uifabric/styling@7.11.8\n// Do not modify this file, the file is generated as part of publish. The checked in version is a placeholder only.\nimport { setVersion } from '@uifabric/set-version';\nsetVersion('@uifabric/styling', '7.11.8');","import { IButtonStyles } from '../Button.types';\nimport { ITheme, concatStyleSets, FontWeights } from '../../../Styling';\nimport { memoizeFunction } from '../../../Utilities';\nimport { getStyles as getBaseButtonStyles } from '../BaseButton.styles';\nimport { getStyles as getSplitButtonStyles } from '../SplitButton/SplitButton.styles';\n\nimport { primaryStyles, standardStyles } from '../ButtonThemes';\n\nconst DEFAULT_BUTTON_HEIGHT = '32px';\nconst DEFAULT_BUTTON_MIN_WIDTH = '80px';\n\nexport const getStyles = memoizeFunction(\n  (theme: ITheme, customStyles?: IButtonStyles, primary?: boolean): IButtonStyles => {\n    const baseButtonStyles: IButtonStyles = getBaseButtonStyles(theme);\n    const splitButtonStyles: IButtonStyles = getSplitButtonStyles(theme);\n    const defaultButtonStyles: IButtonStyles = {\n      root: {\n        minWidth: DEFAULT_BUTTON_MIN_WIDTH,\n        height: DEFAULT_BUTTON_HEIGHT,\n      },\n      label: {\n        fontWeight: FontWeights.semibold,\n      },\n    };\n\n    return concatStyleSets(\n      baseButtonStyles,\n      defaultButtonStyles,\n      primary ? primaryStyles(theme) : standardStyles(theme),\n      splitButtonStyles,\n      customStyles,\n    )!;\n  },\n);\n","import { IButtonStyles } from './Button.types';\nimport { ITheme, HighContrastSelector, IRawStyle } from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\n\nconst splitButtonDividerBaseStyles = (): IRawStyle => {\n  return {\n    position: 'absolute',\n    width: 1,\n    right: 31,\n    top: 8,\n    bottom: 8,\n  };\n};\n\nexport function standardStyles(theme: ITheme): IButtonStyles {\n  const { semanticColors: s, palette: p } = theme;\n\n  const buttonBackground = s.buttonBackground;\n  const buttonBackgroundPressed = s.buttonBackgroundPressed;\n  const buttonBackgroundHovered = s.buttonBackgroundHovered;\n\n  const buttonText = s.buttonText;\n  const buttonTextHovered = s.buttonTextHovered;\n  const buttonTextChecked = s.buttonTextChecked;\n  const buttonTextCheckedHovered = s.buttonTextCheckedHovered;\n\n  return {\n    root: {\n      backgroundColor: buttonBackground,\n      color: buttonText,\n    },\n\n    rootHovered: {\n      backgroundColor: buttonBackgroundHovered,\n      color: buttonTextHovered,\n      selectors: {\n        [HighContrastSelector]: {\n          borderColor: 'Highlight',\n          color: 'Highlight',\n        },\n      },\n    },\n\n    rootPressed: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked,\n    },\n\n    rootExpanded: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked,\n    },\n\n    rootChecked: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked,\n    },\n\n    rootCheckedHovered: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextCheckedHovered,\n    },\n\n    rootDisabled: {\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText',\n          borderColor: 'GrayText',\n          backgroundColor: 'Window',\n        },\n      },\n    },\n\n    // Split button styles\n    splitButtonContainer: {\n      selectors: {\n        [HighContrastSelector]: {\n          border: 'none',\n        },\n      },\n    },\n\n    splitButtonMenuButton: {\n      color: p.white,\n      backgroundColor: 'transparent',\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralLight,\n          selectors: {\n            [HighContrastSelector]: {\n              color: 'Highlight',\n            },\n          },\n        },\n      },\n    },\n\n    splitButtonMenuButtonDisabled: {\n      backgroundColor: s.buttonBackgroundDisabled,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.buttonBackgroundDisabled,\n        },\n      },\n    },\n\n    splitButtonDivider: {\n      ...splitButtonDividerBaseStyles(),\n      backgroundColor: p.neutralTertiaryAlt,\n      selectors: {\n        [HighContrastSelector]: {\n          backgroundColor: 'WindowText',\n        },\n      },\n    },\n\n    splitButtonDividerDisabled: {\n      backgroundColor: theme.palette.neutralTertiaryAlt,\n    },\n\n    splitButtonMenuButtonChecked: {\n      backgroundColor: p.neutralQuaternaryAlt,\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralQuaternaryAlt,\n        },\n      },\n    },\n\n    splitButtonMenuButtonExpanded: {\n      backgroundColor: p.neutralQuaternaryAlt,\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralQuaternaryAlt,\n        },\n      },\n    },\n\n    splitButtonMenuIcon: {\n      color: s.buttonText,\n    },\n\n    splitButtonMenuIconDisabled: {\n      color: s.buttonTextDisabled,\n    },\n  };\n}\n\nexport function primaryStyles(theme: ITheme): IButtonStyles {\n  const { palette: p, semanticColors: s } = theme;\n\n  return {\n    root: {\n      backgroundColor: s.primaryButtonBackground,\n      border: `1px solid ${s.primaryButtonBackground}`,\n      color: s.primaryButtonText,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'Window',\n          backgroundColor: 'WindowText',\n          borderColor: 'WindowText',\n          MsHighContrastAdjust: 'none',\n        },\n        [`.${IsFocusVisibleClassName} &:focus`]: {\n          selectors: {\n            ':after': {\n              border: `none`,\n              outlineColor: p.white,\n            },\n          },\n        },\n      },\n    },\n\n    rootHovered: {\n      backgroundColor: s.primaryButtonBackgroundHovered,\n      border: `1px solid ${s.primaryButtonBackgroundHovered}`,\n      color: s.primaryButtonTextHovered,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'Window',\n          backgroundColor: 'Highlight',\n          borderColor: 'Highlight',\n        },\n      },\n    },\n\n    rootPressed: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      border: `1px solid ${s.primaryButtonBackgroundPressed}`,\n      color: s.primaryButtonTextPressed,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'Window',\n          backgroundColor: 'WindowText',\n          borderColor: 'WindowText',\n          MsHighContrastAdjust: 'none',\n        },\n      },\n    },\n\n    rootExpanded: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed,\n    },\n\n    rootChecked: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed,\n    },\n\n    rootCheckedHovered: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed,\n    },\n\n    rootDisabled: {\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText',\n          borderColor: 'GrayText',\n          backgroundColor: 'Window',\n        },\n      },\n    },\n\n    // Split button styles\n    splitButtonContainer: {\n      selectors: {\n        [HighContrastSelector]: {\n          border: 'none',\n        },\n      },\n    },\n\n    splitButtonDivider: {\n      ...splitButtonDividerBaseStyles(),\n      backgroundColor: p.white,\n      selectors: {\n        [HighContrastSelector]: {\n          backgroundColor: 'Window',\n        },\n      },\n    },\n\n    splitButtonMenuButton: {\n      backgroundColor: s.primaryButtonBackground,\n      color: s.primaryButtonText,\n      selectors: {\n        [HighContrastSelector]: {\n          backgroundColor: 'WindowText',\n        },\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundHovered,\n          selectors: {\n            [HighContrastSelector]: {\n              color: 'Highlight',\n            },\n          },\n        },\n      },\n    },\n\n    splitButtonMenuButtonDisabled: {\n      backgroundColor: s.primaryButtonBackgroundDisabled,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundDisabled,\n        },\n      },\n    },\n\n    splitButtonMenuButtonChecked: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundPressed,\n        },\n      },\n    },\n\n    splitButtonMenuButtonExpanded: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundPressed,\n        },\n      },\n    },\n\n    splitButtonMenuIcon: {\n      color: s.primaryButtonText,\n    },\n\n    splitButtonMenuIconDisabled: {\n      color: p.neutralTertiary,\n\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText',\n        },\n      },\n    },\n  };\n}\n","import * as React from 'react';\nimport { BaseButton } from '../BaseButton';\nimport { customizable, nullRender } from '../../../Utilities';\nimport { IButtonProps } from '../Button.types';\nimport { getStyles } from './DefaultButton.styles';\n\n/**\n * {@docCategory Button}\n */\n@customizable('DefaultButton', ['theme', 'styles'], true)\nexport class DefaultButton extends React.Component<IButtonProps, {}> {\n  public render(): JSX.Element {\n    const { primary = false, styles, theme } = this.props;\n\n    return (\n      <BaseButton\n        {...this.props}\n        variantClassName={primary ? 'ms-Button--primary' : 'ms-Button--default'}\n        styles={getStyles(theme!, styles, primary)}\n        onRenderDescription={nullRender}\n      />\n    );\n  }\n}\n","// A packages cache that makes sure that we don't inject the same packageName twice in the same bundle -\n// this cache is local to the module closure inside this bundle\nconst packagesCache: { [name: string]: string } = {};\n\n// Cache access to window to avoid IE11 memory leak.\nlet _win: Window | undefined = undefined;\n\ntry {\n  _win = window;\n} catch (e) {\n  /* no-op */\n}\n\nexport function setVersion(packageName: string, packageVersion: string): void {\n  if (typeof _win !== 'undefined') {\n    // tslint:disable-next-line:no-any\n    const packages = ((_win as any).__packages__ = (_win as any).__packages__ || {});\n\n    // We allow either the global packages or local packages caches to invalidate so testing can\n    // just clear the global to set this state\n    if (!packages[packageName] || !packagesCache[packageName]) {\n      packagesCache[packageName] = packageVersion;\n      const versions = (packages[packageName] = packages[packageName] || []);\n      versions.push(packageVersion);\n    }\n  }\n}\n","import { KeyCodes } from './KeyCodes';\nimport { getDocument } from './dom/getDocument';\nimport { getItem, setItem } from './sessionStorage';\nimport { setRTL as mergeStylesSetRTL } from '@uifabric/merge-styles';\n\nconst RTL_LOCAL_STORAGE_KEY = 'isRTL';\n\n// Default to undefined so that we initialize on first read.\nlet _isRTL: boolean | undefined;\n\n/**\n * Gets the rtl state of the page (returns true if in rtl.)\n */\nexport function getRTL(theme: { rtl?: boolean } = {}): boolean {\n  if (theme.rtl !== undefined) {\n    return theme.rtl;\n  }\n  if (_isRTL === undefined) {\n    // Fabric supports persisting the RTL setting between page refreshes via session storage\n    let savedRTL = getItem(RTL_LOCAL_STORAGE_KEY);\n    if (savedRTL !== null) {\n      _isRTL = savedRTL === '1';\n      setRTL(_isRTL);\n    }\n\n    let doc = getDocument();\n    if (_isRTL === undefined && doc) {\n      _isRTL = ((doc.body && doc.body.getAttribute('dir')) || doc.documentElement.getAttribute('dir')) === 'rtl';\n      mergeStylesSetRTL(_isRTL);\n    }\n  }\n\n  return !!_isRTL;\n}\n\n/**\n * Sets the rtl state of the page (by adjusting the dir attribute of the html element.)\n */\nexport function setRTL(isRTL: boolean, persistSetting: boolean = false): void {\n  let doc = getDocument();\n  if (doc) {\n    doc.documentElement.setAttribute('dir', isRTL ? 'rtl' : 'ltr');\n  }\n\n  if (persistSetting) {\n    setItem(RTL_LOCAL_STORAGE_KEY, isRTL ? '1' : '0');\n  }\n\n  _isRTL = isRTL;\n  mergeStylesSetRTL(_isRTL);\n}\n\n/**\n * Returns the given key, but flips right/left arrows if necessary.\n */\nexport function getRTLSafeKeyCode(key: number, theme: { rtl?: boolean } = {}): number {\n  if (getRTL(theme)) {\n    if (key === KeyCodes.left) {\n      key = KeyCodes.right;\n    } else if (key === KeyCodes.right) {\n      key = KeyCodes.left;\n    }\n  }\n\n  return key;\n}\n","/**\n * Fetches an item from session storage without throwing an exception\n * @param key The key of the item to fetch from session storage\n */\nexport function getItem(key: string): string | null {\n  let result = null;\n  try {\n    result = window.sessionStorage.getItem(key);\n  } catch (e) {\n    /* Eat the exception */\n  }\n  return result;\n}\n\n/**\n * Inserts an item into session storage without throwing an exception\n * @param key The key of the item to add to session storage\n * @param data The data to put into session storage\n */\nexport function setItem(key: string, data: string): void {\n  try {\n    window.sessionStorage.setItem(key, data);\n  } catch (e) {\n    /* Eat the exception */\n  }\n}\n","import * as React from 'react';\nimport { customizable, nullRender } from '../../../Utilities';\nimport { DefaultButton } from '../DefaultButton/DefaultButton';\nimport { IButtonProps } from '../Button.types';\n\n/**\n * {@docCategory Button}\n */\n@customizable('PrimaryButton', ['theme', 'styles'], true)\nexport class PrimaryButton extends React.Component<IButtonProps, {}> {\n  public render(): JSX.Element {\n    return <DefaultButton {...this.props} primary={true} onRenderDescription={nullRender} />;\n  }\n}\n","import * as React from 'react';\nimport { IStyleSet, IStyleFunctionOrObject, concatStyleSetsWithProps } from '@uifabric/merge-styles';\nimport { Customizations } from './customizations/Customizations';\nimport { CustomizerContext, ICustomizerContext } from './customizations/CustomizerContext';\n\nexport interface IPropsWithStyles<TStyleProps, TStyleSet extends IStyleSet<TStyleSet>> {\n  styles?: IStyleFunctionOrObject<TStyleProps, TStyleSet>;\n}\n\nexport interface ICustomizableProps {\n  /**\n   * Name of scope, which can be targeted using the Customizer.\n   */\n  scope: string;\n\n  /**\n   * List of fields which can be customized.\n   * @defaultvalue [ 'theme', 'styles' ]\n   */\n  fields?: string[];\n}\n\nconst DefaultFields = ['theme', 'styles'];\n\n/**\n * The styled HOC wrapper allows you to create a functional wrapper around a given component which will resolve\n * getStyles functional props, and mix customized props passed in using concatStyleSets.\n *\n * @example\n * ```tsx\n * export const Toggle = styled(\n *   ToggleBase,\n *   props => ({ root: { background: 'red' }})\n * );\n * ```\n * @param Component - The unstyled base component to render, which receives styles.\n * @param baseStyles - The styles which should be curried with the component.\n * @param getProps - A helper which provides default props.\n * @param customizable - An object which defines which props can be customized using the Customizer.\n * @param pure - A boolean indicating if the component should avoid re-rendering when props haven't changed.\n * Note that pure should not be used on components which allow children, or take in complex objects or\n * arrays as props which could mutate on every render.\n */\nexport function styled<\n  TComponentProps extends IPropsWithStyles<TStyleProps, TStyleSet>,\n  TStyleProps,\n  TStyleSet extends IStyleSet<TStyleSet>\n>(\n  Component: React.ComponentClass<TComponentProps> | React.FunctionComponent<TComponentProps>,\n  baseStyles: IStyleFunctionOrObject<TStyleProps, TStyleSet>,\n  getProps?: (props: TComponentProps) => Partial<TComponentProps>,\n  customizable?: ICustomizableProps,\n  pure?: boolean,\n): React.FunctionComponent<TComponentProps> {\n  customizable = customizable || { scope: '', fields: undefined };\n\n  const { scope, fields = DefaultFields } = customizable;\n  const ParentComponent = pure ? React.PureComponent : React.Component;\n\n  class Wrapped extends ParentComponent<TComponentProps, {}> {\n    // Function.prototype.name is an ES6 feature, so the cast to any is required until we're\n    // able to drop IE 11 support and compile with ES6 libs\n    // tslint:disable-next-line:no-any\n    public static displayName = `Styled${Component.displayName || (Component as any).name}`;\n\n    private _inCustomizerContext = false;\n    private _styles: IStyleFunctionOrObject<TStyleProps, TStyleSet>;\n\n    public render(): JSX.Element {\n      return <CustomizerContext.Consumer>{this._renderContent}</CustomizerContext.Consumer>;\n    }\n\n    public componentDidMount(): void {\n      if (!this._inCustomizerContext) {\n        Customizations.observe(this._onSettingsChanged);\n      }\n    }\n\n    public componentWillUnmount(): void {\n      if (!this._inCustomizerContext) {\n        Customizations.unobserve(this._onSettingsChanged);\n      }\n    }\n\n    private _renderContent = (context: ICustomizerContext): JSX.Element => {\n      this._inCustomizerContext = !!context.customizations.inCustomizerContext;\n\n      const settings = Customizations.getSettings(fields, scope, context.customizations);\n      const { styles: customizedStyles, dir, ...rest } = settings;\n      const additionalProps = getProps ? getProps(this.props) : undefined;\n\n      this._updateStyles(customizedStyles);\n\n      return <Component {...rest} {...additionalProps} {...this.props} styles={this._styles} />;\n    };\n\n    private _updateStyles(customizedStyles: IStyleFunctionOrObject<TStyleProps, TStyleSet>): void {\n      // tslint:disable-next-line:no-any\n      const cache = (this._styles && (this._styles as any).__cachedInputs__) || [];\n      if (!this._styles || customizedStyles !== cache[1] || this.props.styles !== cache[2]) {\n        // Cache the customized styles.\n        // this._customizedStyles = customizedStyles;\n\n        // Using styled components as the Component arg will result in nested styling arrays.\n        this._styles = (styleProps: TStyleProps) =>\n          concatStyleSetsWithProps(styleProps, baseStyles, customizedStyles, this.props.styles);\n\n        // The __cachedInputs__ array is attached to the function and consumed by the\n        // classNamesFunction as a list of keys to include for memoizing classnames.\n\n        // tslint:disable-next-line:no-any\n        (this._styles as any).__cachedInputs__ = [baseStyles, customizedStyles, this.props.styles];\n      }\n    }\n\n    private _onSettingsChanged = (): void => this.forceUpdate();\n  }\n\n  // This preserves backwards compatibility.\n  // tslint:disable-next-line:no-any\n  return Wrapped as any;\n}\n","import { concatStyleSets } from './concatStyleSets';\nimport { IStyleSet } from './IStyleSet';\nimport { IStyleFunctionOrObject } from './IStyleFunction';\n\n/**\n * Concatenates style sets into one, but resolves functional sets using the given props.\n * @param styleProps - Props used to resolve functional sets.\n * @param allStyles - Style sets, which can be functions or objects.\n */\nexport function concatStyleSetsWithProps<TStyleProps, TStyleSet extends IStyleSet<TStyleSet>>(\n  styleProps: TStyleProps,\n  ...allStyles: (IStyleFunctionOrObject<TStyleProps, TStyleSet> | undefined)[]\n): Partial<TStyleSet> {\n  const result: Partial<TStyleSet>[] = [];\n  for (const styles of allStyles) {\n    if (styles) {\n      result.push(typeof styles === 'function' ? styles(styleProps) : styles);\n    }\n  }\n  if (result.length === 1) {\n    return result[0] as Partial<TStyleSet>;\n  } else if (result.length) {\n    // cliffkoh: I cannot figure out how to avoid the cast to any here.\n    // It is something to do with the use of Omit in IStyleSet.\n    // It might not be necessary once  Omit becomes part of lib.d.ts (when we remove our own Omit and rely on\n    // the official version).\n    // tslint:disable-next-line:no-any\n    return concatStyleSets(...(result as any)) as any;\n  }\n  return {};\n}\n","import { mergeCssSets, IStyleSet, IProcessedStyleSet, Stylesheet } from '@uifabric/merge-styles';\nimport { IStyleFunctionOrObject } from '@uifabric/merge-styles';\nimport { getRTL } from './rtl';\nimport { getWindow } from './dom';\n\nconst MAX_CACHE_COUNT = 50;\nlet _memoizedClassNames = 0;\n\nconst stylesheet = Stylesheet.getInstance();\n\nif (stylesheet && stylesheet.onReset) {\n  stylesheet.onReset(() => _memoizedClassNames++);\n}\n\n// Note that because of the caching nature within the classNames memoization,\n// I've disabled this rule to simply be able to work with any types.\n// tslint:disable:no-any\n\n// This represents a prop we attach to each Map to indicate the cached return value\n// associated with the graph node.\nconst RetVal = '__retval__';\n\ninterface IRecursiveMemoNode extends Map<any, IRecursiveMemoNode> {\n  [RetVal]?: string;\n}\n\ntype AppWindow = (Window & { FabricConfig?: { enableClassNameCacheFullWarning?: boolean } }) | undefined;\n\nexport interface IClassNamesFunctionOptions {\n  /**\n   * Disables class caching for scenarios where styleProp parts mutate frequently.\n   */\n  disableCaching?: boolean;\n\n  /**\n   * Size of the cache. It overwrites default cache size when defined.\n   */\n  cacheSize?: number;\n}\n\n/**\n * Creates a getClassNames function which calls getStyles given the props, and injects them\n * into mergeStyleSets.\n *\n * Note that the props you pass in on every render should be in the same order and\n * immutable (numbers, strings, and booleans). This will allow the results to be memoized. Violating\n * these will cause extra recalcs to occur.\n */\nexport function classNamesFunction<TStyleProps extends {}, TStyleSet extends IStyleSet<TStyleSet>>(\n  options: IClassNamesFunctionOptions = {},\n): (\n  getStyles: IStyleFunctionOrObject<TStyleProps, TStyleSet> | undefined,\n  styleProps?: TStyleProps,\n) => IProcessedStyleSet<TStyleSet> {\n  // We build a trie where each node is a Map. The map entry key represents an argument\n  // value, and the entry value is another node (Map). Each node has a `__retval__`\n  // property which is used to hold the cached response.\n\n  // To derive the response, we can simply ensure the arguments are added or already\n  // exist in the trie. At the last node, if there is a `__retval__` we return that. Otherwise\n  // we call the `getStyles` api to evaluate, cache on the property, and return that.\n  let map: IRecursiveMemoNode = new Map();\n  let styleCalcCount = 0;\n  let getClassNamesCount = 0;\n  let currentMemoizedClassNames = _memoizedClassNames;\n\n  const getClassNames = (\n    styleFunctionOrObject: IStyleFunctionOrObject<TStyleProps, TStyleSet> | undefined,\n    styleProps: TStyleProps = {} as TStyleProps,\n  ): IProcessedStyleSet<TStyleSet> => {\n    getClassNamesCount++;\n    let current: Map<any, any> = map;\n    const { theme } = styleProps as any;\n    const rtl = theme && theme.rtl !== undefined ? theme.rtl : getRTL();\n\n    const disableCaching = options.disableCaching;\n\n    // On reset of our stylesheet, reset memoized cache.\n    if (currentMemoizedClassNames !== _memoizedClassNames) {\n      currentMemoizedClassNames = _memoizedClassNames;\n      map = new Map();\n      styleCalcCount = 0;\n    }\n\n    if (!options.disableCaching) {\n      current = _traverseMap(map, styleFunctionOrObject as any);\n      current = _traverseMap(current, styleProps);\n    }\n\n    if (disableCaching || !(current as any)[RetVal]) {\n      if (styleFunctionOrObject === undefined) {\n        (current as any)[RetVal] = {} as IProcessedStyleSet<TStyleSet>;\n      } else {\n        (current as any)[RetVal] = mergeCssSets(\n          [\n            (typeof styleFunctionOrObject === 'function'\n              ? styleFunctionOrObject(styleProps)\n              : styleFunctionOrObject) as IStyleSet<TStyleSet>,\n          ],\n          { rtl: !!rtl },\n        );\n      }\n\n      if (!disableCaching) {\n        styleCalcCount++;\n      }\n    }\n\n    if (styleCalcCount > (options.cacheSize || MAX_CACHE_COUNT)) {\n      const win = getWindow() as AppWindow;\n      if (win?.FabricConfig?.enableClassNameCacheFullWarning) {\n        console.warn(\n          `Styles are being recalculated too frequently. Cache miss rate is ${styleCalcCount}/${getClassNamesCount}.`,\n        );\n        // tslint:disable-next-line:no-console\n        console.trace();\n      }\n\n      map.clear();\n      styleCalcCount = 0;\n\n      // Mutate the options passed in, that's all we can do.\n      options.disableCaching = true;\n    }\n\n    // Note: the RetVal is an attached property on the Map; not a key in the Map. We use this attached property to\n    // cache the return value for this branch of the graph.\n    return (current as any)[RetVal];\n  };\n\n  return getClassNames;\n}\n\nfunction _traverseEdge(current: Map<any, any>, value: any): Map<any, any> {\n  value = _normalizeValue(value);\n\n  if (!current.has(value)) {\n    current.set(value, new Map<any, any>());\n  }\n\n  return current.get(value);\n}\n\nfunction _traverseMap(current: Map<any, any>, inputs: any[] | Object): Map<any, any> {\n  if (typeof inputs === 'function') {\n    const cachedInputsFromStyled = (inputs as any).__cachedInputs__;\n    if (cachedInputsFromStyled) {\n      // The styled helper will generate the styles function and will attach the cached\n      // inputs (consisting of the default styles, customzied styles, and user provided styles.)\n      // These should be used as cache keys for deriving the memoized value.\n      for (const input of (inputs as any).__cachedInputs__) {\n        current = _traverseEdge(current, input);\n      }\n    } else {\n      current = _traverseEdge(current, inputs);\n    }\n  } else if (typeof inputs === 'object') {\n    for (const propName in inputs) {\n      if (inputs.hasOwnProperty(propName)) {\n        current = _traverseEdge(current, (inputs as any)[propName]);\n      }\n    }\n  }\n\n  return current;\n}\n\nfunction _normalizeValue(value: any): string {\n  switch (value) {\n    case undefined:\n      return '__undefined__';\n    case null:\n      return '__null__';\n    default:\n      return value;\n  }\n}\n","import { concatStyleSets } from './concatStyleSets';\nimport { extractStyleParts } from './extractStyleParts';\nimport { IStyle } from './IStyle';\nimport { IStyleOptions } from './IStyleOptions';\nimport { IConcatenatedStyleSet, IProcessedStyleSet, IStyleSet } from './IStyleSet';\nimport { getStyleOptions } from './StyleOptionsState';\nimport { applyRegistration, styleToRegistration } from './styleToClassName';\n\n/**\n * Takes in one or more style set objects, each consisting of a set of areas,\n * each which will produce a class name. Using this is analogous to calling\n * `mergeStyles` for each property in the object, but ensures we maintain the\n * set ordering when multiple style sets are merged.\n *\n * @param styleSet - The first style set to be merged and reigstered.\n */\nexport function mergeStyleSets<TStyleSet extends IStyleSet<TStyleSet>>(\n  styleSet: TStyleSet | false | null | undefined,\n): IProcessedStyleSet<TStyleSet>;\n\n/**\n * Takes in one or more style set objects, each consisting of a set of areas,\n * each which will produce a class name. Using this is analogous to calling\n * `mergeStyles` for each property in the object, but ensures we maintain the\n * set ordering when multiple style sets are merged.\n *\n * @param styleSet1 - The first style set to be merged.\n * @param styleSet2 - The second style set to be merged.\n */\nexport function mergeStyleSets<TStyleSet1 extends IStyleSet<TStyleSet1>, TStyleSet2 extends IStyleSet<TStyleSet2>>(\n  styleSet1: TStyleSet1 | false | null | undefined,\n  styleSet2: TStyleSet2 | false | null | undefined,\n): IProcessedStyleSet<TStyleSet1 & TStyleSet2>;\n\n/**\n * Takes in one or more style set objects, each consisting of a set of areas,\n * each which will produce a class name. Using this is analogous to calling\n * `mergeStyles` for each property in the object, but ensures we maintain the\n * set ordering when multiple style sets are merged.\n *\n * @param styleSet1 - The first style set to be merged.\n * @param styleSet2 - The second style set to be merged.\n * @param styleSet3 - The third style set to be merged.\n */\nexport function mergeStyleSets<\n  TStyleSet1 extends IStyleSet<TStyleSet1>,\n  TStyleSet2 extends IStyleSet<TStyleSet2>,\n  TStyleSet3 extends IStyleSet<TStyleSet3>\n>(\n  styleSet1: TStyleSet1 | false | null | undefined,\n  styleSet2: TStyleSet2 | false | null | undefined,\n  styleSet3: TStyleSet3 | false | null | undefined,\n): IProcessedStyleSet<TStyleSet1 & TStyleSet2 & TStyleSet3>;\n\n/**\n * Takes in one or more style set objects, each consisting of a set of areas,\n * each which will produce a class name. Using this is analogous to calling\n * `mergeStyles` for each property in the object, but ensures we maintain the\n * set ordering when multiple style sets are merged.\n *\n * @param styleSet1 - The first style set to be merged.\n * @param styleSet2 - The second style set to be merged.\n * @param styleSet3 - The third style set to be merged.\n * @param styleSet4 - The fourth style set to be merged.\n */\nexport function mergeStyleSets<\n  TStyleSet1 extends IStyleSet<TStyleSet1>,\n  TStyleSet2 extends IStyleSet<TStyleSet2>,\n  TStyleSet3 extends IStyleSet<TStyleSet3>,\n  TStyleSet4 extends IStyleSet<TStyleSet4>\n>(\n  styleSet1: TStyleSet1 | false | null | undefined,\n  styleSet2: TStyleSet2 | false | null | undefined,\n  styleSet3: TStyleSet3 | false | null | undefined,\n  styleSet4: TStyleSet4 | false | null | undefined,\n): IProcessedStyleSet<TStyleSet1 & TStyleSet2 & TStyleSet3 & TStyleSet4>;\n\n/**\n * Takes in one or more style set objects, each consisting of a set of areas,\n * each which will produce a class name. Using this is analogous to calling\n * `mergeStyles` for each property in the object, but ensures we maintain the\n * set ordering when multiple style sets are merged.\n *\n * @param styleSets - One or more style sets to be merged.\n */\nexport function mergeStyleSets(...styleSets: Array<IStyleSet<any> | undefined | false | null>): IProcessedStyleSet<any>;\n\n/**\n * Takes in one or more style set objects, each consisting of a set of areas,\n * each which will produce a class name. Using this is analogous to calling\n * `mergeStyles` for each property in the object, but ensures we maintain the\n * set ordering when multiple style sets are merged.\n *\n * @param styleSets - One or more style sets to be merged.\n */\nexport function mergeStyleSets(\n  ...styleSets: Array<IStyleSet<any> | undefined | false | null>\n): IProcessedStyleSet<any> {\n  return mergeCssSets(styleSets as any, getStyleOptions());\n}\n\n/**\n * Takes in one or more style set objects, each1consisting of a set of areas,\n * each which will produce a class name. Using this is analogous to calling\n * `mergeCss` for each property in the object, but ensures we maintain the\n * set ordering when multiple style sets are merged.\n *\n * @param styleSets - One or more style sets to be merged.\n * @param options - (optional) Options to use when creating rules.\n */\nexport function mergeCssSets<TStyleSet extends IStyleSet<TStyleSet>>(\n  styleSets: [TStyleSet | false | null | undefined],\n  options?: IStyleOptions,\n): IProcessedStyleSet<TStyleSet>;\n\n/**\n * Takes in one or more style set objects, each1consisting of a set of areas,\n * each which will produce a class name. Using this is analogous to calling\n * `mergeCss` for each property in the object, but ensures we maintain the\n * set ordering when multiple style sets are merged.\n *\n * @param styleSets - One or more style sets to be merged.\n * @param options - (optional) Options to use when creating rules.\n */\nexport function mergeCssSets<TStyleSet1 extends IStyleSet<TStyleSet1>, TStyleSet2 extends IStyleSet<TStyleSet2>>(\n  styleSets: [TStyleSet1 | false | null | undefined, TStyleSet2 | false | null | undefined],\n  options?: IStyleOptions,\n): IProcessedStyleSet<TStyleSet1 & TStyleSet2>;\n\n/**\n * Takes in one or more style set objects, each1consisting of a set of areas,\n * each which will produce a class name. Using this is analogous to calling\n * `mergeCss` for each property in the object, but ensures we maintain the\n * set ordering when multiple style sets are merged.\n *\n * @param styleSets - One or more style sets to be merged.\n * @param options - (optional) Options to use when creating rules.\n */\nexport function mergeCssSets<\n  TStyleSet1 extends IStyleSet<TStyleSet1>,\n  TStyleSet2 extends IStyleSet<TStyleSet2>,\n  TStyleSet3 extends IStyleSet<TStyleSet3>\n>(\n  styleSets: [\n    TStyleSet1 | false | null | undefined,\n    TStyleSet2 | false | null | undefined,\n    TStyleSet3 | false | null | undefined,\n  ],\n  options?: IStyleOptions,\n): IProcessedStyleSet<TStyleSet1 & TStyleSet2 & TStyleSet3>;\n\n/**\n * Takes in one or more style set objects, each1consisting of a set of areas,\n * each which will produce a class name. Using this is analogous to calling\n * `mergeCss` for each property in the object, but ensures we maintain the\n * set ordering when multiple style sets are merged.\n *\n * @param styleSets - One or more style sets to be merged.\n * @param options - (optional) Options to use when creating rules.\n */\nexport function mergeCssSets<\n  TStyleSet1 extends IStyleSet<TStyleSet1>,\n  TStyleSet2 extends IStyleSet<TStyleSet2>,\n  TStyleSet3 extends IStyleSet<TStyleSet3>,\n  TStyleSet4 extends IStyleSet<TStyleSet4>\n>(\n  styleSets: [\n    TStyleSet1 | false | null | undefined,\n    TStyleSet2 | false | null | undefined,\n    TStyleSet3 | false | null | undefined,\n    TStyleSet4 | false | null | undefined,\n  ],\n  options?: IStyleOptions,\n): IProcessedStyleSet<TStyleSet1 & TStyleSet2 & TStyleSet3 & TStyleSet4>;\n\n/**\n * Takes in one or more style set objects, each1consisting of a set of areas,\n * each which will produce a class name. Using this is analogous to calling\n * `mergeCss` for each property in the object, but ensures we maintain the\n * set ordering when multiple style sets are merged.\n *\n * @param styleSets - One or more style sets to be merged.\n * @param options - (optional) Options to use when creating rules.\n */\nexport function mergeCssSets<TStyleSet extends IStyleSet<TStyleSet>>(\n  styleSet: [TStyleSet | false | null | undefined],\n  options?: IStyleOptions,\n): IProcessedStyleSet<TStyleSet>;\n\n/**\n * Takes in one or more style set objects, each1consisting of a set of areas,\n * each which will produce a class name. Using this is analogous to calling\n * `mergeCss` for each property in the object, but ensures the\n * set ordering when multiple style sets are merged.\n *\n * @param styleSets - One or more style sets to be merged.\n * @param options - (optional) Options to use when creating rules.\n */\nexport function mergeCssSets(\n  styleSets: Array<IStyleSet<any> | undefined | false | null>,\n  options?: IStyleOptions,\n): IProcessedStyleSet<any> {\n  // tslint:disable-next-line:no-any\n  const classNameSet: IProcessedStyleSet<any> = { subComponentStyles: {} };\n\n  const styleSet = styleSets[0];\n\n  if (!styleSet && styleSets.length <= 1) {\n    return { subComponentStyles: {} } as any;\n  }\n\n  const concatenatedStyleSet = concatStyleSets(...styleSets);\n\n  const registrations = [];\n\n  for (const styleSetArea in concatenatedStyleSet) {\n    if (concatenatedStyleSet.hasOwnProperty(styleSetArea)) {\n      if (styleSetArea === 'subComponentStyles') {\n        classNameSet.subComponentStyles = (concatenatedStyleSet as IConcatenatedStyleSet<any>).subComponentStyles || {};\n        continue;\n      }\n\n      const styles: IStyle = (concatenatedStyleSet as any)[styleSetArea];\n\n      const { classes, objects } = extractStyleParts(styles);\n      const registration = styleToRegistration(options || {}, { displayName: styleSetArea }, objects);\n\n      registrations.push(registration);\n\n      if (registration) {\n        classNameSet[styleSetArea] = classes.concat([registration.className]).join(' ');\n      }\n    }\n  }\n\n  for (const registration of registrations) {\n    if (registration) {\n      applyRegistration(registration);\n    }\n  }\n\n  return classNameSet as any;\n}\n","import { extractStyleParts } from './extractStyleParts';\nimport { IStyle, IStyleBaseArray } from './IStyle';\nimport { IStyleOptions } from './IStyleOptions';\nimport { getStyleOptions } from './StyleOptionsState';\nimport { styleToClassName } from './styleToClassName';\n\n/**\n * Concatenation helper, which can merge class names together. Skips over falsey values.\n *\n * @public\n */\nexport function mergeStyles(...args: (IStyle | IStyleBaseArray | false | null | undefined)[]): string {\n  return mergeCss(args, getStyleOptions());\n}\n\n/**\n * Concatenation helper, which can merge class names together. Skips over falsey values.\n * Accepts a set of options that will be used when calculating styles.\n *\n * @public\n */\nexport function mergeCss(\n  args: (IStyle | IStyleBaseArray | false | null | undefined) | (IStyle | IStyleBaseArray | false | null | undefined)[],\n  options?: IStyleOptions,\n): string {\n  const styleArgs = args instanceof Array ? args : [args];\n  const { classes, objects } = extractStyleParts(styleArgs);\n\n  if (objects.length) {\n    classes.push(styleToClassName(options || {}, objects));\n  }\n\n  return classes.join(' ');\n}\n","import { filteredAssign } from './object';\n\n/**\n * An array of events that are allowed on every html element type.\n *\n * @public\n */\nexport const baseElementEvents = [\n  'onCopy',\n  'onCut',\n  'onPaste',\n  'onCompositionEnd',\n  'onCompositionStart',\n  'onCompositionUpdate',\n  'onFocus',\n  'onFocusCapture',\n  'onBlur',\n  'onBlurCapture',\n  'onChange',\n  'onInput',\n  'onSubmit',\n  'onLoad',\n  'onError',\n  'onKeyDown',\n  'onKeyDownCapture',\n  'onKeyPress',\n  'onKeyUp',\n  'onAbort',\n  'onCanPlay',\n  'onCanPlayThrough',\n  'onDurationChange',\n  'onEmptied',\n  'onEncrypted',\n  'onEnded',\n  'onLoadedData',\n  'onLoadedMetadata',\n  'onLoadStart',\n  'onPause',\n  'onPlay',\n  'onPlaying',\n  'onProgress',\n  'onRateChange',\n  'onSeeked',\n  'onSeeking',\n  'onStalled',\n  'onSuspend',\n  'onTimeUpdate',\n  'onVolumeChange',\n  'onWaiting',\n  'onClick',\n  'onClickCapture',\n  'onContextMenu',\n  'onDoubleClick',\n  'onDrag',\n  'onDragEnd',\n  'onDragEnter',\n  'onDragExit',\n  'onDragLeave',\n  'onDragOver',\n  'onDragStart',\n  'onDrop',\n  'onMouseDown',\n  'onMouseDownCapture',\n  'onMouseEnter',\n  'onMouseLeave',\n  'onMouseMove',\n  'onMouseOut',\n  'onMouseOver',\n  'onMouseUp',\n  'onMouseUpCapture',\n  'onSelect',\n  'onTouchCancel',\n  'onTouchEnd',\n  'onTouchMove',\n  'onTouchStart',\n  'onScroll',\n  'onWheel',\n  'onPointerCancel',\n  'onPointerDown',\n  'onPointerEnter',\n  'onPointerLeave',\n  'onPointerMove',\n  'onPointerOut',\n  'onPointerOver',\n  'onPointerUp',\n  'onGotPointerCapture',\n  'onLostPointerCapture',\n];\n\n/**\n * An array of element attributes which are allowed on every html element type.\n *\n * @public\n */\nexport const baseElementProperties = [\n  'accessKey', // global\n  'children', // global\n  'className', // global\n  'contentEditable', // global\n  'dir', // global\n  'draggable', // global\n  'hidden', // global\n  'htmlFor', // global\n  'id', // global\n  'lang', // global\n  'role', // global\n  'style', // global\n  'tabIndex', // global\n  'title', // global\n  'translate', // global\n  'spellCheck', // global\n  'name', // global\n];\n\n/**\n * An array of HTML element properties and events.\n *\n * @public\n */\nexport const htmlElementProperties = baseElementProperties.concat(baseElementEvents);\n\n/**\n * An array of LABEL tag properties and events.\n *\n * @public\n */\nexport const labelProperties = htmlElementProperties.concat([\n  'form', // button, fieldset, input, label, meter, object, output, select, textarea\n]);\n\n/**\n * An array of AUDIO tag properties and events.\n *\n * @public\n */\nexport const audioProperties = htmlElementProperties.concat([\n  'height', // canvas, embed, iframe, img, input, object, video\n  'loop', // audio, video\n  'muted', // audio, video\n  'preload', // audio, video\n  'src', // audio, embed, iframe, img, input, script, source, track, video\n  'width', // canvas, embed, iframe, img, input, object, video\n]);\n\n/**\n * An array of VIDEO tag properties and events.\n *\n * @public\n */\nexport const videoProperties = audioProperties.concat([\n  'poster', // video\n]);\n\n/**\n * An array of OL tag properties and events.\n *\n * @public\n */\nexport const olProperties = htmlElementProperties.concat([\n  'start', // ol\n]);\n\n/**\n * An array of LI tag properties and events.\n *\n * @public\n */\nexport const liProperties = htmlElementProperties.concat([\n  'value', // button, input, li, option, meter, progress, param\n]);\n\n/**\n * An array of A tag properties and events.\n *\n * @public\n */\nexport const anchorProperties = htmlElementProperties.concat([\n  'download', // a, area\n  'href', // a, area, base, link\n  'hrefLang', // a, area, link\n  'media', // a, area, link, source, style\n  'rel', // a, area, link\n  'target', // a, area, base, form\n  'type', // a, button, input, link, menu, object, script, source, style\n]);\n\n/**\n * An array of BUTTON tag properties and events.\n *\n * @public\n */\nexport const buttonProperties = htmlElementProperties.concat([\n  'autoFocus', // button, input, select, textarea\n  'disabled', // button, fieldset, input, optgroup, option, select, textarea\n  'form', // button, fieldset, input, label, meter, object, output, select, textarea\n  'formAction', // input, button\n  'formEncType', // input, button\n  'formMethod', // input, button\n  'formNoValidate', // input, button\n  'formTarget', // input, button\n  'type', // a, button, input, link, menu, object, script, source, style\n  'value', // button, input, li, option, meter, progress, param,\n]);\n\n/**\n * An array of INPUT tag properties and events.\n *\n * @public\n */\nexport const inputProperties = buttonProperties.concat([\n  'accept', // input\n  'alt', // area, img, input\n  'autoComplete', // form, input\n  'checked', // input\n  'dirname', // input, textarea\n  'form', // button, fieldset, input, label, meter, object, output, select, textarea\n  'height', // canvas, embed, iframe, img, input, object, video\n  'inputMode', // input\n  'list', // input\n  'max', // input, meter\n  'maxLength', // input, textarea\n  'min', // input, meter\n  'multiple', // input, select\n  'pattern', // input\n  'placeholder', // input, textarea\n  'readOnly', // input, textarea\n  'required', // input, select, textarea\n  'src', // audio, embed, iframe, img, input, script, source, track, video\n  'step', // input\n  'size', // input\n  'type', // a, button, input, link, menu, object, script, source, style\n  'value', // button, input, li, option, meter, progress, param\n  'width', // canvas, embed, iframe, img, input, object, video\n]);\n\n/**\n * An array of TEXTAREA tag properties and events.\n *\n * @public\n */\nexport const textAreaProperties = buttonProperties.concat([\n  'cols', // textarea\n  'dirname', // input, textarea\n  'form', // button, fieldset, input, label, meter, object, output, select, textarea\n  'maxLength', // input, textarea\n  'placeholder', // input, textarea\n  'readOnly', // input, textarea\n  'required', // input, select, textarea\n  'rows', // textarea\n  'wrap', // textarea\n]);\n\n/**\n * An array of SELECT tag properties and events.\n *\n * @public\n */\nexport const selectProperties = buttonProperties.concat([\n  'form', // button, fieldset, input, label, meter, object, output, select, textarea\n  'multiple', // input, select\n  'required', // input, select, textarea\n]);\n\nexport const optionProperties = htmlElementProperties.concat([\n  'selected', // option\n  'value', // button, input, li, option, meter, progress, param\n]);\n\n/**\n * An array of TABLE tag properties and events.\n *\n * @public\n */\nexport const tableProperties = htmlElementProperties.concat([\n  'cellPadding', // table\n  'cellSpacing', // table\n]);\n\n/**\n * An array of TR tag properties and events.\n *\n * @public\n */\nexport const trProperties = htmlElementProperties;\n\n/**\n * An array of TH tag properties and events.\n *\n * @public\n */\nexport const thProperties = htmlElementProperties.concat([\n  'rowSpan', // td, th\n  'scope', // th\n]);\n\n/**\n * An array of TD tag properties and events.\n *\n * @public\n */\nexport const tdProperties = htmlElementProperties.concat([\n  'colSpan', // td\n  'headers', // td\n  'rowSpan', // td, th\n  'scope', // th\n]);\n\nexport const colGroupProperties = htmlElementProperties.concat([\n  'span', // col, colgroup\n]);\n\nexport const colProperties = htmlElementProperties.concat([\n  'span', // col, colgroup\n]);\n\n/**\n * An array of FORM tag properties and events.\n *\n * @public\n */\nexport const formProperties = htmlElementProperties.concat([\n  'acceptCharset', // form\n  'action', // form\n  'encType', // form\n  'encType', // form\n  'method', // form\n  'noValidate', // form\n  'target', // form\n]);\n\n/**\n * An array of IFRAME tag properties and events.\n *\n * @public\n */\nexport const iframeProperties = htmlElementProperties.concat([\n  'allow', // iframe\n  'allowFullScreen', // iframe\n  'allowPaymentRequest', // iframe\n  'allowTransparency', // iframe\n  'csp', // iframe\n  'height', // canvas, embed, iframe, img, input, object, video\n  'importance', // iframe\n  'referrerPolicy', // iframe\n  'sandbox', // iframe\n  'src', // audio, embed, iframe, img, input, script, source, track, video\n  'srcDoc', // iframe\n  'width', // canvas, embed, iframe, img, input, object, video,\n]);\n\n/**\n * An array of IMAGE tag properties and events.\n *\n * @public\n */\nexport const imgProperties = htmlElementProperties.concat([\n  'alt', // area, img, input\n  'crossOrigin', // img\n  'height', // canvas, embed, iframe, img, input, object, video\n  'src', // audio, embed, iframe, img, input, script, source, track, video\n  'srcSet', // img, source\n  'useMap', // img, object,\n  'width', // canvas, embed, iframe, img, input, object, video\n]);\n\n/**\n * @deprecated Use imgProperties for img elements.\n */\nexport const imageProperties = imgProperties;\n\n/**\n * An array of DIV tag properties and events.\n *\n * @public\n */\nexport const divProperties = htmlElementProperties;\n\n/**\n * Gets native supported props for an html element provided the allowance set. Use one of the property\n * sets defined (divProperties, buttonPropertes, etc) to filter out supported properties from a given\n * props set. Note that all data- and aria- prefixed attributes will be allowed.\n * NOTE: getNativeProps should always be applied first when adding props to a react component. The\n * non-native props should be applied second. This will prevent getNativeProps from overriding your custom props.\n * For example, if props passed to getNativeProps has an onClick function and getNativeProps is added to\n * the component after an onClick function is added, then the getNativeProps onClick will override it.\n *\n * @public\n * @param props - The unfiltered input props\n * @param allowedPropsNames-  The array of allowed propnames.\n * @returns The filtered props\n */\nexport function getNativeProps<T>(props: {}, allowedPropNames: string[], excludedPropNames?: string[]): T {\n  // It'd be great to properly type this while allowing 'aria-` and 'data-' attributes like TypeScript does for\n  // JSX attributes, but that ability is hardcoded into the TS compiler with no analog in TypeScript typings.\n  // Then we'd be able to enforce props extends native props (including aria- and data- attributes), and then\n  // return native props.\n  // We should be able to do this once this PR is merged: https://github.com/microsoft/TypeScript/pull/26797\n  return filteredAssign(\n    (propName: string) => {\n      return (\n        (!excludedPropNames || excludedPropNames.indexOf(propName) < 0) &&\n        (propName.indexOf('data-') === 0 || propName.indexOf('aria-') === 0 || allowedPropNames.indexOf(propName) >= 0)\n      );\n    },\n    {},\n    props,\n  ) as T;\n}\n","/**\n * Dictionary of booleans.\n *\n * @internal\n */\nexport interface IDictionary {\n  [className: string]: boolean;\n}\n\n/**\n * Serializable object.\n *\n * @internal\n */\nexport interface ISerializableObject {\n  toString?: () => string;\n}\n\n/**\n * css input type.\n *\n * @internal\n */\nexport type ICssInput = string | ISerializableObject | IDictionary | null | undefined | boolean;\n\n/**\n * Concatination helper, which can merge class names together. Skips over falsey values.\n *\n * @public\n */\nexport function css(...args: ICssInput[]): string {\n  let classes = [];\n\n  for (let arg of args) {\n    if (arg) {\n      if (typeof arg === 'string') {\n        classes.push(arg);\n      } else if (arg.hasOwnProperty('toString') && typeof arg.toString === 'function') {\n        classes.push(arg.toString());\n      } else {\n        // tslint:disable-next-line:no-any\n        for (let key in arg as any) {\n          // tslint:disable-next-line:no-any\n          if ((arg as any)[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n  }\n\n  return classes.join(' ');\n}\n","import { getWindow } from './dom/getWindow';\n\nlet isMacResult: boolean | undefined;\n\n/**\n * Returns true if the user is on a Mac. Caches the result value.\n * @param reset - Reset the cached result value (mainly for testing).\n */\nexport function isMac(reset?: boolean): boolean {\n  if (typeof isMacResult === 'undefined' || reset) {\n    const win = getWindow();\n    const userAgent = win && win.navigator.userAgent;\n\n    isMacResult = !!userAgent && userAgent.indexOf('Macintosh') !== -1;\n  }\n  return !!isMacResult;\n}\n","/**\n * Returns true if and only if the user is on a iOS device.\n * Used to determine whether iOS-specific behavior should be applied.\n */\nexport const isIOS = (): boolean => {\n  if (!window || !window.navigator || !window.navigator.userAgent) {\n    return false;\n  }\n  return /iPad|iPhone|iPod/i.test(window.navigator.userAgent);\n};\n","import * as React from 'react';\nimport { IBaseProps } from './BaseComponent.types';\nimport { extendComponent } from './extendComponent';\n\n/**\n * Helper to manage componentRef resolution. Internally appends logic to\n * lifetime methods to resolve componentRef to the passed in object.\n *\n * Usage: call initializeComponentRef(this) in the constructor,\n */\nexport function initializeComponentRef<TProps extends IBaseProps, TState>(obj: React.Component<TProps, TState>): void {\n  extendComponent(obj, {\n    componentDidMount: _onMount,\n    componentDidUpdate: _onUpdate,\n    componentWillUnmount: _onUnmount,\n  });\n}\n\nfunction _onMount(): void {\n  _setComponentRef(this.props.componentRef, this);\n}\n\nfunction _onUpdate(prevProps: IBaseProps): void {\n  if (prevProps.componentRef !== this.props.componentRef) {\n    // tslint:disable-next-line:no-any\n    _setComponentRef((prevProps as any).componentRef, null);\n    _setComponentRef(this.props.componentRef, this);\n  }\n}\n\nfunction _onUnmount(): void {\n  _setComponentRef(this.props.componentRef, null);\n}\n\nfunction _setComponentRef<TInterface>(componentRef: React.RefObject<TInterface>, value: TInterface | null): void {\n  if (componentRef) {\n    if (typeof componentRef === 'object') {\n      (componentRef as { current: TInterface | null }).current = value;\n    } else if (typeof componentRef === 'function') {\n      (componentRef as Function)(value);\n    }\n  }\n}\n","import * as React from 'react';\nimport {\n  Async,\n  KeyCodes,\n  divProperties,\n  doesElementContainFocus,\n  getDocument,\n  getNativeProps,\n  on,\n  getWindow,\n} from '../../Utilities';\nimport { IPopupProps } from './Popup.types';\n\nexport interface IPopupState {\n  needsVerticalScrollBar?: boolean;\n}\n\n/**\n * This adds accessibility to Dialog and Panel controls\n */\nexport class Popup extends React.Component<IPopupProps, IPopupState> {\n  public static defaultProps: IPopupProps = {\n    shouldRestoreFocus: true,\n  };\n\n  public _root = React.createRef<HTMLDivElement>();\n  private _disposables: (() => void)[] = [];\n  private _originalFocusedElement: HTMLElement;\n  private _containsFocus: boolean;\n  private _async: Async;\n\n  public constructor(props: IPopupProps) {\n    super(props);\n    this._async = new Async(this);\n    this.state = { needsVerticalScrollBar: false };\n  }\n\n  // tslint:disable-next-line function-name\n  public UNSAFE_componentWillMount(): void {\n    this._originalFocusedElement = getDocument()!.activeElement as HTMLElement;\n  }\n\n  public componentDidMount(): void {\n    if (this._root.current) {\n      this._disposables.push(\n        on(this._root.current, 'focus', this._onFocus, true),\n        on(this._root.current, 'blur', this._onBlur, true),\n      );\n      const currentWindow = getWindow(this._root.current);\n      if (currentWindow) {\n        this._disposables.push(on(currentWindow, 'keydown', this._onKeyDown as any));\n      }\n      if (doesElementContainFocus(this._root.current)) {\n        this._containsFocus = true;\n      }\n    }\n\n    this._updateScrollBarAsync();\n  }\n\n  public componentDidUpdate() {\n    this._updateScrollBarAsync();\n    this._async.dispose();\n  }\n\n  public componentWillUnmount(): void {\n    this._disposables.forEach((dispose: () => void) => dispose());\n    if (\n      this.props.shouldRestoreFocus &&\n      this._originalFocusedElement &&\n      this._containsFocus &&\n      (this._originalFocusedElement as any) !== window\n    ) {\n      // This slight delay is required so that we can unwind the stack, let react try to mess with focus, and then\n      // apply the correct focus. Without the setTimeout, we end up focusing the correct thing, and then React wants\n      // to reset the focus back to the thing it thinks should have been focused.\n      if (this._originalFocusedElement) {\n        this._originalFocusedElement.focus();\n      }\n    }\n\n    // De-reference DOM Node to avoid retainment via transpiled closure of _onKeyDown\n    delete this._originalFocusedElement;\n  }\n\n  public render(): JSX.Element {\n    const { role, className, ariaLabel, ariaLabelledBy, ariaDescribedBy, style } = this.props;\n\n    return (\n      <div\n        ref={this._root}\n        {...getNativeProps(this.props, divProperties)}\n        className={className}\n        role={role}\n        aria-label={ariaLabel}\n        aria-labelledby={ariaLabelledBy}\n        aria-describedby={ariaDescribedBy}\n        onKeyDown={this._onKeyDown}\n        style={{ overflowY: this.state.needsVerticalScrollBar ? 'scroll' : undefined, outline: 'none', ...style }}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n\n  private _onKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    switch (ev.which) {\n      case KeyCodes.escape:\n        if (this.props.onDismiss) {\n          this.props.onDismiss(ev);\n\n          ev.preventDefault();\n          ev.stopPropagation();\n        }\n\n        break;\n    }\n  };\n\n  private _updateScrollBarAsync(): void {\n    this._async.requestAnimationFrame(() => {\n      this._getScrollBar();\n    });\n  }\n\n  private _getScrollBar(): void {\n    // If overflowY is overriden, don't waste time calculating whether the scrollbar is necessary.\n    if (this.props.style && this.props.style.overflowY) {\n      return;\n    }\n\n    let needsVerticalScrollBar = false;\n    if (this._root && this._root.current && this._root.current.firstElementChild) {\n      // ClientHeight returns the client height of an element rounded to an\n      // integer. On some browsers at different zoom levels this rounding\n      // can generate different results for the root container and child even\n      // though they are the same height. This causes us to show a scroll bar\n      // when not needed. Ideally we would use BoundingClientRect().height\n      // instead however seems that the API is 90% slower than using ClientHeight.\n      // Therefore instead we will calculate the difference between heights and\n      // allow for a 1px difference to still be considered ok and not show the\n      // scroll bar.\n      const rootHeight = this._root.current.clientHeight;\n      const firstChildHeight = this._root.current.firstElementChild.clientHeight;\n      if (rootHeight > 0 && firstChildHeight > rootHeight) {\n        needsVerticalScrollBar = firstChildHeight - rootHeight > 1;\n      }\n    }\n    if (this.state.needsVerticalScrollBar !== needsVerticalScrollBar) {\n      this.setState({\n        needsVerticalScrollBar: needsVerticalScrollBar,\n      });\n    }\n  }\n\n  private _onFocus = (): void => {\n    this._containsFocus = true;\n  };\n\n  private _onBlur = (ev: FocusEvent): void => {\n    /** The popup should update this._containsFocus when:\n     * relatedTarget exists AND\n     * the relatedTarget is not contained within the popup.\n     * If the relatedTarget is within the popup, that means the popup still has focus\n     * and focused moved from one element to another within the popup.\n     * If relatedTarget is undefined or null that usually means that a\n     * keyboard event occured and focus didn't change\n     */\n    if (this._root.current && ev.relatedTarget && !this._root.current.contains(ev.relatedTarget as HTMLElement)) {\n      this._containsFocus = false;\n    }\n  };\n}\n","export function on(\n  element: Element | Window,\n  eventName: string,\n  callback: (ev: Event) => void,\n  options?: boolean,\n): () => void {\n  element.addEventListener(eventName, callback, options);\n\n  return () => element.removeEventListener(eventName, callback, options);\n}\n","import * as React from 'react';\nimport { Customizations } from './Customizations';\nimport { hoistStatics } from '../hoistStatics';\nimport { CustomizerContext, ICustomizerContext } from './CustomizerContext';\nimport { concatStyleSets } from '@uifabric/merge-styles';\n\nexport function customizable(\n  scope: string,\n  fields: string[],\n  concatStyles?: boolean,\n  // tslint:disable-next-line:no-any\n): <P>(ComposedComponent: React.ComponentType<P>) => any {\n  // tslint:disable-next-line:no-shadowed-variable\n  return function customizableFactory<P>(\n    // tslint:disable-next-line:no-any\n    ComposedComponent: React.ComponentType<P>,\n    // tslint:disable-next-line:no-any\n  ): any {\n    const resultClass = class ComponentWithInjectedProps extends React.Component<P, {}> {\n      public static displayName: string = 'Customized' + scope;\n\n      // tslint:disable-next-line:no-any\n      private _styleCache: { default?: any; component?: any; merged?: any } = {};\n\n      constructor(props: P) {\n        super(props);\n\n        this._onSettingChanged = this._onSettingChanged.bind(this);\n      }\n\n      public componentDidMount(): void {\n        Customizations.observe(this._onSettingChanged);\n      }\n\n      public componentWillUnmount(): void {\n        Customizations.unobserve(this._onSettingChanged);\n      }\n\n      public render(): JSX.Element {\n        return (\n          <CustomizerContext.Consumer>\n            {(context: ICustomizerContext) => {\n              const defaultProps = Customizations.getSettings(fields, scope, context.customizations);\n\n              // tslint:disable-next-line:no-any\n              const componentProps = this.props as any;\n\n              // If defaultProps.styles is a function, evaluate it before calling concatStyleSets\n              if (defaultProps.styles && typeof defaultProps.styles === 'function') {\n                defaultProps.styles = defaultProps.styles({ ...defaultProps, ...componentProps });\n              }\n\n              // If concatStyles is true and custom styles have been defined compute those styles\n              if (concatStyles && defaultProps.styles) {\n                if (\n                  this._styleCache.default !== defaultProps.styles ||\n                  this._styleCache.component !== componentProps.styles\n                ) {\n                  const mergedStyles = concatStyleSets(defaultProps.styles, componentProps.styles);\n                  this._styleCache.default = defaultProps.styles;\n                  this._styleCache.component = componentProps.styles;\n                  this._styleCache.merged = mergedStyles;\n                }\n\n                return <ComposedComponent {...defaultProps} {...componentProps} styles={this._styleCache.merged} />;\n              }\n\n              return <ComposedComponent {...defaultProps} {...componentProps} />;\n            }}\n          </CustomizerContext.Consumer>\n        );\n      }\n\n      private _onSettingChanged(): void {\n        this.forceUpdate();\n      }\n    };\n\n    return hoistStatics(ComposedComponent, resultClass);\n  };\n}\n","import { findElementRecursive } from './findElementRecursive';\nimport { DATA_PORTAL_ATTRIBUTE } from './setPortalAttribute';\n\n/**\n * Determine whether a target is within a portal from perspective of root or optional parent.\n * This function only works against portal components that use the setPortalAttribute function.\n * If both parent and child are within the same portal this function will return false.\n * @param target - Element to query portal containment status of.\n * @param parent - Optional parent perspective. Search for containing portal stops at parent\n * (or root if parent is undefined or invalid.)\n */\nexport function portalContainsElement(target: HTMLElement, parent?: HTMLElement): boolean {\n  const elementMatch = findElementRecursive(\n    target,\n    (testElement: HTMLElement) => parent === testElement || testElement.hasAttribute(DATA_PORTAL_ATTRIBUTE),\n  );\n  return elementMatch !== null && elementMatch.hasAttribute(DATA_PORTAL_ATTRIBUTE);\n}\n","/**\n * Helper to find the index of an item within an array, using a callback to\n * determine the match.\n *\n * @public\n * @param array - Array to search.\n * @param cb - Callback which returns true on matches.\n */\nexport function findIndex<T>(array: T[], cb: (item: T, index: number) => boolean): number {\n  let index = -1;\n\n  for (let i = 0; array && i < array.length; i++) {\n    if (cb(array[i], i)) {\n      index = i;\n      break;\n    }\n  }\n\n  return index;\n}\n\n/**\n * Helper to find the first item within an array that satisfies the callback.\n * @param array - Array to search\n * @param cb - Callback which returns true on matches\n */\nexport function find<T>(array: T[], cb: (item: T, index: number) => boolean): T | undefined {\n  let index = findIndex(array, cb);\n\n  if (index < 0) {\n    return undefined;\n  }\n\n  return array[index];\n}\n\n/**\n * Creates an array of a given size and helper method to populate.\n *\n * @public\n * @param size - Size of array.\n * @param getItem - Callback to populate given cell index.\n */\nexport function createArray<T>(size: number, getItem: (index: number) => T): T[] {\n  let array: T[] = [];\n\n  for (let i = 0; i < size; i++) {\n    array.push(getItem(i));\n  }\n\n  return array;\n}\n\n/**\n * Convert the given array to a matrix with columnCount number\n * of columns.\n *\n * @public\n * @param items - The array to convert\n * @param columnCount - The number of columns for the resulting matrix\n * @returns A matrix of items\n */\nexport function toMatrix<T>(items: T[], columnCount: number): T[][] {\n  return items.reduce((rows: T[][], currentValue: T, index: number) => {\n    if (index % columnCount === 0) {\n      rows.push([currentValue]);\n    } else {\n      rows[rows.length - 1].push(currentValue);\n    }\n    return rows;\n  }, [] as T[][]);\n}\n\n/**\n * Given an array, it returns a new array that does not contain the item at the given index.\n * @param array - The array to operate on\n * @param index - The index of the element to remove\n */\nexport function removeIndex<T>(array: T[], index: number): T[] {\n  return array.filter((_: T, i: number) => index !== i);\n}\n\n/**\n * Given an array, this function returns a new array where the element at a given index has been replaced.\n * @param array - The array to operate on\n * @param newElement - The element that will be placed in the new array\n * @param index - The index of the element that should be replaced\n */\nexport function replaceElement<T>(array: T[], newElement: T, index: number): T[] {\n  const copy = array.slice();\n  copy[index] = newElement;\n  return copy;\n}\n\n/**\n * Given an array, this function returns a new array where an element has been inserted at the given index.\n * @param array - The array to operate on\n * @param index - The index where an element should be inserted\n * @param itemToAdd - The element to insert\n */\nexport function addElementAtIndex<T>(array: T[], index: number, itemToAdd: T): T[] {\n  const copy = array.slice();\n  copy.splice(index, 0, itemToAdd);\n  return copy;\n}\n\n/**\n * Given an array where each element is of type T or T[], flatten it into an array of T\n * @param array - The array where each element can optionally also be an array\n */\nexport function flatten<T>(array: (T | T[])[]): T[] {\n  let result: T[] = [];\n  array.forEach((item: T | T[]): T[] => (result = result.concat(item)));\n  return result;\n}\n\n/**\n * Returns a boolean indicating if the two given arrays are equal in length and values.\n *\n * @param array1 - First array to compare\n * @param array2 - Second array to compare\n * @returns True if the arrays are the same length and have the same values in the same positions, false otherwise.\n */\nexport function arraysEqual<T>(array1: T[], array2: T[]): boolean {\n  if (array1.length !== array2.length) {\n    return false;\n  }\n  for (let i = 0; i < array1.length; i++) {\n    if (array1[i] !== array2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n","/**\n * ARIA helper to concatenate attributes, returning undefined if all attributes\n * are undefined. (Empty strings are not a valid ARIA attribute value.)\n *\n * @param ariaAttributes - ARIA attributes to merge\n */\nexport function mergeAriaAttributeValues(...ariaAttributes: (string | undefined | false)[]): string | undefined {\n  const mergedAttribute = ariaAttributes\n    .filter((arg: string | undefined | false) => arg)\n    .join(' ')\n    .trim();\n  return mergedAttribute === '' ? undefined : mergedAttribute;\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import * as React from 'react';\nimport { Customizations } from './Customizations';\nimport { CustomizerContext, ICustomizerContext } from './CustomizerContext';\nimport { mergeCustomizations } from './mergeCustomizations';\nimport { ICustomizerProps } from './Customizer.types';\n\n/**\n * The Customizer component allows for default props to be mixed into components which\n * are decorated with the customizable() decorator, or use the styled HOC. This enables\n * injection scenarios like:\n *\n * 1. render svg icons instead of the icon font within all buttons\n * 2. inject a custom theme object into a component\n *\n * Props are provided via the settings prop which should be one of the following:\n * - A json map which contains 1 or more name/value pairs representing injectable props.\n * - A function that receives the current settings and returns the new ones that apply to the scope\n *\n * @public\n */\nexport class Customizer extends React.Component<ICustomizerProps> {\n  public componentDidMount(): void {\n    Customizations.observe(this._onCustomizationChange);\n  }\n\n  public componentWillUnmount(): void {\n    Customizations.unobserve(this._onCustomizationChange);\n  }\n\n  public render(): React.ReactElement<{}> {\n    const { contextTransform } = this.props;\n    return (\n      <CustomizerContext.Consumer>\n        {(parentContext: ICustomizerContext) => {\n          let newContext = mergeCustomizations(this.props, parentContext);\n\n          if (contextTransform) {\n            newContext = contextTransform(newContext);\n          }\n\n          return <CustomizerContext.Provider value={newContext}>{this.props.children}</CustomizerContext.Provider>;\n        }}\n      </CustomizerContext.Consumer>\n    );\n  }\n\n  private _onCustomizationChange = () => this.forceUpdate();\n}\n","import { mergeSettings, mergeScopedSettings } from './mergeSettings';\nimport { ICustomizerProps } from './Customizer.types';\nimport { ICustomizerContext } from './CustomizerContext';\n\n/**\n * Merge props and customizations giving priority to props over context.\n * NOTE: This function will always perform multiple merge operations. Use with caution.\n * @param props - New settings to merge in.\n * @param parentContext - Context containing current settings.\n * @returns Merged customizations.\n */\nexport function mergeCustomizations(props: ICustomizerProps, parentContext: ICustomizerContext): ICustomizerContext {\n  const { customizations = { settings: {}, scopedSettings: {} } } = parentContext || {};\n\n  return {\n    customizations: {\n      settings: mergeSettings(customizations.settings, props.settings),\n      scopedSettings: mergeScopedSettings(customizations.scopedSettings, props.scopedSettings),\n      inCustomizerContext: true,\n    },\n  };\n}\n","import { getGlobalClassNames } from '../../Styling';\nimport { IFabricStyleProps, IFabricStyles } from './Fabric.types';\n\nconst inheritFont = { fontFamily: 'inherit' };\n\nconst GlobalClassNames = {\n  root: 'ms-Fabric',\n  bodyThemed: 'ms-Fabric-bodyThemed',\n};\n\nexport interface IFabricClassNames {\n  root: string;\n  bodyThemed: string;\n}\n\nexport const getStyles = (props: IFabricStyleProps): IFabricStyles => {\n  const { theme, className, applyTheme } = props;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      {\n        color: theme.palette.neutralPrimary,\n        selectors: {\n          '& button': inheritFont,\n          '& input': inheritFont,\n          '& textarea': inheritFont,\n        },\n      },\n      // apply theme to only if applyTheme is true\n      applyTheme && {\n        color: theme.semanticColors.bodyText,\n        backgroundColor: theme.semanticColors.bodyBackground,\n      },\n      className,\n    ],\n    bodyThemed: [\n      {\n        backgroundColor: theme.semanticColors.bodyBackground,\n      },\n    ],\n  };\n};\n","import * as React from 'react';\nimport {\n  Customizer,\n  getNativeProps,\n  divProperties,\n  classNamesFunction,\n  getDocument,\n  memoizeFunction,\n  getRTL,\n  FocusRects,\n} from '../../Utilities';\nimport { getStyles } from './Fabric.styles';\nimport { IFabricProps, IFabricStyleProps, IFabricStyles } from './Fabric.types';\nimport { IProcessedStyleSet } from '@uifabric/merge-styles';\nimport { ITheme, createTheme } from '../../Styling';\n\nconst getClassNames = classNamesFunction<IFabricStyleProps, IFabricStyles>();\nconst getFabricTheme = memoizeFunction((theme?: ITheme, isRTL?: boolean) => createTheme({ ...theme, rtl: isRTL }));\n\nconst getDir = (theme?: ITheme, dir?: IFabricProps['dir']) => {\n  const contextDir = getRTL(theme) ? 'rtl' : 'ltr';\n  const pageDir = getRTL() ? 'rtl' : 'ltr';\n  const componentDir = dir ? dir : contextDir;\n  return {\n    // If Fabric dir !== contextDir\n    // Or If contextDir !== pageDir\n    // Then we need to set dir of the Fabric root\n    rootDir: componentDir !== contextDir || componentDir !== pageDir ? componentDir : dir,\n    // If dir !== contextDir || pageDir\n    // then set contextual theme around content\n    needsTheme: componentDir !== contextDir,\n  };\n};\n\nexport class FabricBase extends React.Component<IFabricProps> {\n  private _rootElement = React.createRef<HTMLDivElement>();\n  private _removeClassNameFromBody?: () => void = undefined;\n\n  public render() {\n    const { as: Root = 'div', theme, dir } = this.props;\n    const classNames = this._getClassNames();\n    const divProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(this.props, divProperties, ['dir']);\n    const { rootDir, needsTheme } = getDir(theme, dir);\n\n    let renderedContent = <Root dir={rootDir} {...divProps} className={classNames.root} ref={this._rootElement} />;\n\n    if (needsTheme) {\n      renderedContent = (\n        <Customizer settings={{ theme: getFabricTheme(theme, dir === 'rtl') }}>{renderedContent}</Customizer>\n      );\n    }\n\n    return (\n      <>\n        {renderedContent}\n        <FocusRects rootRef={this._rootElement} />\n      </>\n    );\n  }\n\n  public componentDidMount(): void {\n    this._addClassNameToBody();\n  }\n\n  public componentWillUnmount(): void {\n    if (this._removeClassNameFromBody) {\n      this._removeClassNameFromBody();\n    }\n  }\n\n  private _getClassNames(): IProcessedStyleSet<IFabricStyles> {\n    const { className, theme, applyTheme } = this.props;\n    const classNames = getClassNames(getStyles, {\n      theme: theme!,\n      applyTheme: applyTheme,\n      className,\n    });\n    return classNames;\n  }\n\n  private _addClassNameToBody(): void {\n    if (this.props.applyThemeToBody) {\n      const classNames = this._getClassNames();\n      const currentDoc = getDocument(this._rootElement.current);\n      if (currentDoc) {\n        currentDoc.body.classList.add(classNames.bodyThemed);\n        this._removeClassNameFromBody = () => {\n          currentDoc.body.classList.remove(classNames.bodyThemed);\n        };\n      }\n    }\n  }\n}\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { FabricBase } from './Fabric.base';\nimport { getStyles } from './Fabric.styles';\nimport { IFabricProps, IFabricStyleProps, IFabricStyles } from './Fabric.types';\n\nexport const Fabric: React.FunctionComponent<IFabricProps> = styled<IFabricProps, IFabricStyleProps, IFabricStyles>(\n  FabricBase,\n  getStyles,\n  undefined,\n  {\n    scope: 'Fabric',\n  },\n);\n","const _layersByHostId: { [hostId: string]: (() => void)[] } = {};\n\nlet _defaultHostSelector: string | undefined;\n\n/**\n * Register a layer for a given host id\n * @param hostId Id of the layer host\n * @param layer Layer instance\n */\nexport function registerLayer(hostId: string, callback: () => void) {\n  if (!_layersByHostId[hostId]) {\n    _layersByHostId[hostId] = [];\n  }\n\n  _layersByHostId[hostId].push(callback);\n}\n\n/**\n * Unregister a layer for a given host id\n * @param hostId Id of the layer host\n * @param layer Layer instance\n */\nexport function unregisterLayer(hostId: string, callback: () => void) {\n  if (_layersByHostId[hostId]) {\n    const idx = _layersByHostId[hostId].indexOf(callback);\n    if (idx >= 0) {\n      _layersByHostId[hostId].splice(idx, 1);\n      if (_layersByHostId[hostId].length === 0) {\n        delete _layersByHostId[hostId];\n      }\n    }\n  }\n}\n\n/**\n * Used for notifying applicable Layers that a host is available/unavailable and to re-evaluate Layers that\n * care about the specific host.\n */\nexport function notifyHostChanged(id: string) {\n  if (_layersByHostId[id]) {\n    _layersByHostId[id].forEach(callback => callback());\n  }\n}\n\n/**\n * Sets the default target selector to use when determining the host in which\n * Layered content will be injected into. If not provided, an element will be\n * created at the end of the document body.\n *\n * Passing in a falsey value will clear the default target and reset back to\n * using a created element at the end of document body.\n */\nexport function setDefaultTarget(selector?: string) {\n  _defaultHostSelector = selector;\n}\n\n/**\n * Get the default target selector when determining a host\n */\nexport function getDefaultTarget(): string | undefined {\n  return _defaultHostSelector;\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport { Fabric } from '../../Fabric';\nimport { ILayerProps, ILayerStyleProps, ILayerStyles } from './Layer.types';\nimport {\n  classNamesFunction,\n  customizable,\n  getDocument,\n  setPortalAttribute,\n  setVirtualParent,\n  warnDeprecations,\n} from '../../Utilities';\nimport { registerLayer, getDefaultTarget, unregisterLayer } from './Layer.notification';\n\nexport type ILayerBaseState = {\n  hostId?: string;\n  layerElement?: HTMLElement;\n};\n\nconst getClassNames = classNamesFunction<ILayerStyleProps, ILayerStyles>();\n\n@customizable('Layer', ['theme', 'hostId'])\nexport class LayerBase extends React.Component<ILayerProps, ILayerBaseState> {\n  public static defaultProps: ILayerProps = {\n    onLayerDidMount: () => undefined,\n    onLayerWillUnmount: () => undefined,\n  };\n\n  private _rootRef = React.createRef<HTMLSpanElement>();\n\n  constructor(props: ILayerProps) {\n    super(props);\n\n    this.state = {};\n\n    if (process.env.NODE_ENV !== 'production') {\n      warnDeprecations('Layer', props, {\n        onLayerMounted: 'onLayerDidMount',\n      });\n    }\n  }\n\n  public componentDidMount(): void {\n    const { hostId } = this.props;\n\n    this._createLayerElement();\n\n    if (hostId) {\n      registerLayer(hostId, this._createLayerElement);\n    }\n  }\n\n  public render(): React.ReactNode {\n    const { layerElement } = this.state;\n    const classNames = this._getClassNames();\n    const { eventBubblingEnabled } = this.props;\n\n    return (\n      <span className=\"ms-layer\" ref={this._rootRef}>\n        {layerElement &&\n          ReactDOM.createPortal(\n            <Fabric {...(!eventBubblingEnabled && _getFilteredEvents())} className={classNames.content}>\n              {this.props.children}\n            </Fabric>,\n            layerElement,\n          )}\n      </span>\n    );\n  }\n\n  public componentDidUpdate(): void {\n    if (this.props.hostId !== this.state.hostId) {\n      this._createLayerElement();\n    }\n  }\n\n  public componentWillUnmount(): void {\n    const { hostId } = this.props;\n\n    this._removeLayerElement();\n    if (hostId) {\n      unregisterLayer(hostId, this._createLayerElement);\n    }\n  }\n\n  private _createLayerElement = () => {\n    const { hostId } = this.props;\n\n    const doc = getDocument(this._rootRef.current);\n    const host = this._getHost();\n\n    if (!doc || !host) {\n      return;\n    }\n\n    // If one was already existing, remove.\n    this._removeLayerElement();\n\n    const layerElement = doc.createElement('div');\n    const classNames = this._getClassNames();\n\n    layerElement.className = classNames.root!;\n    setPortalAttribute(layerElement);\n    setVirtualParent(layerElement, this._rootRef.current!);\n\n    this.props.insertFirst ? host.insertBefore(layerElement, host.firstChild) : host.appendChild(layerElement);\n\n    this.setState(\n      {\n        hostId,\n        layerElement,\n      },\n      () => {\n        // tslint:disable-next-line:deprecation\n        const { onLayerDidMount, onLayerMounted } = this.props;\n        if (onLayerMounted) {\n          onLayerMounted();\n        }\n\n        if (onLayerDidMount) {\n          onLayerDidMount();\n        }\n      },\n    );\n  };\n\n  private _removeLayerElement(): void {\n    const { onLayerWillUnmount } = this.props;\n    const { layerElement } = this.state;\n\n    if (onLayerWillUnmount) {\n      onLayerWillUnmount();\n    }\n\n    if (layerElement && layerElement.parentNode) {\n      const parentNode = layerElement.parentNode;\n      if (parentNode) {\n        parentNode.removeChild(layerElement);\n      }\n    }\n  }\n\n  private _getClassNames() {\n    const { className, styles, theme } = this.props;\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      isNotHost: !this.props.hostId,\n    });\n\n    return classNames;\n  }\n\n  private _getHost(): Node | undefined {\n    const { hostId } = this.props;\n    const doc = getDocument(this._rootRef.current);\n    if (!doc) {\n      return undefined;\n    }\n\n    if (hostId) {\n      return doc.getElementById(hostId) as Node;\n    } else {\n      const defaultHostSelector = getDefaultTarget();\n      return defaultHostSelector ? (doc.querySelector(defaultHostSelector) as Node) : doc.body;\n    }\n  }\n}\n\nconst _onFilterEvent = (ev: React.SyntheticEvent<HTMLElement>): void => {\n  // We should just be able to check ev.bubble here and only stop events that are bubbling up. However, even though\n  // mouseenter and mouseleave do NOT bubble up, they are showing up as bubbling. Therefore we stop events based on\n  // event name rather than ev.bubble.\n  if (\n    ev.eventPhase === Event.BUBBLING_PHASE &&\n    ev.type !== 'mouseenter' &&\n    ev.type !== 'mouseleave' &&\n    ev.type !== 'touchstart' &&\n    ev.type !== 'touchend'\n  ) {\n    ev.stopPropagation();\n  }\n};\n\nlet _filteredEventProps: { [key: string]: (ev: React.SyntheticEvent<HTMLElement, Event>) => void };\n\nfunction _getFilteredEvents() {\n  if (!_filteredEventProps) {\n    _filteredEventProps = {} as any;\n\n    [\n      'onClick',\n      'onContextMenu',\n      'onDoubleClick',\n      'onDrag',\n      'onDragEnd',\n      'onDragEnter',\n      'onDragExit',\n      'onDragLeave',\n      'onDragOver',\n      'onDragStart',\n      'onDrop',\n      'onMouseDown',\n      'onMouseEnter',\n      'onMouseLeave',\n      'onMouseMove',\n      'onMouseOver',\n      'onMouseOut',\n      'onMouseUp',\n      'onTouchMove',\n      'onTouchStart',\n      'onTouchCancel',\n      'onTouchEnd',\n      'onKeyDown',\n      'onKeyPress',\n      'onKeyUp',\n      'onFocus',\n      'onBlur',\n      'onChange',\n      'onInput',\n      'onInvalid',\n      'onSubmit',\n    ].forEach(name => (_filteredEventProps[name] = _onFilterEvent));\n  }\n\n  return _filteredEventProps;\n}\n","import { IVirtualElement } from './IVirtualElement';\n/**\n * Sets the virtual parent of an element.\n * Pass `undefined` as the `parent` to clear the virtual parent.\n *\n * @public\n */\nexport function setVirtualParent(child: HTMLElement, parent: HTMLElement): void {\n  let virtualChild = <IVirtualElement>child;\n  let virtualParent = <IVirtualElement>parent;\n  if (!virtualChild._virtual) {\n    virtualChild._virtual = {\n      children: [],\n    };\n  }\n  let oldParent = virtualChild._virtual.parent;\n  if (oldParent && oldParent !== parent) {\n    // Remove the child from its old parent.\n    let index = oldParent._virtual.children.indexOf(virtualChild);\n    if (index > -1) {\n      oldParent._virtual.children.splice(index, 1);\n    }\n  }\n  virtualChild._virtual.parent = virtualParent || undefined;\n  if (virtualParent) {\n    if (!virtualParent._virtual) {\n      virtualParent._virtual = {\n        children: [],\n      };\n    }\n    virtualParent._virtual.children.push(virtualChild);\n  }\n}\n","import { ILayerStyleProps, ILayerStyles } from './Layer.types';\nimport { ZIndexes, getGlobalClassNames } from '../../Styling';\n\nconst GlobalClassNames = {\n  root: 'ms-Layer',\n  rootNoHost: 'ms-Layer--fixed',\n  content: 'ms-Layer-content',\n};\n\nexport const getStyles = (props: ILayerStyleProps): ILayerStyles => {\n  const { className, isNotHost, theme } = props;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      isNotHost && [\n        classNames.rootNoHost,\n        {\n          position: 'fixed',\n          zIndex: ZIndexes.Layer,\n          top: 0,\n          left: 0,\n          bottom: 0,\n          right: 0,\n          visibility: 'hidden',\n        },\n      ],\n      className,\n    ],\n    content: [\n      classNames.content,\n      {\n        visibility: 'visible',\n      },\n    ],\n  };\n};\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { ILayerProps, ILayerStyleProps, ILayerStyles } from './Layer.types';\nimport { LayerBase } from './Layer.base';\nimport { getStyles } from './Layer.styles';\n\nexport const Layer: React.FunctionComponent<ILayerProps> = styled<ILayerProps, ILayerStyleProps, ILayerStyles>(\n  LayerBase,\n  getStyles,\n  undefined,\n  {\n    scope: 'Layer',\n    fields: ['hostId', 'theme', 'styles'],\n  },\n);\n","/**\n * Rectangle helper class.\n *\n * @public\n * {@docCategory Rectangle}\n */\nexport class Rectangle {\n  public top: number;\n  public bottom: number;\n  public left: number;\n  public right: number;\n\n  constructor(left: number = 0, right: number = 0, top: number = 0, bottom: number = 0) {\n    this.top = top;\n    this.bottom = bottom;\n    this.left = left;\n    this.right = right;\n  }\n\n  /**\n   * Calculated automatically by subtracting the right from left\n   */\n  get width(): number {\n    return this.right - this.left;\n  }\n\n  /**\n   * Calculated automatically by subtracting the bottom from top.\n   */\n  get height(): number {\n    return this.bottom - this.top;\n  }\n\n  /**\n   * Tests if another rect is approximately equal to this rect (within 4 decimal places.)\n   */\n  public equals(rect: Rectangle): boolean {\n    // Fixing to 4 decimal places because it allows enough precision and will handle cases when something\n    // should be rounded, like .999999 should round to 1.\n    return (\n      parseFloat(this.top.toFixed(4)) === parseFloat(rect.top.toFixed(4)) &&\n      parseFloat(this.bottom.toFixed(4)) === parseFloat(rect.bottom.toFixed(4)) &&\n      parseFloat(this.left.toFixed(4)) === parseFloat(rect.left.toFixed(4)) &&\n      parseFloat(this.right.toFixed(4)) === parseFloat(rect.right.toFixed(4))\n    );\n  }\n}\n","import { DirectionalHint } from '../../common/DirectionalHint';\nimport { getScrollbarWidth, getRTL, Rectangle as FullRectangle, IRectangle } from '../../Utilities';\nimport {\n  IPositionDirectionalHintData,\n  IPositionedData,\n  IPoint,\n  ICalloutPositionedInfo,\n  ICalloutBeakPositionedInfo,\n  IPositionProps,\n  ICalloutPositionProps,\n  RectangleEdge,\n} from './positioning.types';\n\nexport class Rectangle extends FullRectangle {\n  [key: string]: number | boolean | any;\n}\n\nfunction _createPositionData(\n  targetEdge: RectangleEdge,\n  alignmentEdge?: RectangleEdge,\n  isAuto?: boolean,\n): IPositionDirectionalHintData {\n  return {\n    targetEdge: targetEdge,\n    alignmentEdge: alignmentEdge,\n    isAuto: isAuto,\n  };\n}\n\n// Currently the beakPercent is set to 50 for all positions meaning that it should tend to the center of the target\nconst DirectionalDictionary: { [key: number]: IPositionDirectionalHintData } = {\n  [DirectionalHint.topLeftEdge]: _createPositionData(RectangleEdge.top, RectangleEdge.left),\n  [DirectionalHint.topCenter]: _createPositionData(RectangleEdge.top),\n  [DirectionalHint.topRightEdge]: _createPositionData(RectangleEdge.top, RectangleEdge.right),\n  [DirectionalHint.topAutoEdge]: _createPositionData(RectangleEdge.top, undefined, true),\n  [DirectionalHint.bottomLeftEdge]: _createPositionData(RectangleEdge.bottom, RectangleEdge.left),\n  [DirectionalHint.bottomCenter]: _createPositionData(RectangleEdge.bottom),\n  [DirectionalHint.bottomRightEdge]: _createPositionData(RectangleEdge.bottom, RectangleEdge.right),\n  [DirectionalHint.bottomAutoEdge]: _createPositionData(RectangleEdge.bottom, undefined, true),\n  [DirectionalHint.leftTopEdge]: _createPositionData(RectangleEdge.left, RectangleEdge.top),\n  [DirectionalHint.leftCenter]: _createPositionData(RectangleEdge.left),\n  [DirectionalHint.leftBottomEdge]: _createPositionData(RectangleEdge.left, RectangleEdge.bottom),\n  [DirectionalHint.rightTopEdge]: _createPositionData(RectangleEdge.right, RectangleEdge.top),\n  [DirectionalHint.rightCenter]: _createPositionData(RectangleEdge.right),\n  [DirectionalHint.rightBottomEdge]: _createPositionData(RectangleEdge.right, RectangleEdge.bottom),\n};\n\n/**\n * Do not call methods from this directly, use either positionCallout or positionElement or make another function that\n * utilizes them.\n * START Private functions and interfaces\n */\n\nexport interface IElementPosition {\n  elementRectangle: Rectangle;\n  targetEdge: RectangleEdge;\n  alignmentEdge: RectangleEdge | undefined;\n}\n\nexport interface IElementPositionInfo extends IElementPosition {\n  targetRectangle: Rectangle;\n}\n\ntype PartialIRectangle = Partial<IRectangle>;\n\ninterface IPartialIRectangle extends PartialIRectangle {\n  [key: string]: number | undefined;\n}\n\nfunction _isRectangleWithinBounds(rect: Rectangle, boundingRect: Rectangle): boolean {\n  if (rect.top < boundingRect.top) {\n    return false;\n  }\n  if (rect.bottom > boundingRect.bottom) {\n    return false;\n  }\n  if (rect.left < boundingRect.left) {\n    return false;\n  }\n  if (rect.right > boundingRect.right) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Gets all of the edges of a rectangle that are outside of the given bounds.\n * If there are no out of bounds edges it returns an empty array.\n */\nfunction _getOutOfBoundsEdges(rect: Rectangle, boundingRect: Rectangle): RectangleEdge[] {\n  const outOfBounds: RectangleEdge[] = new Array<RectangleEdge>();\n\n  if (rect.top < boundingRect.top) {\n    outOfBounds.push(RectangleEdge.top);\n  }\n  if (rect.bottom > boundingRect.bottom) {\n    outOfBounds.push(RectangleEdge.bottom);\n  }\n  if (rect.left < boundingRect.left) {\n    outOfBounds.push(RectangleEdge.left);\n  }\n  if (rect.right > boundingRect.right) {\n    outOfBounds.push(RectangleEdge.right);\n  }\n\n  return outOfBounds;\n}\n\nfunction _getEdgeValue(rect: Rectangle, edge: RectangleEdge): number {\n  return rect[RectangleEdge[edge]];\n}\n\nfunction _setEdgeValue(rect: Rectangle, edge: RectangleEdge, value: number) {\n  rect[RectangleEdge[edge]] = value;\n  return rect;\n}\n\n/**\n * Returns the middle value of an edge. Only returns 1 value rather than xy coordinates as\n * the itself already contains the other coordinate.\n * For instance, a bottom edge's current value is it's y coordinate, so the number returned is the x.\n */\nfunction _getCenterValue(rect: Rectangle, edge: RectangleEdge): number {\n  const edges = _getFlankingEdges(edge);\n  return (_getEdgeValue(rect, edges.positiveEdge) + _getEdgeValue(rect, edges.negativeEdge)) / 2;\n}\n\n/**\n * Flips the value depending on the edge.\n * If the edge is a \"positive\" edge, Top or Left, then the value should stay as it is.\n * If the edge is a \"negative\" edge, Bottom or Right, then the value should be flipped.\n * This is to account for the fact that the coordinates are effectively reveserved in certain cases for the\n * \"negative\" edges.\n *\n * For example, when testing to see if a bottom edge 1 is within the bounds of another bottom edge 2:\n * If edge 1 is greater than edge 2 then it is out of bounds. This is reversed for top edge 1 and top edge 2.\n * If top edge 1 is less than edge 2 then it is out of bounds.\n */\nfunction _getRelativeEdgeValue(edge: RectangleEdge, value: number): number {\n  if (edge > 0) {\n    return value;\n  } else {\n    return value * -1;\n  }\n}\n\nfunction _getRelativeRectEdgeValue(edge: RectangleEdge, rect: Rectangle): number {\n  return _getRelativeEdgeValue(edge, _getEdgeValue(rect, edge));\n}\n\nfunction _getRelativeEdgeDifference(rect: Rectangle, hostRect: Rectangle, edge: RectangleEdge): number {\n  const edgeDifference = _getEdgeValue(rect, edge) - _getEdgeValue(hostRect, edge);\n  return _getRelativeEdgeValue(edge, edgeDifference);\n}\n\n/**\n * Moves the edge of a rectangle to the value given. It only moves the edge in a linear direction based on that edge.\n * For example, if it's a bottom edge it will only change y coordinates.\n */\nfunction _moveEdge(rect: Rectangle, edge: RectangleEdge, newValue: number): Rectangle {\n  const difference = _getEdgeValue(rect, edge) - newValue;\n  rect = _setEdgeValue(rect, edge, newValue);\n  rect = _setEdgeValue(rect, edge * -1, _getEdgeValue(rect, edge * -1) - difference);\n  return rect;\n}\n\n/**\n * Aligns the edge on the passed in rect to the target. If there is a gap then it will have that space between the two.\n */\nfunction _alignEdges(rect: Rectangle, target: Rectangle, edge: RectangleEdge, gap: number = 0): Rectangle {\n  return _moveEdge(rect, edge, _getEdgeValue(target, edge) + _getRelativeEdgeValue(edge, gap));\n}\n\n/**\n * Aligns the targetEdge on the passed in target to the rects corresponding opposite edge.\n * For instance if targetEdge is bottom, then the rects top will be moved to match it.\n */\nfunction _alignOppositeEdges(\n  rect: Rectangle,\n  target: Rectangle,\n  targetEdge: RectangleEdge,\n  gap: number = 0,\n): Rectangle {\n  const oppositeEdge = targetEdge * -1;\n  const adjustedGap = _getRelativeEdgeValue(oppositeEdge, gap);\n  return _moveEdge(rect, targetEdge * -1, _getEdgeValue(target, targetEdge) + adjustedGap);\n}\n\n/**\n * Tests to see if the given edge is within the bounds of the given rectangle.\n */\nfunction _isEdgeInBounds(rect: Rectangle, bounds: Rectangle, edge: RectangleEdge): boolean {\n  const adjustedRectValue = _getRelativeRectEdgeValue(edge, rect);\n  return adjustedRectValue > _getRelativeRectEdgeValue(edge, bounds);\n}\n\n/**\n * Attempts to move the rectangle through various sides of the target to find a place to fit.\n * If no fit is found, the original position should be returned.\n */\nfunction _flipToFit(\n  rect: Rectangle,\n  target: Rectangle,\n  bounding: Rectangle,\n  positionData: IPositionDirectionalHintData,\n  gap: number = 0,\n): IElementPosition {\n  const directions: RectangleEdge[] = [\n    RectangleEdge.left,\n    RectangleEdge.right,\n    RectangleEdge.bottom,\n    RectangleEdge.top,\n  ];\n  // In RTL page, RectangleEdge.right has a higher priority than RectangleEdge.left, so the order should be updated.\n  if (getRTL()) {\n    directions[0] *= -1;\n    directions[1] *= -1;\n  }\n  let currentEstimate = rect;\n  let currentEdge = positionData.targetEdge;\n  let currentAlignment = positionData.alignmentEdge;\n  // Keep switching sides until one is found with enough space.\n  // If all sides don't fit then return the unmodified element.\n  for (let i = 0; i < 4; i++) {\n    if (!_isEdgeInBounds(currentEstimate, bounding, currentEdge)) {\n      directions.splice(directions.indexOf(currentEdge), 1);\n      if (directions.length > 0) {\n        if (directions.indexOf(currentEdge * -1) > -1) {\n          currentEdge = currentEdge * -1;\n        } else {\n          currentAlignment = currentEdge;\n          currentEdge = directions.slice(-1)[0];\n        }\n        currentEstimate = _estimatePosition(\n          rect,\n          target,\n          { targetEdge: currentEdge, alignmentEdge: currentAlignment },\n          gap,\n        );\n      }\n    } else {\n      return {\n        elementRectangle: currentEstimate,\n        targetEdge: currentEdge,\n        alignmentEdge: currentAlignment,\n      };\n    }\n  }\n  return {\n    elementRectangle: rect,\n    targetEdge: positionData.targetEdge,\n    alignmentEdge: currentAlignment,\n  };\n}\n\n/**\n * Flips only the alignment edge of an element rectangle. This is used instead of nudging the alignment edges\n * into position, when alignTargetEdge is specified.\n */\nfunction _flipAlignmentEdge(\n  elementEstimate: IElementPosition,\n  target: Rectangle,\n  gap: number,\n  coverTarget?: boolean,\n): IElementPosition {\n  const { alignmentEdge, targetEdge, elementRectangle } = elementEstimate;\n  const oppositeEdge = alignmentEdge! * -1;\n  const newEstimate = _estimatePosition(\n    elementRectangle,\n    target,\n    { targetEdge: targetEdge, alignmentEdge: oppositeEdge },\n    gap,\n    coverTarget,\n  );\n\n  return {\n    elementRectangle: newEstimate,\n    targetEdge: targetEdge,\n    alignmentEdge: oppositeEdge,\n  };\n}\n\n/**\n * Adjusts a element rectangle to fit within the bounds given. If directionalHintFixed or covertarget is passed in\n * then the element will not flip sides on the target. They will, however, be nudged to fit within the bounds given.\n */\nfunction _adjustFitWithinBounds(\n  element: Rectangle,\n  target: Rectangle,\n  bounding: Rectangle,\n  positionData: IPositionDirectionalHintData,\n  gap: number = 0,\n  directionalHintFixed?: boolean,\n  coverTarget?: boolean,\n): IElementPosition {\n  const { alignmentEdge, alignTargetEdge } = positionData;\n  let elementEstimate: IElementPosition = {\n    elementRectangle: element,\n    targetEdge: positionData.targetEdge,\n    alignmentEdge: alignmentEdge,\n  };\n\n  if (!directionalHintFixed && !coverTarget) {\n    elementEstimate = _flipToFit(element, target, bounding, positionData, gap);\n  }\n  const outOfBounds = _getOutOfBoundsEdges(element, bounding);\n\n  if (alignTargetEdge) {\n    // The edge opposite to the alignment edge might be out of bounds.\n    // Flip alignment to see if we can get it within bounds.\n    if (elementEstimate.alignmentEdge && outOfBounds.indexOf(elementEstimate.alignmentEdge * -1) > -1) {\n      const flippedElementEstimate = _flipAlignmentEdge(elementEstimate, target, gap, coverTarget);\n      if (_isRectangleWithinBounds(flippedElementEstimate.elementRectangle, bounding)) {\n        return flippedElementEstimate;\n      } else {\n        // If the flipped elements edges are still out of bounds, try nudging it.\n        elementEstimate = _alignOutOfBoundsEdges(\n          _getOutOfBoundsEdges(flippedElementEstimate.elementRectangle, bounding),\n          elementEstimate,\n          bounding,\n        );\n      }\n    }\n  } else {\n    elementEstimate = _alignOutOfBoundsEdges(outOfBounds, elementEstimate, bounding);\n  }\n\n  return elementEstimate;\n}\n\n/**\n * Iterates through a list of out of bounds edges and tries to nudge and align them.\n * @param outOfBoundsEdges - Array of edges that are out of bounds\n * @param elementEstimate - The current element positioning estimate\n * @param bounding - The current bounds\n */\nfunction _alignOutOfBoundsEdges(\n  outOfBoundsEdges: RectangleEdge[],\n  elementEstimate: IElementPosition,\n  bounding: Rectangle,\n) {\n  for (const direction of outOfBoundsEdges) {\n    elementEstimate.elementRectangle = _alignEdges(elementEstimate.elementRectangle, bounding, direction);\n  }\n\n  return elementEstimate;\n}\n\n/**\n * Moves the middle point on an edge to the point given.\n * Only moves in one direction. For instance if a bottom edge is passed in, then\n * the bottom edge will be moved in the x axis to match the point.\n */\nfunction _centerEdgeToPoint(rect: Rectangle, edge: RectangleEdge, point: number): Rectangle {\n  const { positiveEdge } = _getFlankingEdges(edge);\n  const elementMiddle = _getCenterValue(rect, edge);\n  const distanceToMiddle = elementMiddle - _getEdgeValue(rect, positiveEdge);\n  return _moveEdge(rect, positiveEdge, point - distanceToMiddle);\n}\n\n/**\n * Moves the element rectangle to be appropriately positioned relative to a given target.\n * Does not flip or adjust the element.\n */\nfunction _estimatePosition(\n  elementToPosition: Rectangle,\n  target: Rectangle,\n  positionData: IPositionDirectionalHintData,\n  gap: number = 0,\n  coverTarget?: boolean,\n): Rectangle {\n  let estimatedElementPosition: Rectangle;\n  const { alignmentEdge, targetEdge } = positionData;\n  const elementEdge = coverTarget ? targetEdge : targetEdge * -1;\n  estimatedElementPosition = coverTarget\n    ? _alignEdges(elementToPosition, target, targetEdge, gap)\n    : _alignOppositeEdges(elementToPosition, target, targetEdge, gap);\n  // if no alignment edge is provided it's supposed to be centered.\n  if (!alignmentEdge) {\n    const targetMiddlePoint = _getCenterValue(target, targetEdge);\n    estimatedElementPosition = _centerEdgeToPoint(estimatedElementPosition, elementEdge, targetMiddlePoint);\n  } else {\n    estimatedElementPosition = _alignEdges(estimatedElementPosition, target, alignmentEdge);\n  }\n\n  return estimatedElementPosition;\n}\n\n/**\n * Returns the non-opposite edges of the target edge.\n * For instance if bottom is passed in then left and right will be returned.\n */\nfunction _getFlankingEdges(edge: RectangleEdge): { positiveEdge: RectangleEdge; negativeEdge: RectangleEdge } {\n  if (edge === RectangleEdge.top || edge === RectangleEdge.bottom) {\n    return {\n      positiveEdge: RectangleEdge.left,\n      negativeEdge: RectangleEdge.right,\n    };\n  } else {\n    return {\n      positiveEdge: RectangleEdge.top,\n      negativeEdge: RectangleEdge.bottom,\n    };\n  }\n}\n\n/**\n * Retrieve the final value for the return edge of elementRectangle. If the elementRectangle is closer to one side\n * of the bounds versus the other, the return edge is flipped to grow inward.\n */\nfunction _finalizeReturnEdge(\n  elementRectangle: Rectangle,\n  returnEdge: RectangleEdge,\n  bounds?: Rectangle,\n): RectangleEdge {\n  if (\n    bounds &&\n    Math.abs(_getRelativeEdgeDifference(elementRectangle, bounds, returnEdge)) >\n      Math.abs(_getRelativeEdgeDifference(elementRectangle, bounds, returnEdge * -1))\n  ) {\n    return returnEdge * -1;\n  }\n\n  return returnEdge;\n}\n\n/**\n * Finalizes the element positon based on the hostElement. Only returns the\n * rectangle values to position such that they are anchored to the target.\n * This helps prevent resizing from looking very strange.\n * For instance, if the target edge is top and aligned with the left side then\n * the bottom and left values are returned so as the callou shrinks it shrinks towards that corner.\n */\nfunction _finalizeElementPosition(\n  elementRectangle: Rectangle,\n  hostElement: HTMLElement,\n  targetEdge: RectangleEdge,\n  bounds?: Rectangle,\n  alignmentEdge?: RectangleEdge,\n  coverTarget?: boolean,\n  doNotFinalizeReturnEdge?: boolean,\n): IPartialIRectangle {\n  const returnValue: IPartialIRectangle = {};\n\n  const hostRect: Rectangle = _getRectangleFromElement(hostElement);\n  const elementEdge = coverTarget ? targetEdge : targetEdge * -1;\n  const elementEdgeString = RectangleEdge[elementEdge];\n  let returnEdge = alignmentEdge ? alignmentEdge : _getFlankingEdges(targetEdge).positiveEdge;\n  if (!doNotFinalizeReturnEdge) {\n    returnEdge = _finalizeReturnEdge(elementRectangle, returnEdge, bounds);\n  }\n\n  returnValue[elementEdgeString] = _getRelativeEdgeDifference(elementRectangle, hostRect, elementEdge);\n  returnValue[RectangleEdge[returnEdge]] = _getRelativeEdgeDifference(elementRectangle, hostRect, returnEdge);\n\n  return returnValue;\n}\n\n// Since the beak is rotated 45 degrees the actual height/width is the length of the diagonal.\n// We still want to position the beak based on it's midpoint which does not change. It will\n// be at (beakwidth / 2, beakwidth / 2)\nfunction _calculateActualBeakWidthInPixels(beakWidth: number): number {\n  return Math.sqrt(beakWidth * beakWidth * 2);\n}\n\n/**\n * Returns the appropriate IPositionData based on the props altered for RTL.\n * If directionalHintForRTL is passed in that is used if the page is RTL.\n * If directionalHint is specified, no directionalHintForRTL is available, and the page is RTL, the hint will be\n * flipped (e.g. bottomLeftEdge would become bottomRightEdge).\n *\n * If there is no directionalHint passed in, bottomAutoEdge is chosen automatically.\n */\nfunction _getPositionData(\n  directionalHint: DirectionalHint = DirectionalHint.bottomAutoEdge,\n  directionalHintForRTL?: DirectionalHint,\n  previousPositions?: IPositionDirectionalHintData,\n): IPositionDirectionalHintData {\n  if (previousPositions) {\n    return {\n      alignmentEdge: previousPositions.alignmentEdge,\n      isAuto: previousPositions.isAuto,\n      targetEdge: previousPositions.targetEdge,\n    };\n  }\n  const positionInformation: IPositionDirectionalHintData = { ...DirectionalDictionary[directionalHint] };\n  if (getRTL()) {\n    // If alignment edge exists and that alignment edge is -2 or 2, right or left, then flip it.\n    if (positionInformation.alignmentEdge && positionInformation.alignmentEdge % 2 === 0) {\n      positionInformation.alignmentEdge = positionInformation.alignmentEdge * -1;\n    }\n\n    return directionalHintForRTL !== undefined ? DirectionalDictionary[directionalHintForRTL] : positionInformation;\n  }\n  return positionInformation;\n}\n\n/**\n * Get's the alignment data for the given information. This only really matters if the positioning is Auto.\n * If it is auto then the alignmentEdge should be chosen based on the target edge's position relative to\n * the center of the page.\n */\nfunction _getAlignmentData(\n  positionData: IPositionDirectionalHintData,\n  target: Rectangle,\n  boundingRect: Rectangle,\n  coverTarget?: boolean,\n  alignTargetEdge?: boolean,\n): IPositionDirectionalHintData {\n  if (positionData.isAuto) {\n    positionData.alignmentEdge = getClosestEdge(positionData.targetEdge, target, boundingRect);\n  }\n\n  positionData.alignTargetEdge = alignTargetEdge;\n  return positionData;\n}\n\nfunction getClosestEdge(targetEdge: RectangleEdge, target: Rectangle, boundingRect: Rectangle): RectangleEdge {\n  const targetCenter: number = _getCenterValue(target, targetEdge);\n  const boundingCenter: number = _getCenterValue(boundingRect, targetEdge);\n  const { positiveEdge, negativeEdge } = _getFlankingEdges(targetEdge);\n  if (targetCenter <= boundingCenter) {\n    return positiveEdge;\n  } else {\n    return negativeEdge;\n  }\n}\n\nfunction _positionElementWithinBounds(\n  elementToPosition: Rectangle,\n  target: Rectangle,\n  bounding: Rectangle,\n  positionData: IPositionDirectionalHintData,\n  gap: number,\n  directionalHintFixed?: boolean,\n  coverTarget?: boolean,\n): IElementPosition {\n  const estimatedElementPosition: Rectangle = _estimatePosition(\n    elementToPosition,\n    target,\n    positionData,\n    gap,\n    coverTarget,\n  );\n  if (_isRectangleWithinBounds(estimatedElementPosition, bounding)) {\n    return {\n      elementRectangle: estimatedElementPosition,\n      targetEdge: positionData.targetEdge,\n      alignmentEdge: positionData.alignmentEdge,\n    };\n  } else {\n    return _adjustFitWithinBounds(\n      elementToPosition,\n      target,\n      bounding,\n      positionData,\n      gap,\n      directionalHintFixed,\n      coverTarget,\n    );\n  }\n}\n\nfunction _finalizeBeakPosition(\n  elementPosition: IElementPosition,\n  positionedBeak: Rectangle,\n  bounds?: Rectangle,\n): ICalloutBeakPositionedInfo {\n  const targetEdge = elementPosition.targetEdge * -1;\n  // The \"host\" element that we will use to help position the beak.\n  const actualElement = new Rectangle(\n    0,\n    elementPosition.elementRectangle.width,\n    0,\n    elementPosition.elementRectangle.height,\n  );\n  const returnValue: IPartialIRectangle = {};\n  const returnEdge = _finalizeReturnEdge(\n    elementPosition.elementRectangle,\n    elementPosition.alignmentEdge ? elementPosition.alignmentEdge : _getFlankingEdges(targetEdge).positiveEdge,\n    bounds,\n  );\n\n  returnValue[RectangleEdge[targetEdge]] = _getEdgeValue(positionedBeak, targetEdge);\n  returnValue[RectangleEdge[returnEdge]] = _getRelativeEdgeDifference(positionedBeak, actualElement, returnEdge);\n\n  return {\n    elementPosition: { ...returnValue },\n    closestEdge: getClosestEdge(elementPosition.targetEdge, positionedBeak, actualElement),\n    targetEdge: targetEdge,\n  };\n}\n\nfunction _positionBeak(beakWidth: number, elementPosition: IElementPositionInfo): Rectangle {\n  const target = elementPosition.targetRectangle;\n  /**\n   * Note about beak positioning: The actual beak width only matters for getting the gap between the callout and\n   * target, it does not impact the beak placement within the callout. For example example, if the beakWidth is 8,\n   * then the actual beakWidth is sqrroot(8^2 + 8^2) = 11.31x11.31. So the callout will need to be an extra 3 pixels\n   * away from its target. While the beak is being positioned in the callout it still acts as though it were 8x8.\n   */\n  const { positiveEdge, negativeEdge } = _getFlankingEdges(elementPosition.targetEdge);\n  const beakTargetPoint = _getCenterValue(target, elementPosition.targetEdge);\n  const elementBounds = new Rectangle(\n    beakWidth / 2,\n    elementPosition.elementRectangle.width - beakWidth / 2,\n    beakWidth / 2,\n    elementPosition.elementRectangle.height - beakWidth / 2,\n  );\n\n  let beakPosition: Rectangle = new Rectangle(0, beakWidth, 0, beakWidth);\n\n  beakPosition = _moveEdge(beakPosition, elementPosition.targetEdge * -1, -beakWidth / 2);\n\n  beakPosition = _centerEdgeToPoint(\n    beakPosition,\n    elementPosition.targetEdge * -1,\n    beakTargetPoint - _getRelativeRectEdgeValue(positiveEdge, elementPosition.elementRectangle),\n  );\n\n  if (!_isEdgeInBounds(beakPosition, elementBounds, positiveEdge)) {\n    beakPosition = _alignEdges(beakPosition, elementBounds, positiveEdge);\n  } else if (!_isEdgeInBounds(beakPosition, elementBounds, negativeEdge)) {\n    beakPosition = _alignEdges(beakPosition, elementBounds, negativeEdge);\n  }\n\n  return beakPosition;\n}\n\nfunction _getRectangleFromElement(element: Element): Rectangle {\n  const clientRect: ClientRect = element.getBoundingClientRect();\n\n  return new Rectangle(clientRect.left, clientRect.right, clientRect.top, clientRect.bottom);\n}\n\nfunction _getRectangleFromIRect(rect: IRectangle): Rectangle {\n  return new Rectangle(rect.left, rect.right, rect.top, rect.bottom);\n}\n\nfunction _getTargetRect(bounds: Rectangle, target: Element | MouseEvent | IPoint | undefined): Rectangle {\n  let targetRectangle: Rectangle;\n  if (target) {\n    if (!!(target as MouseEvent).preventDefault) {\n      const ev = target as MouseEvent;\n      targetRectangle = new Rectangle(ev.clientX, ev.clientX, ev.clientY, ev.clientY);\n    } else if (!!(target as Element).getBoundingClientRect) {\n      targetRectangle = _getRectangleFromElement(target as Element);\n      // HTMLImgElements can have x and y values. The check for it being a point must go last.\n    } else {\n      const point: IPoint = target as IPoint;\n      targetRectangle = new Rectangle(point.x, point.x, point.y, point.y);\n    }\n\n    if (!_isRectangleWithinBounds(targetRectangle, bounds)) {\n      const outOfBounds: RectangleEdge[] = _getOutOfBoundsEdges(targetRectangle, bounds);\n\n      for (const direction of outOfBounds) {\n        (targetRectangle as any)[RectangleEdge[direction]] = (bounds as any)[RectangleEdge[direction]];\n      }\n    }\n  } else {\n    targetRectangle = new Rectangle(0, 0, 0, 0);\n  }\n\n  return targetRectangle;\n}\n\n/**\n * If max height is less than zero it returns the bounds height instead.\n */\nfunction _getMaxHeightFromTargetRectangle(\n  targetRectangle: Rectangle,\n  targetEdge: DirectionalHint,\n  gapSpace: number,\n  bounds: Rectangle,\n  coverTarget?: boolean,\n) {\n  let maxHeight = 0;\n  const directionalHint = DirectionalDictionary[targetEdge];\n\n  // If cover target is set, then the max height should be calculated using the opposite of the target edge since\n  // that's the direction that the callout will expand in.\n  // For instance, if the directionalhint is bottomLeftEdge then the callout will position so it's bottom edge\n  // is aligned with the bottom of the target and expand up towards the top of the screen and the calculated max height\n  // is (bottom of target) - (top of screen) - gapSpace.\n  const target = coverTarget ? directionalHint.targetEdge * -1 : directionalHint.targetEdge;\n\n  if (target === RectangleEdge.top) {\n    maxHeight = _getEdgeValue(targetRectangle, directionalHint.targetEdge) - bounds.top - gapSpace;\n  } else if (target === RectangleEdge.bottom) {\n    maxHeight = bounds.bottom - _getEdgeValue(targetRectangle, directionalHint.targetEdge) - gapSpace;\n  } else {\n    maxHeight = bounds.bottom - targetRectangle.top - gapSpace;\n  }\n\n  return maxHeight > 0 ? maxHeight : bounds.height;\n}\n\nfunction _positionElementRelative(\n  props: IPositionProps,\n  elementToPosition: HTMLElement,\n  boundingRect: Rectangle,\n  previousPositions?: IPositionedData,\n): IElementPositionInfo {\n  const gap: number = props.gapSpace ? props.gapSpace : 0;\n  const targetRect: Rectangle = _getTargetRect(boundingRect, props.target);\n  const positionData: IPositionDirectionalHintData = _getAlignmentData(\n    _getPositionData(props.directionalHint, props.directionalHintForRTL, previousPositions)!,\n    targetRect,\n    boundingRect,\n    props.coverTarget,\n    props.alignTargetEdge,\n  );\n  const positionedElement: IElementPosition = _positionElementWithinBounds(\n    _getRectangleFromElement(elementToPosition),\n    targetRect,\n    boundingRect,\n    positionData,\n    gap,\n    props.directionalHintFixed,\n    props.coverTarget,\n  );\n  return { ...positionedElement, targetRectangle: targetRect };\n}\n\nfunction _finalizePositionData(\n  positionedElement: IElementPosition,\n  hostElement: HTMLElement,\n  bounds?: Rectangle,\n  coverTarget?: boolean,\n  doNotFinalizeReturnEdge?: boolean,\n): IPositionedData {\n  const finalizedElement: IPartialIRectangle = _finalizeElementPosition(\n    positionedElement.elementRectangle,\n    hostElement,\n    positionedElement.targetEdge,\n    bounds,\n    positionedElement.alignmentEdge,\n    coverTarget,\n    doNotFinalizeReturnEdge,\n  );\n  return {\n    elementPosition: finalizedElement,\n    targetEdge: positionedElement.targetEdge,\n    alignmentEdge: positionedElement.alignmentEdge,\n  };\n}\n\nfunction _positionElement(\n  props: IPositionProps,\n  hostElement: HTMLElement,\n  elementToPosition: HTMLElement,\n  previousPositions?: IPositionedData,\n): IPositionedData {\n  const boundingRect: Rectangle = props.bounds\n    ? _getRectangleFromIRect(props.bounds)\n    : new Rectangle(0, window.innerWidth - getScrollbarWidth(), 0, window.innerHeight);\n  const positionedElement: IElementPosition = _positionElementRelative(\n    props,\n    elementToPosition,\n    boundingRect,\n    previousPositions,\n  );\n  return _finalizePositionData(positionedElement, hostElement, boundingRect, props.coverTarget);\n}\n\nfunction _positionCallout(\n  props: ICalloutPositionProps,\n  hostElement: HTMLElement,\n  callout: HTMLElement,\n  previousPositions?: ICalloutPositionedInfo,\n  doNotFinalizeReturnEdge?: boolean,\n): ICalloutPositionedInfo {\n  const beakWidth: number = props.isBeakVisible ? props.beakWidth || 0 : 0;\n  const gap: number = _calculateActualBeakWidthInPixels(beakWidth) / 2 + (props.gapSpace ? props.gapSpace : 0);\n  const positionProps: IPositionProps = props;\n  positionProps.gapSpace = gap;\n  const boundingRect: Rectangle = props.bounds\n    ? _getRectangleFromIRect(props.bounds)\n    : new Rectangle(0, window.innerWidth - getScrollbarWidth(), 0, window.innerHeight);\n  const positionedElement: IElementPositionInfo = _positionElementRelative(\n    positionProps,\n    callout,\n    boundingRect,\n    previousPositions,\n  );\n  const beakPositioned: Rectangle = _positionBeak(beakWidth, positionedElement);\n  const finalizedBeakPosition: ICalloutBeakPositionedInfo = _finalizeBeakPosition(\n    positionedElement,\n    beakPositioned,\n    boundingRect,\n  );\n  return {\n    ..._finalizePositionData(positionedElement, hostElement, boundingRect, props.coverTarget, doNotFinalizeReturnEdge),\n    beakPosition: finalizedBeakPosition,\n  };\n}\n\nfunction _positionCard(\n  props: ICalloutPositionProps,\n  hostElement: HTMLElement,\n  callout: HTMLElement,\n  previousPositions?: ICalloutPositionedInfo,\n): ICalloutPositionedInfo {\n  return _positionCallout(props, hostElement, callout, previousPositions, true);\n}\n// END PRIVATE FUNCTIONS\n\n/* tslint:disable:variable-name */\nexport const __positioningTestPackage = {\n  _finalizePositionData,\n  _finalizeBeakPosition,\n  _calculateActualBeakWidthInPixels,\n  _positionElementWithinBounds,\n  _positionBeak,\n  _getPositionData,\n  _getMaxHeightFromTargetRectangle,\n};\n/* tslint:enable:variable-name */\n\n/**\n * Used to position an element relative to the given positioning props.\n * If positioning has been completed before, previousPositions can be passed to ensure that the positioning element\n * repositions based on its previous targets rather than starting with directionalhint.\n */\nexport function positionElement(\n  props: IPositionProps,\n  hostElement: HTMLElement,\n  elementToPosition: HTMLElement,\n  previousPositions?: IPositionedData,\n): IPositionedData {\n  return _positionElement(props, hostElement, elementToPosition, previousPositions);\n}\n\nexport function positionCallout(\n  props: IPositionProps,\n  hostElement: HTMLElement,\n  elementToPosition: HTMLElement,\n  previousPositions?: ICalloutPositionedInfo,\n): ICalloutPositionedInfo {\n  return _positionCallout(props, hostElement, elementToPosition, previousPositions);\n}\n\nexport function positionCard(\n  props: IPositionProps,\n  hostElement: HTMLElement,\n  elementToPosition: HTMLElement,\n  previousPositions?: ICalloutPositionedInfo,\n): ICalloutPositionedInfo {\n  return _positionCard(props, hostElement, elementToPosition, previousPositions);\n}\n\n/**\n * Get's the maximum height that a rectangle can have in order to fit below or above a target.\n * If the directional hint specifies a left or right edge (i.e. leftCenter) it will limit the height to the topBorder\n * of the target given.\n * If no bounds are provided then the window is treated as the bounds.\n */\nexport function getMaxHeight(\n  target: Element | MouseEvent | IPoint,\n  targetEdge: DirectionalHint,\n  gapSpace: number = 0,\n  bounds?: IRectangle,\n  coverTarget?: boolean,\n): number {\n  const mouseTarget: MouseEvent = target as MouseEvent;\n  const elementTarget: Element = target as Element;\n  const pointTarget: IPoint = target as IPoint;\n  let targetRect: Rectangle;\n  const boundingRectangle = bounds\n    ? _getRectangleFromIRect(bounds)\n    : new Rectangle(0, window.innerWidth - getScrollbarWidth(), 0, window.innerHeight);\n\n  if (!!mouseTarget.stopPropagation) {\n    targetRect = new Rectangle(mouseTarget.clientX, mouseTarget.clientX, mouseTarget.clientY, mouseTarget.clientY);\n  } else if (pointTarget.x !== undefined && pointTarget.y !== undefined) {\n    targetRect = new Rectangle(pointTarget.x, pointTarget.x, pointTarget.y, pointTarget.y);\n  } else {\n    targetRect = _getRectangleFromElement(elementTarget);\n  }\n\n  return _getMaxHeightFromTargetRectangle(targetRect, targetEdge, gapSpace, boundingRectangle, coverTarget);\n}\n\n/**\n * Returns the opposite edge of the given RectangleEdge.\n */\nexport function getOppositeEdge(edge: RectangleEdge): RectangleEdge {\n  return edge * -1;\n}\n\n/**\n * Window with typings for experimental features regarding Dual Screen devices.\n */\ninterface IWindowWithSegments extends Window {\n  getWindowSegments?: () => DOMRect[];\n}\n\nfunction _getBoundsFromTargetWindow(\n  target: Element | MouseEvent | IPoint | null,\n  targetWindow: IWindowWithSegments,\n): IRectangle {\n  let segments = undefined;\n  if (targetWindow.getWindowSegments) {\n    segments = targetWindow.getWindowSegments();\n  }\n\n  // Identify if we're dealing with single screen scenarios.\n  if (segments === undefined || segments.length <= 1) {\n    return {\n      top: 0,\n      left: 0,\n      right: targetWindow.innerWidth,\n      bottom: targetWindow.innerHeight,\n      width: targetWindow.innerWidth,\n      height: targetWindow.innerHeight,\n    };\n  }\n\n  // Logic for determining dual screen scenarios.\n  let x = 0;\n  let y = 0;\n\n  // If the target is an Element get coordinates for its center.\n  if (target !== null && !!(target as Element).getBoundingClientRect) {\n    const clientRect = (target as Element).getBoundingClientRect();\n    x = (clientRect.left + clientRect.right) / 2;\n    y = (clientRect.top + clientRect.bottom) / 2;\n  }\n  // If the target is a MouseEvent or an IPoint get x and y coordinates directly.\n  else if (target !== null) {\n    x = (target as MouseEvent | IPoint).x;\n    y = (target as MouseEvent | IPoint).y;\n  }\n\n  let bounds = { top: 0, left: 0, right: 0, bottom: 0, width: 0, height: 0 };\n\n  // Define which window segment are the coordinates in and calculate bounds based on that.\n  for (const segment of segments) {\n    if (x && segment.left <= x && segment.right >= x && y && segment.top <= y && segment.bottom >= y) {\n      bounds = {\n        top: segment.top,\n        left: segment.left,\n        right: segment.right,\n        bottom: segment.bottom,\n        width: segment.width,\n        height: segment.height,\n      };\n    }\n  }\n\n  return bounds;\n}\n\nexport function getBoundsFromTargetWindow(\n  target: Element | MouseEvent | IPoint | null,\n  targetWindow: IWindowWithSegments,\n): IRectangle {\n  return _getBoundsFromTargetWindow(target, targetWindow);\n}\n","import * as React from 'react';\nimport { ICalloutProps, ICalloutContentStyleProps, ICalloutContentStyles, Target } from './Callout.types';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport {\n  Async,\n  IPoint,\n  IRectangle,\n  assign,\n  css,\n  divProperties,\n  elementContains,\n  focusFirstChild,\n  getDocument,\n  getNativeProps,\n  getWindow,\n  on,\n  shallowCompare,\n} from '../../Utilities';\nimport {\n  positionCallout,\n  ICalloutPositionedInfo,\n  IPositionProps,\n  getMaxHeight,\n  IPosition,\n  RectangleEdge,\n  positionCard,\n  getBoundsFromTargetWindow,\n} from '../../utilities/positioning';\nimport { Popup } from '../../Popup';\nimport { classNamesFunction } from '../../Utilities';\nimport { AnimationClassNames } from '../../Styling';\n\nconst ANIMATIONS: { [key: number]: string | undefined } = {\n  [RectangleEdge.top]: AnimationClassNames.slideUpIn10,\n  [RectangleEdge.bottom]: AnimationClassNames.slideDownIn10,\n  [RectangleEdge.left]: AnimationClassNames.slideLeftIn10,\n  [RectangleEdge.right]: AnimationClassNames.slideRightIn10,\n};\n\nconst getClassNames = classNamesFunction<ICalloutContentStyleProps, ICalloutContentStyles>({\n  disableCaching: true, // disabling caching because stylesProp.position mutates often\n});\n\nconst BEAK_ORIGIN_POSITION = { top: 0, left: 0 };\n// Microsoft Edge will overwrite inline styles if there is an animation pertaining to that style.\n// To help ensure that edge will respect the offscreen style opacity\n// filter needs to be added as an additional way to set opacity.\nconst OFF_SCREEN_STYLE = { opacity: 0, filter: 'opacity(0)' };\n// role and role description go hand-in-hand. Both would be included by spreading getNativeProps for a basic element\n// This constant array can be used to filter these out of native props spread on callout root and apply them together on\n// calloutMain (the Popup component within the callout)\nconst ARIA_ROLE_ATTRIBUTES = ['role', 'aria-roledescription'];\n\nexport interface ICalloutState {\n  positions?: ICalloutPositionedInfo;\n  slideDirectionalClassName?: string;\n  calloutElementRect?: ClientRect;\n  heightOffset?: number;\n}\n\nexport class CalloutContentBase extends React.Component<ICalloutProps, ICalloutState> {\n  public static defaultProps = {\n    preventDismissOnLostFocus: false,\n    preventDismissOnScroll: false,\n    preventDismissOnResize: false,\n    isBeakVisible: true,\n    beakWidth: 16,\n    gapSpace: 0,\n    minPagePadding: 8,\n    directionalHint: DirectionalHint.bottomAutoEdge,\n  };\n\n  private _classNames: { [key in keyof ICalloutContentStyles]: string };\n  private _didSetInitialFocus: boolean;\n  private _hostElement = React.createRef<HTMLDivElement>();\n  private _calloutElement = React.createRef<HTMLDivElement>();\n  private _targetWindow: Window;\n  private _bounds: IRectangle | undefined;\n  private _positionAttempts: number;\n  private _target: Element | MouseEvent | IPoint | null;\n  private _setHeightOffsetTimer: number;\n  private _hasListeners = false;\n  private _maxHeight: number | undefined;\n  private _blockResetHeight: boolean;\n  private _isMouseDownOnPopup: boolean;\n\n  private _async: Async;\n  private _disposables: (() => void)[] = [];\n\n  constructor(props: ICalloutProps) {\n    super(props);\n\n    this._async = new Async(this);\n    this._didSetInitialFocus = false;\n    this.state = {\n      positions: undefined,\n      slideDirectionalClassName: undefined,\n      // @TODO it looks like this is not even being used anymore.\n      calloutElementRect: undefined,\n      heightOffset: 0,\n    };\n    this._positionAttempts = 0;\n  }\n\n  public componentDidUpdate() {\n    if (!this.props.hidden) {\n      this._setInitialFocus();\n      if (!this._hasListeners) {\n        this._addListeners();\n      }\n      this._updateAsyncPosition();\n    } else {\n      if (this._hasListeners) {\n        this._removeListeners();\n      }\n    }\n  }\n\n  public shouldComponentUpdate(newProps: ICalloutProps, newState: ICalloutState): boolean {\n    if (!newProps.shouldUpdateWhenHidden && this.props.hidden && newProps.hidden) {\n      // Do not update when hidden.\n      return false;\n    }\n\n    return !shallowCompare(this.props, newProps) || !shallowCompare(this.state, newState);\n  }\n\n  // tslint:disable-next-line function-name\n  public UNSAFE_componentWillMount() {\n    this._setTargetWindowAndElement(this._getTarget());\n  }\n\n  public componentWillUnmount() {\n    this._async.dispose();\n    this._disposables.forEach((dispose: () => void) => dispose());\n  }\n\n  // tslint:disable-next-line function-name\n  public UNSAFE_componentWillUpdate(newProps: ICalloutProps): void {\n    // If the target element changed, find the new one. If we are tracking target with class name, always find element\n    // because we do not know if fabric has rendered a new element and disposed the old element.\n    const newTarget = this._getTarget(newProps);\n    const oldTarget = this._getTarget();\n    if (\n      (newTarget !== oldTarget || typeof newTarget === 'string' || newTarget instanceof String) &&\n      !this._blockResetHeight\n    ) {\n      this._maxHeight = undefined;\n      this._setTargetWindowAndElement(newTarget!);\n    }\n    if (newProps.gapSpace !== this.props.gapSpace || this.props.beakWidth !== newProps.beakWidth) {\n      this._maxHeight = undefined;\n    }\n\n    if (newProps.finalHeight !== this.props.finalHeight) {\n      this._setHeightOffsetEveryFrame();\n    }\n\n    // Ensure positioning is recalculated when we are about to show a persisted menu.\n    if (this._didPositionPropsChange(newProps, this.props)) {\n      this._maxHeight = undefined;\n      // Target might have been updated while hidden.\n      this._setTargetWindowAndElement(newTarget);\n      this.setState({\n        positions: undefined,\n      });\n      this._didSetInitialFocus = false;\n      this._bounds = undefined;\n    }\n\n    this._blockResetHeight = false;\n  }\n\n  public componentDidMount(): void {\n    if (!this.props.hidden) {\n      this._onComponentDidMount();\n    }\n  }\n\n  public render(): JSX.Element | null {\n    // If there is no target window then we are likely in server side rendering and we should not render anything.\n    if (!this._targetWindow) {\n      return null;\n    }\n    let { target } = this.props;\n    const {\n      styles,\n      style,\n      ariaLabel,\n      ariaDescribedBy,\n      ariaLabelledBy,\n      className,\n      isBeakVisible,\n      children,\n      beakWidth,\n      calloutWidth,\n      calloutMaxWidth,\n      finalHeight,\n      hideOverflow = !!finalHeight,\n      backgroundColor,\n      calloutMaxHeight,\n      onScroll,\n      shouldRestoreFocus = true,\n    } = this.props;\n    target = this._getTarget();\n    const { positions } = this.state;\n\n    const getContentMaxHeight: number | undefined = this._getMaxHeight()\n      ? this._getMaxHeight()! + this.state.heightOffset!\n      : undefined;\n    const contentMaxHeight: number | undefined =\n      calloutMaxHeight! && getContentMaxHeight && calloutMaxHeight! < getContentMaxHeight\n        ? calloutMaxHeight!\n        : getContentMaxHeight!;\n    const overflowYHidden = hideOverflow;\n\n    const beakVisible = isBeakVisible && !!target;\n    this._classNames = getClassNames(styles!, {\n      theme: this.props.theme!,\n      className,\n      overflowYHidden: overflowYHidden,\n      calloutWidth,\n      positions,\n      beakWidth,\n      backgroundColor,\n      calloutMaxWidth,\n    });\n\n    const overflowStyle: React.CSSProperties = {\n      ...style,\n      maxHeight: contentMaxHeight,\n      ...(overflowYHidden && { overflowY: 'hidden' }),\n    };\n\n    const visibilityStyle: React.CSSProperties | undefined = this.props.hidden ? { visibility: 'hidden' } : undefined;\n    // React.CSSProperties does not understand IRawStyle, so the inline animations will need to be cast as any for now.\n    const content = (\n      <div ref={this._hostElement} className={this._classNames.container} style={visibilityStyle}>\n        <div\n          {...getNativeProps(this.props, divProperties, ARIA_ROLE_ATTRIBUTES)}\n          className={css(this._classNames.root, positions && positions.targetEdge && ANIMATIONS[positions.targetEdge!])}\n          style={positions ? positions.elementPosition : OFF_SCREEN_STYLE}\n          // Safari and Firefox on Mac OS requires this to back-stop click events so focus remains in the Callout.\n          // See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#Clicking_and_focus\n          tabIndex={-1}\n          ref={this._calloutElement}\n        >\n          {beakVisible && <div className={this._classNames.beak} style={this._getBeakPosition()} />}\n          {beakVisible && <div className={this._classNames.beakCurtain} />}\n          <Popup\n            {...getNativeProps(this.props, ARIA_ROLE_ATTRIBUTES)}\n            ariaLabel={ariaLabel}\n            ariaDescribedBy={ariaDescribedBy}\n            ariaLabelledBy={ariaLabelledBy}\n            className={this._classNames.calloutMain}\n            onDismiss={this.dismiss}\n            onScroll={onScroll}\n            shouldRestoreFocus={shouldRestoreFocus}\n            style={overflowStyle}\n            onMouseDown={this._mouseDownOnPopup}\n            onMouseUp={this._mouseUpOnPopup}\n          >\n            {children}\n          </Popup>\n        </div>\n      </div>\n    );\n\n    return content;\n  }\n\n  public dismiss = (ev?: Event | React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>): void => {\n    const { onDismiss } = this.props;\n\n    if (onDismiss) {\n      onDismiss(ev);\n    }\n  };\n\n  protected _dismissOnScroll = (ev: Event) => {\n    const { preventDismissOnScroll } = this.props;\n    if (this.state.positions && !preventDismissOnScroll) {\n      this._dismissOnClickOrScroll(ev);\n    }\n  };\n\n  protected _dismissOnResize = (ev: Event) => {\n    const { preventDismissOnResize } = this.props;\n    if (!preventDismissOnResize) {\n      this.dismiss(ev);\n    }\n  };\n\n  protected _dismissOnLostFocus = (ev: Event) => {\n    const { preventDismissOnLostFocus } = this.props;\n    if (!preventDismissOnLostFocus) {\n      this._dismissOnClickOrScroll(ev);\n    }\n  };\n\n  protected _setInitialFocus = (): void => {\n    if (\n      this.props.setInitialFocus &&\n      !this._didSetInitialFocus &&\n      this.state.positions &&\n      this._calloutElement.current\n    ) {\n      this._didSetInitialFocus = true;\n      this._async.requestAnimationFrame(\n        () => focusFirstChild(this._calloutElement.current!),\n        this._calloutElement.current,\n      );\n    }\n  };\n\n  protected _onComponentDidMount = (): void => {\n    this._addListeners();\n\n    if (this.props.onLayerMounted) {\n      this.props.onLayerMounted();\n    }\n\n    this._updateAsyncPosition();\n    this._setHeightOffsetEveryFrame();\n  };\n\n  private _dismissOnClickOrScroll(ev: Event) {\n    const target = ev.target as HTMLElement;\n    const isEventTargetOutsideCallout =\n      this._hostElement.current && !elementContains(this._hostElement.current, target);\n\n    // If mouse is pressed down on callout but moved outside then released, don't dismiss the callout.\n    if (isEventTargetOutsideCallout && this._isMouseDownOnPopup) {\n      this._isMouseDownOnPopup = false;\n      return;\n    }\n\n    if (\n      (!this._target && isEventTargetOutsideCallout) ||\n      (ev.target !== this._targetWindow &&\n        isEventTargetOutsideCallout &&\n        ((this._target as MouseEvent).stopPropagation ||\n          !this._target ||\n          (target !== this._target && !elementContains(this._target as HTMLElement, target))))\n    ) {\n      this.dismiss(ev);\n    }\n  }\n\n  private _addListeners() {\n    // This is added so the callout will dismiss when the window is scrolled\n    // but not when something inside the callout is scrolled. The delay seems\n    // to be required to avoid React firing an async focus event in IE from\n    // the target changing focus quickly prior to rendering the callout.\n    this._async.setTimeout(() => {\n      this._disposables.push(\n        on(this._targetWindow, 'scroll', this._dismissOnScroll, true),\n        on(this._targetWindow, 'resize', this._dismissOnResize, true),\n        on(this._targetWindow.document.documentElement, 'focus', this._dismissOnLostFocus, true),\n        on(this._targetWindow.document.documentElement, 'click', this._dismissOnLostFocus, true),\n      );\n      this._hasListeners = true;\n    }, 0);\n  }\n\n  private _removeListeners() {\n    this._disposables.forEach((dispose: () => void) => dispose());\n    this._disposables = [];\n    this._hasListeners = false;\n  }\n\n  private _updateAsyncPosition(): void {\n    this._async.requestAnimationFrame(() => this._updatePosition(), this._calloutElement.current);\n  }\n\n  private _getBeakPosition(): React.CSSProperties {\n    const { positions } = this.state;\n    const beakPostionStyle: React.CSSProperties = {\n      ...(positions && positions.beakPosition ? positions.beakPosition.elementPosition : null),\n    };\n\n    if (!beakPostionStyle.top && !beakPostionStyle.bottom && !beakPostionStyle.left && !beakPostionStyle.right) {\n      beakPostionStyle.left = BEAK_ORIGIN_POSITION.left;\n      beakPostionStyle.top = BEAK_ORIGIN_POSITION.top;\n    }\n\n    return beakPostionStyle;\n  }\n\n  private _updatePosition(): void {\n    // Try to update the target, page might have changed\n    this._setTargetWindowAndElement(this._getTarget());\n\n    const { positions } = this.state;\n    const hostElement: HTMLElement | null = this._hostElement.current;\n    const calloutElement: HTMLElement | null = this._calloutElement.current;\n\n    // If we expect a target element to position against, we need to wait until `this._target` is resolved. Otherwise\n    // we can try to position.\n    const expectsTarget = !!this.props.target;\n\n    if (hostElement && calloutElement && (!expectsTarget || this._target)) {\n      let currentProps: IPositionProps | undefined;\n      currentProps = assign(currentProps, this.props);\n      currentProps!.bounds = this._getBounds();\n      currentProps!.target = this._target!;\n      // If there is a finalHeight given then we assume that the user knows and will handle\n      // additional positioning adjustments so we should call positionCard\n      const newPositions: ICalloutPositionedInfo = this.props.finalHeight\n        ? positionCard(currentProps!, hostElement, calloutElement, positions)\n        : positionCallout(currentProps!, hostElement, calloutElement, positions);\n\n      // Set the new position only when the positions are not exists or one of the new callout positions are different.\n      // The position should not change if the position is within 2 decimal places.\n      if (\n        (!positions && newPositions) ||\n        (positions && newPositions && !this._arePositionsEqual(positions, newPositions) && this._positionAttempts < 5)\n      ) {\n        // We should not reposition the callout more than a few times, if it is then the content is likely resizing\n        // and we should stop trying to reposition to prevent a stack overflow.\n        this._positionAttempts++;\n        this.setState({\n          positions: newPositions,\n        });\n      } else if (this._positionAttempts > 0) {\n        // Only call the onPositioned callback if the callout has been re-positioned at least once.\n        this._positionAttempts = 0;\n        if (this.props.onPositioned) {\n          this.props.onPositioned(this.state.positions);\n        }\n      }\n    }\n  }\n\n  private _getBounds(): IRectangle {\n    if (!this._bounds) {\n      const bounds = this.props.bounds;\n      let currentBounds = typeof bounds === 'function' ? bounds(this.props.target, this._targetWindow) : bounds;\n\n      if (!currentBounds) {\n        currentBounds = getBoundsFromTargetWindow(this._target, this._targetWindow);\n        currentBounds = {\n          top: currentBounds.top + this.props.minPagePadding!,\n          left: currentBounds.left + this.props.minPagePadding!,\n          right: currentBounds.right! - this.props.minPagePadding!,\n          bottom: currentBounds.bottom! - this.props.minPagePadding!,\n          width: currentBounds.width - this.props.minPagePadding! * 2,\n          height: currentBounds.height - this.props.minPagePadding! * 2,\n        };\n      }\n      this._bounds = currentBounds;\n    }\n    return this._bounds;\n  }\n\n  // Max height should remain as synchronous as possible, which is why it is not done using set state.\n  // It needs to be synchronous since it will impact the ultimate position of the callout.\n  private _getMaxHeight(): number | undefined {\n    if (!this._maxHeight) {\n      if (this.props.directionalHintFixed && this._target) {\n        const beakWidth = this.props.isBeakVisible ? this.props.beakWidth : 0;\n        const gapSpace = this.props.gapSpace ? this.props.gapSpace : 0;\n        // Since the callout cannot measure it's border size it must be taken into account here. Otherwise it will\n        // overlap with the target.\n        const totalGap = gapSpace + beakWidth!;\n        this._async.requestAnimationFrame(() => {\n          if (this._target) {\n            this._maxHeight = getMaxHeight(\n              this._target,\n              this.props.directionalHint!,\n              totalGap,\n              this._getBounds(),\n              this.props.coverTarget,\n            );\n            this._blockResetHeight = true;\n            this.forceUpdate();\n          }\n        }, this._target as Element);\n      } else {\n        this._maxHeight = this._getBounds().height!;\n      }\n    }\n    return this._maxHeight!;\n  }\n\n  private _arePositionsEqual(positions: ICalloutPositionedInfo, newPosition: ICalloutPositionedInfo): boolean {\n    return (\n      this._comparePositions(positions.elementPosition, newPosition.elementPosition) &&\n      this._comparePositions(positions.beakPosition.elementPosition, newPosition.beakPosition.elementPosition)\n    );\n  }\n\n  private _comparePositions(oldPositions: IPosition, newPositions: IPosition): boolean {\n    for (const key in newPositions) {\n      if (newPositions.hasOwnProperty(key)) {\n        const oldPositionEdge = oldPositions[key];\n        const newPositionEdge = newPositions[key];\n\n        if (oldPositionEdge !== undefined && newPositionEdge !== undefined) {\n          if (oldPositionEdge.toFixed(2) !== newPositionEdge.toFixed(2)) {\n            return false;\n          }\n        } else {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  private _setTargetWindowAndElement(target: Target): void {\n    const currentElement = this._calloutElement.current;\n\n    if (target) {\n      if (typeof target === 'string') {\n        const currentDoc: Document = getDocument(currentElement)!;\n        this._target = currentDoc ? (currentDoc.querySelector(target) as Element) : null;\n        this._targetWindow = getWindow(currentElement)!;\n      } else if (!!(target as MouseEvent).stopPropagation) {\n        this._targetWindow = getWindow((target as MouseEvent).target as HTMLElement)!;\n        this._target = target as MouseEvent;\n      } else if (!!(target as Element).getBoundingClientRect) {\n        const targetElement: Element = target as Element;\n        this._targetWindow = getWindow(targetElement)!;\n        this._target = target as Element;\n      } else if ((target as React.RefObject<Element>).current !== undefined) {\n        this._target = (target as React.RefObject<Element>).current;\n        this._targetWindow = getWindow(this._target)!;\n        // HTMLImgElements can have x and y values. The check for it being a point must go last.\n      } else {\n        this._targetWindow = getWindow(currentElement)!;\n        this._target = target as IPoint;\n      }\n    } else {\n      this._targetWindow = getWindow(currentElement)!;\n    }\n  }\n\n  private _setHeightOffsetEveryFrame(): void {\n    if (this._calloutElement.current && this.props.finalHeight) {\n      this._setHeightOffsetTimer = this._async.requestAnimationFrame(() => {\n        const calloutMainElem = this._calloutElement.current && (this._calloutElement.current.lastChild as HTMLElement);\n\n        if (!calloutMainElem) {\n          return;\n        }\n\n        const cardScrollHeight: number = calloutMainElem.scrollHeight;\n        const cardCurrHeight: number = calloutMainElem.offsetHeight;\n        const scrollDiff: number = cardScrollHeight - cardCurrHeight;\n\n        this.setState({\n          heightOffset: this.state.heightOffset! + scrollDiff,\n        });\n\n        if (calloutMainElem.offsetHeight < this.props.finalHeight!) {\n          this._setHeightOffsetEveryFrame();\n        } else {\n          this._async.cancelAnimationFrame(this._setHeightOffsetTimer, this._calloutElement.current);\n        }\n      }, this._calloutElement.current);\n    }\n  }\n\n  // Whether or not the current positions should be reset\n  private _didPositionPropsChange(newProps: ICalloutProps, oldProps: ICalloutProps): boolean {\n    return (\n      (!newProps.hidden && newProps.hidden !== oldProps.hidden) || newProps.directionalHint !== oldProps.directionalHint\n    );\n  }\n\n  private _getTarget(props: ICalloutProps = this.props): Target {\n    const { target } = props;\n    return target!;\n  }\n\n  private _mouseDownOnPopup = () => {\n    this._isMouseDownOnPopup = true;\n  };\n\n  private _mouseUpOnPopup = () => {\n    this._isMouseDownOnPopup = false;\n  };\n}\n","import { HighContrastSelector, IRawStyle, focusClear, getGlobalClassNames } from '../../Styling';\nimport { ICalloutContentStyleProps, ICalloutContentStyles } from './Callout.types';\n\nfunction getBeakStyle(beakWidth?: number): IRawStyle {\n  return {\n    height: beakWidth,\n    width: beakWidth,\n  };\n}\n\nconst GlobalClassNames = {\n  container: 'ms-Callout-container',\n  root: 'ms-Callout',\n  beak: 'ms-Callout-beak',\n  beakCurtain: 'ms-Callout-beakCurtain',\n  calloutMain: 'ms-Callout-main',\n};\n\nexport const getStyles = (props: ICalloutContentStyleProps): ICalloutContentStyles => {\n  const { theme, className, overflowYHidden, calloutWidth, beakWidth, backgroundColor, calloutMaxWidth } = props;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const { semanticColors, effects } = theme;\n\n  return {\n    container: [\n      classNames.container,\n      {\n        position: 'relative',\n      },\n    ],\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      {\n        position: 'absolute',\n        boxSizing: 'border-box',\n        borderRadius: effects.roundedCorner2,\n        boxShadow: effects.elevation16,\n        selectors: {\n          [HighContrastSelector]: {\n            borderWidth: 1,\n            borderStyle: 'solid',\n            borderColor: 'WindowText',\n          },\n        },\n      },\n      focusClear(),\n      className,\n      !!calloutWidth && { width: calloutWidth },\n      !!calloutMaxWidth && { maxWidth: calloutMaxWidth },\n    ],\n    beak: [\n      classNames.beak,\n      {\n        position: 'absolute',\n        backgroundColor: semanticColors.menuBackground,\n        boxShadow: 'inherit',\n        border: 'inherit',\n        boxSizing: 'border-box',\n        transform: 'rotate(45deg)',\n      },\n      getBeakStyle(beakWidth),\n      backgroundColor && {\n        backgroundColor: backgroundColor,\n      },\n    ],\n    beakCurtain: [\n      classNames.beakCurtain,\n      {\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n        backgroundColor: semanticColors.menuBackground,\n        borderRadius: effects.roundedCorner2,\n      },\n    ],\n    calloutMain: [\n      classNames.calloutMain,\n      {\n        backgroundColor: semanticColors.menuBackground,\n        overflowX: 'hidden',\n        overflowY: 'auto',\n        position: 'relative',\n        borderRadius: effects.roundedCorner2,\n      },\n      overflowYHidden && {\n        overflowY: 'hidden',\n      },\n      backgroundColor && {\n        backgroundColor: backgroundColor,\n      },\n    ],\n  };\n};\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { ICalloutProps, ICalloutContentStyles, ICalloutContentStyleProps } from './Callout.types';\nimport { CalloutContentBase } from './CalloutContent.base';\nimport { getStyles } from './CalloutContent.styles';\n\nexport const CalloutContent: React.FunctionComponent<ICalloutProps> = styled<\n  ICalloutProps,\n  ICalloutContentStyleProps,\n  ICalloutContentStyles\n>(CalloutContentBase, getStyles, undefined, { scope: 'CalloutContent' });\n","import * as React from 'react';\nimport { ICalloutProps } from './Callout.types';\nimport { ICalloutState } from './CalloutContent.base';\nimport { CalloutContent } from './CalloutContent';\nimport { Layer } from '../../Layer';\n\nexport class Callout extends React.Component<ICalloutProps, ICalloutState> {\n  public render(): JSX.Element {\n    const { layerProps, ...rest } = this.props;\n    const content = <CalloutContent {...rest} />;\n    return this.props.doNotLayer ? content : <Layer {...layerProps}>{content}</Layer>;\n  }\n}\n","export const KTP_PREFIX = 'ktp';\nexport const KTP_SEPARATOR = '-';\nexport const KTP_FULL_PREFIX = KTP_PREFIX + KTP_SEPARATOR;\nexport const DATAKTP_TARGET = 'data-ktp-target';\nexport const DATAKTP_EXECUTE_TARGET = 'data-ktp-execute-target';\nexport const KTP_LAYER_ID = 'ktp-layer-id';\nexport const KTP_ARIA_SEPARATOR = ', ';\n\n// Events\nexport namespace KeytipEvents {\n  export const KEYTIP_ADDED = 'keytipAdded';\n  export const KEYTIP_REMOVED = 'keytipRemoved';\n  export const KEYTIP_UPDATED = 'keytipUpdated';\n  export const PERSISTED_KEYTIP_ADDED = 'persistedKeytipAdded';\n  export const PERSISTED_KEYTIP_REMOVED = 'persistedKeytipRemoved';\n  export const PERSISTED_KEYTIP_EXECUTE = 'persistedKeytipExecute';\n  export const ENTER_KEYTIP_MODE = 'enterKeytipMode';\n  export const EXIT_KEYTIP_MODE = 'exitKeytipMode';\n}\n","import { IKeytipProps } from '../../Keytip';\nimport { EventGroup, getId } from '../../Utilities';\nimport { KeytipEvents } from '../../utilities/keytips/KeytipConstants';\n\nexport interface IUniqueKeytip {\n  uniqueID: string;\n  keytip: IKeytipProps;\n}\n\n/**\n * This class is responsible for handling registering, updating, and unregistering of keytips\n */\nexport class KeytipManager {\n  private static _instance: KeytipManager = new KeytipManager();\n\n  public keytips: { [key: string]: IUniqueKeytip } = {};\n  public persistedKeytips: { [key: string]: IUniqueKeytip } = {};\n  public sequenceMapping: { [key: string]: IKeytipProps } = {};\n\n  // This is (and should be) updated and kept in sync\n  // with the inKeytipMode in KeytipLayer.\n  public inKeytipMode = false;\n\n  // Boolean that gets checked before entering keytip mode by the KeytipLayer\n  // Used for an override in special cases (e.g. Disable entering keytip mode when a modal is shown)\n  public shouldEnterKeytipMode = true;\n\n  // Boolean to indicate whether to delay firing an event to update subscribers of\n  // keytip data changed.\n  public delayUpdatingKeytipChange = false;\n\n  /**\n   * Static function to get singleton KeytipManager instance\n   *\n   * @returns {KeytipManager} Singleton KeytipManager instance\n   */\n  public static getInstance(): KeytipManager {\n    return this._instance;\n  }\n\n  /**\n   * Initialization code to set set parameters to define\n   * how the KeytipManager handles keytip data.\n   *\n   * @param delayUpdatingKeytipChange - T/F if we should delay notifiying keytip subscribers\n   * of keytip changes\n   */\n  public init(delayUpdatingKeytipChange: boolean) {\n    this.delayUpdatingKeytipChange = delayUpdatingKeytipChange;\n  }\n\n  /**\n   * Registers a keytip\n   *\n   * @param keytipProps - Keytip to register\n   * @param persisted - T/F if this keytip should be persisted, default is false\n   * @returns {string} Unique ID for this keytip\n   */\n  public register(keytipProps: IKeytipProps, persisted: boolean = false): string {\n    let props: IKeytipProps = keytipProps;\n    if (!persisted) {\n      // Add the overflowSetSequence if necessary\n      props = this.addParentOverflow(keytipProps);\n      this.sequenceMapping[props.keySequences.toString()] = props;\n    }\n    // Create a unique keytip\n    const uniqueKeytip: IUniqueKeytip = this._getUniqueKtp(props);\n    // Add to dictionary\n    persisted\n      ? (this.persistedKeytips[uniqueKeytip.uniqueID] = uniqueKeytip)\n      : (this.keytips[uniqueKeytip.uniqueID] = uniqueKeytip);\n\n    // We only want to add something new if we are currently showing keytip mode\n    if (this.inKeytipMode || !this.delayUpdatingKeytipChange) {\n      const event = persisted ? KeytipEvents.PERSISTED_KEYTIP_ADDED : KeytipEvents.KEYTIP_ADDED;\n      EventGroup.raise(this, event, {\n        keytip: props,\n        uniqueID: uniqueKeytip.uniqueID,\n      });\n    }\n\n    return uniqueKeytip.uniqueID;\n  }\n\n  /**\n   * Update a keytip\n   *\n   * @param keytipProps - Keytip to update\n   * @param uniqueID - Unique ID of this keytip\n   */\n  public update(keytipProps: IKeytipProps, uniqueID: string): void {\n    const newKeytipProps = this.addParentOverflow(keytipProps);\n    const uniqueKeytip = this._getUniqueKtp(newKeytipProps, uniqueID);\n    const oldKeyTip = this.keytips[uniqueID];\n    if (oldKeyTip) {\n      // Update everything except 'visible'\n      uniqueKeytip.keytip.visible = oldKeyTip.keytip.visible;\n      // Update keytip in this.keytips\n      this.keytips[uniqueID] = uniqueKeytip;\n\n      // Update the sequence to be up to date\n      delete this.sequenceMapping[oldKeyTip.keytip.keySequences.toString()];\n      this.sequenceMapping[uniqueKeytip.keytip.keySequences.toString()] = uniqueKeytip.keytip;\n\n      // Raise event only if we are currently in keytip mode\n      if (this.inKeytipMode || !this.delayUpdatingKeytipChange) {\n        EventGroup.raise(this, KeytipEvents.KEYTIP_UPDATED, {\n          keytip: uniqueKeytip.keytip,\n          uniqueID: uniqueKeytip.uniqueID,\n        });\n      }\n    }\n  }\n\n  /**\n   * Unregisters a keytip\n   *\n   * @param keytipToRemove - IKeytipProps of the keytip to remove\n   * @param uniqueID - Unique ID of this keytip\n   * @param persisted - T/F if this keytip should be persisted, default is false\n   */\n  public unregister(keytipToRemove: IKeytipProps, uniqueID: string, persisted: boolean = false): void {\n    persisted ? delete this.persistedKeytips[uniqueID] : delete this.keytips[uniqueID];\n    !persisted && delete this.sequenceMapping[keytipToRemove.keySequences.toString()];\n\n    const event = persisted ? KeytipEvents.PERSISTED_KEYTIP_REMOVED : KeytipEvents.KEYTIP_REMOVED;\n    // Update keytips only if we're in keytip mode\n    if (this.inKeytipMode || !this.delayUpdatingKeytipChange) {\n      EventGroup.raise(this, event, {\n        keytip: keytipToRemove,\n        uniqueID: uniqueID,\n      });\n    }\n  }\n\n  /**\n   * Manual call to enter keytip mode\n   */\n  public enterKeytipMode(): void {\n    EventGroup.raise(this, KeytipEvents.ENTER_KEYTIP_MODE);\n  }\n\n  /**\n   * Manual call to exit keytip mode\n   */\n  public exitKeytipMode(): void {\n    EventGroup.raise(this, KeytipEvents.EXIT_KEYTIP_MODE);\n  }\n\n  /**\n   * Gets all IKeytipProps from this.keytips\n   *\n   * @returns {IKeytipProps[]} All keytips stored in the manager\n   */\n  public getKeytips(): IKeytipProps[] {\n    return Object.keys(this.keytips).map(key => this.keytips[key].keytip);\n  }\n\n  /**\n   * Adds the overflowSetSequence to the keytipProps if its parent keytip also has it\n   *\n   * @param keytipProps - Keytip props to add overflowSetSequence to if necessary\n   * @returns {IKeytipProps} - Modified keytip props, if needed to be modified\n   */\n  public addParentOverflow(keytipProps: IKeytipProps): IKeytipProps {\n    const fullSequence = [...keytipProps.keySequences];\n    fullSequence.pop();\n    if (fullSequence.length !== 0) {\n      const parentKeytip = this.sequenceMapping[fullSequence.toString()];\n      if (parentKeytip && parentKeytip.overflowSetSequence) {\n        return {\n          ...keytipProps,\n          overflowSetSequence: parentKeytip.overflowSetSequence,\n        };\n      }\n    }\n    return keytipProps;\n  }\n\n  /**\n   * Public function to bind for overflow items that have a submenu\n   *\n   * @param overflowButtonSequences\n   * @param keytipSequences\n   */\n  public menuExecute(overflowButtonSequences: string[], keytipSequences: string[]) {\n    EventGroup.raise(this, KeytipEvents.PERSISTED_KEYTIP_EXECUTE, {\n      overflowButtonSequences,\n      keytipSequences,\n    });\n  }\n\n  /**\n   * Creates an IUniqueKeytip object\n   *\n   * @param keytipProps - IKeytipProps\n   * @param uniqueID - Unique ID, will default to the next unique ID if not passed\n   * @returns {IUniqueKeytip} IUniqueKeytip object\n   */\n  private _getUniqueKtp(keytipProps: IKeytipProps, uniqueID: string = getId()): IUniqueKeytip {\n    return { keytip: { ...keytipProps }, uniqueID };\n  }\n}\n","import { KTP_SEPARATOR, KTP_PREFIX, DATAKTP_TARGET, DATAKTP_EXECUTE_TARGET, KTP_LAYER_ID } from './KeytipConstants';\nimport { addElementAtIndex } from '../../Utilities';\n\n/**\n * Converts a whole set of KeySequences into one keytip ID, which will be the ID for the last keytip sequence specified\n * keySequences should not include the initial keytip 'start' sequence.\n *\n * @param keySequences - Full path of IKeySequences for one keytip.\n * @returns {string} String to use for the keytip ID.\n */\nexport function sequencesToID(keySequences: string[]): string {\n  return keySequences.reduce((prevValue: string, keySequence: string): string => {\n    return prevValue + KTP_SEPARATOR + keySequence.split('').join(KTP_SEPARATOR);\n  }, KTP_PREFIX);\n}\n\n/**\n * Merges an overflow sequence with a key sequence.\n *\n * @param keySequences - Full sequence for one keytip.\n * @param overflowKeySequences - Full overflow keytip sequence.\n * @returns {string[]} Sequence that will be used by the keytip when in the overflow.\n */\nexport function mergeOverflows(keySequences: string[], overflowKeySequences: string[]): string[] {\n  const overflowSequenceLen = overflowKeySequences.length;\n  const overflowSequence = [...overflowKeySequences].pop();\n  const newKeySequences = [...keySequences];\n  return addElementAtIndex(newKeySequences, overflowSequenceLen - 1, overflowSequence!);\n}\n\n/**\n * Constructs the data-ktp-target attribute selector from a full key sequence.\n *\n * @param keySequences - Full string[] for a Keytip.\n * @returns {string} String selector to use to query for the keytip target.\n */\nexport function ktpTargetFromSequences(keySequences: string[]): string {\n  return '[' + DATAKTP_TARGET + '=\"' + sequencesToID(keySequences) + '\"]';\n}\n\n/**\n * Constructs the data-ktp-execute-target attribute selector from a keytip ID.\n *\n * @param keytipId - ID of the Keytip.\n * @returns {string} String selector to use to query for the keytip execute target.\n */\nexport function ktpTargetFromId(keytipId: string): string {\n  return '[' + DATAKTP_EXECUTE_TARGET + '=\"' + keytipId + '\"]';\n}\n\n/**\n * Gets the aria-describedby value to put on the component with this keytip.\n *\n * @param keySequences - KeySequences of the keytip.\n * @returns {string} The aria-describedby value to set on the component with this keytip.\n */\nexport function getAriaDescribedBy(keySequences: string[]): string {\n  const describedby = ' ' + KTP_LAYER_ID;\n  if (!keySequences.length) {\n    // Return just the layer ID\n    return describedby;\n  }\n\n  return describedby + ' ' + sequencesToID(keySequences);\n}\n","import * as React from 'react';\nimport { IRenderComponent, mergeAriaAttributeValues } from '../../Utilities';\nimport { IKeytipDataProps } from './KeytipData.types';\nimport { IKeytipProps } from '../../Keytip';\nimport { KeytipManager } from '../../utilities/keytips/KeytipManager';\nimport { mergeOverflows, sequencesToID, getAriaDescribedBy } from '../../utilities/keytips/KeytipUtils';\n\n/**\n * A small element to help the target component correctly read out its aria-describedby for its Keytip\n * {@docCategory Keytips}\n */\nexport class KeytipData extends React.Component<IKeytipDataProps & IRenderComponent<{}>, {}> {\n  private _uniqueId: string;\n  private _keytipManager: KeytipManager = KeytipManager.getInstance();\n\n  public componentDidMount() {\n    // Register Keytip in KeytipManager\n    if (this.props.keytipProps) {\n      this._uniqueId = this._keytipManager.register(this._getKtpProps());\n    }\n  }\n\n  public componentWillUnmount() {\n    // Unregister Keytip in KeytipManager\n    this.props.keytipProps && this._keytipManager.unregister(this._getKtpProps(), this._uniqueId);\n  }\n\n  public componentDidUpdate(prevProps: IKeytipDataProps & IRenderComponent<{}>) {\n    if (prevProps.keytipProps !== this.props.keytipProps || prevProps.disabled !== this.props.disabled) {\n      // If keytipProps or disabled has changed update Keytip in KeytipManager\n      this.props.keytipProps && this._keytipManager.update(this._getKtpProps(), this._uniqueId);\n    }\n  }\n\n  public render(): JSX.Element {\n    const { children, keytipProps, ariaDescribedBy } = this.props;\n    let nativeKeytipProps: any = {};\n    if (keytipProps) {\n      nativeKeytipProps = this._getKtpAttrs(keytipProps, ariaDescribedBy);\n    }\n    return children(nativeKeytipProps);\n  }\n\n  private _getKtpProps(): IKeytipProps {\n    return {\n      disabled: this.props.disabled,\n      ...this.props.keytipProps!,\n    };\n  }\n\n  /**\n   * Gets the aria- and data- attributes to attach to the component\n   * @param keytipProps - props for Keytip\n   * @param describedByPrepend - ariaDescribedBy value to prepend\n   */\n  private _getKtpAttrs(keytipProps: IKeytipProps, describedByPrepend?: string): any {\n    if (keytipProps) {\n      // Add the parent overflow sequence if necessary\n      const newKeytipProps = this._keytipManager.addParentOverflow(keytipProps);\n\n      // Construct aria-describedby and data-ktp-id attributes and return\n      const ariaDescribedBy = getAriaDescribedBy(newKeytipProps.keySequences);\n      let keySequences = [...newKeytipProps.keySequences];\n      if (newKeytipProps.overflowSetSequence) {\n        keySequences = mergeOverflows(keySequences, newKeytipProps.overflowSetSequence);\n      }\n      const ktpId = sequencesToID(keySequences);\n\n      return {\n        'aria-describedby': mergeAriaAttributeValues(describedByPrepend, ariaDescribedBy),\n        'data-ktp-target': ktpId,\n        'data-ktp-execute-target': ktpId,\n      };\n    }\n    return undefined;\n  }\n}\n","import * as React from 'react';\nimport { IImageProps } from '../Image/Image.types';\nimport { IStyle, ITheme } from '../../Styling';\nimport { IBaseProps, IStyleFunctionOrObject } from '../../Utilities';\n\n/**\n * @deprecated Icon type is inferred based on presence of `IIconProps.imageProps`\n * {@docCategory Icon}\n */\nexport enum IconType {\n  /**\n   * Render using the fabric icon font.\n   * @deprecated Icon type is inferred based on presence of `IIconProps.imageProps`\n   */\n  default = 0,\n\n  /**\n   * Render using an image, where imageProps would be used.\n   * @deprecated Icon type is inferred based on presence of `IIconProps.imageProps`\n   */\n  image = 1,\n\n  /**\n   * Deprecated, use `default`.\n   * @deprecated Use `default`.\n   */\n  Default = 100000,\n\n  /**\n   * Deprecated, use `image`.\n   * @deprecated Use `image`.\n   */\n  Image = 100001,\n}\n\n/**\n * {@docCategory Icon}\n */\nexport interface IIconProps extends IBaseProps, React.HTMLAttributes<HTMLElement> {\n  /**\n   * The name of the icon to use from the icon font.\n   * If string is empty, a placeholder icon will be rendered the same width as an icon.\n   */\n  iconName?: string;\n\n  /**\n   * The aria label of the icon for the benefit of screen readers.\n   * @deprecated Use the native prop `aria-label`\n   */\n  ariaLabel?: string;\n\n  /**\n   * The type of icon to render (image or icon font).\n   * @deprecated Inferred based on the presence of `imageProps`\n   */\n  // tslint:disable-next-line:deprecation\n  iconType?: IconType;\n\n  /**\n   * If rendering an image icon, these props will be passed to the Image component.\n   */\n  imageProps?: IImageProps;\n\n  /**\n   * If rendering an image icon, this component will be rendered in the event that loading the image fails.\n   */\n  imageErrorAs?: React.ComponentType<IImageProps>;\n\n  /**\n   * Gets the styles for an Icon.\n   */\n  styles?: IStyleFunctionOrObject<IIconStyleProps, IIconStyles>;\n  theme?: ITheme;\n}\n\n/**\n * {@docCategory Icon}\n */\nexport interface IIconStyleProps {\n  className?: string;\n  iconClassName?: string;\n  isPlaceholder: boolean;\n  isImage: boolean;\n  styles?: Partial<IIconStyles>;\n  theme?: ITheme;\n}\n\n/**\n * {@docCategory Icon}\n */\nexport interface IIconStyles {\n  root?: IStyle;\n\n  /**\n   * Deprecated. Use `root`.\n   * @deprecated Use `root`.\n   */\n  imageContainer?: IStyle;\n}\n\n/**\n * Props for a basic icon component which only supports font glyphs and can't be targeted by customizations.\n * {@docCategory Icon}\n */\nexport interface IFontIconProps extends React.HTMLAttributes<HTMLElement> {\n  /**\n   * The name of the icon to use from the icon font.\n   * If string is empty, a placeholder icon will be rendered the same width as an icon.\n   */\n  iconName?: string;\n\n  /**\n   * Custom class to style the icon.\n   */\n  className?: string;\n}\n\n/**\n * Props for a basic image icon component which doesn't directly provide image load error handling\n * and can't be targeted by customizations.\n * {@docCategory Icon}\n */\nexport interface IImageIconProps extends React.HTMLAttributes<HTMLElement> {\n  /**\n   * Props passed to the Image component.\n   */\n  imageProps: IImageProps;\n\n  /**\n   * Custom class to style the icon.\n   */\n  className?: string;\n}\n","import * as React from 'react';\n\nimport { IIconProps, IconType, IIconStyleProps, IIconStyles } from './Icon.types';\nimport { Image } from '../Image/Image';\nimport { ImageLoadState, IImageProps } from '../Image/Image.types';\nimport { getNativeProps, htmlElementProperties, classNamesFunction } from '../../Utilities';\nimport { getIconContent } from './FontIcon';\n\nexport interface IIconState {\n  imageLoadError: boolean;\n}\n\nconst getClassNames = classNamesFunction<IIconStyleProps, IIconStyles>({\n  // Icon is used a lot by other components.\n  // It's likely to see expected cases which pass different className to the Icon.\n  // Therefore setting a larger cache size.\n  cacheSize: 100,\n});\n\nexport class IconBase extends React.Component<IIconProps, IIconState> {\n  constructor(props: IIconProps) {\n    super(props);\n    this.state = {\n      imageLoadError: false,\n    };\n  }\n\n  public render() {\n    const { className, styles, iconName, imageErrorAs, theme } = this.props;\n    const isPlaceholder = typeof iconName === 'string' && iconName.length === 0;\n    const isImage =\n      // tslint:disable-next-line:deprecation\n      !!this.props.imageProps || this.props.iconType === IconType.image || this.props.iconType === IconType.Image;\n    const iconContent = getIconContent(iconName) || {};\n    const { iconClassName, children } = iconContent;\n\n    const classNames = getClassNames(styles, {\n      theme: theme!,\n      className,\n      iconClassName,\n      isImage,\n      isPlaceholder,\n    });\n\n    const RootType = isImage ? 'span' : 'i';\n    const nativeProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(this.props, htmlElementProperties, [\n      'aria-label',\n    ]);\n    const { imageLoadError } = this.state;\n    const imageProps: IImageProps = {\n      ...this.props.imageProps,\n      onLoadingStateChange: this.onImageLoadingStateChange,\n    };\n    const ImageType = (imageLoadError && imageErrorAs) || Image;\n\n    // tslint:disable-next-line:deprecation\n    const ariaLabel = this.props['aria-label'] || this.props.ariaLabel;\n    const containerProps = ariaLabel\n      ? {\n          'aria-label': ariaLabel,\n        }\n      : {\n          'aria-hidden': this.props['aria-labelledby'] || imageProps['aria-labelledby'] ? false : true,\n        };\n\n    return (\n      <RootType data-icon-name={iconName} {...containerProps} {...nativeProps} className={classNames.root}>\n        {isImage ? <ImageType {...imageProps} /> : children}\n      </RootType>\n    );\n  }\n\n  private onImageLoadingStateChange = (state: ImageLoadState): void => {\n    if (this.props.imageProps && this.props.imageProps.onLoadingStateChange) {\n      this.props.imageProps.onLoadingStateChange(state);\n    }\n    if (state === ImageLoadState.error) {\n      this.setState({ imageLoadError: true });\n    }\n  };\n}\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { IIconProps, IIconStyleProps, IIconStyles } from './Icon.types';\nimport { IconBase } from './Icon.base';\nimport { getStyles } from './Icon.styles';\n\n/**\n * Legacy Icon component which can be targeted by customization. It's recommended to use `FontIcon`\n * or `ImageIcon` instead, especially in scenarios where rendering performance is important.\n * {@docCategory Icon}\n */\nexport const Icon: React.FunctionComponent<IIconProps> = styled<IIconProps, IIconStyleProps, IIconStyles>(\n  IconBase,\n  getStyles,\n  undefined,\n  {\n    scope: 'Icon',\n  },\n  true,\n);\n","import { elementContainsAttribute } from './dom/elementContainsAttribute';\nimport { elementContains } from './dom/elementContains';\nimport { getParent } from './dom/getParent';\nimport { getWindow } from './dom/getWindow';\nimport { getDocument } from './dom/getDocument';\n\nconst IS_FOCUSABLE_ATTRIBUTE = 'data-is-focusable';\nconst IS_VISIBLE_ATTRIBUTE = 'data-is-visible';\nconst FOCUSZONE_ID_ATTRIBUTE = 'data-focuszone-id';\nconst FOCUSZONE_SUB_ATTRIBUTE = 'data-is-sub-focuszone';\n\n/**\n * Gets the first focusable element.\n *\n * @public\n */\nexport function getFirstFocusable(\n  rootElement: HTMLElement,\n  currentElement: HTMLElement,\n  includeElementsInFocusZones?: boolean,\n): HTMLElement | null {\n  return getNextElement(\n    rootElement,\n    currentElement,\n    true /*checkNode*/,\n    false /*suppressParentTraversal*/,\n    false /*suppressChildTraversal*/,\n    includeElementsInFocusZones,\n  );\n}\n\n/**\n * Gets the last focusable element.\n *\n * @public\n */\nexport function getLastFocusable(\n  rootElement: HTMLElement,\n  currentElement: HTMLElement,\n  includeElementsInFocusZones?: boolean,\n): HTMLElement | null {\n  return getPreviousElement(\n    rootElement,\n    currentElement,\n    true /*checkNode*/,\n    false /*suppressParentTraversal*/,\n    true /*traverseChildren*/,\n    includeElementsInFocusZones,\n  );\n}\n\n/**\n * Gets the first tabbable element. (The difference between focusable and tabbable is that tabbable elements are\n * focusable elements that also have tabIndex != -1.)\n * @param rootElement - The parent element to search beneath.\n * @param currentElement - The descendant of rootElement to start the search at.  This element is the first one checked,\n * and iteration continues forward.  Typical use passes rootElement.firstChild.\n * @param includeElementsInFocusZones - true if traversal should go into FocusZone descendants.\n * @param checkNode - Include currentElement in search when true. Defaults to true.\n * @public\n */\nexport function getFirstTabbable(\n  rootElement: HTMLElement,\n  currentElement: HTMLElement,\n  includeElementsInFocusZones?: boolean,\n  checkNode: boolean = true,\n): HTMLElement | null {\n  return getNextElement(\n    rootElement,\n    currentElement,\n    checkNode,\n    false /*suppressParentTraversal*/,\n    false /*suppressChildTraversal*/,\n    includeElementsInFocusZones,\n    false /*allowFocusRoot*/,\n    true /*tabbable*/,\n  );\n}\n\n/**\n * Gets the last tabbable element. (The difference between focusable and tabbable is that tabbable elements are\n * focusable elements that also have tabIndex != -1.)\n * @param rootElement - The parent element to search beneath.\n * @param currentElement - The descendant of rootElement to start the search at.  This element is the first one checked,\n * and iteration continues in reverse.  Typical use passes rootElement.lastChild.\n * @param includeElementsInFocusZones - true if traversal should go into FocusZone descendants.\n * @param checkNode - Include currentElement in search when true. Defaults to true.\n * @public\n */\nexport function getLastTabbable(\n  rootElement: HTMLElement,\n  currentElement: HTMLElement,\n  includeElementsInFocusZones?: boolean,\n  checkNode: boolean = true,\n): HTMLElement | null {\n  return getPreviousElement(\n    rootElement,\n    currentElement,\n    checkNode,\n    false /*suppressParentTraversal*/,\n    true /*traverseChildren*/,\n    includeElementsInFocusZones,\n    false /*allowFocusRoot*/,\n    true /*tabbable*/,\n  );\n}\n\n/**\n * Attempts to focus the first focusable element that is a child or child's child of the rootElement.\n *\n * @public\n * @param rootElement - Element to start the search for a focusable child.\n * @returns True if focus was set, false if it was not.\n */\nexport function focusFirstChild(rootElement: HTMLElement): boolean {\n  let element: HTMLElement | null = getNextElement(rootElement, rootElement, true, false, false, true);\n\n  if (element) {\n    focusAsync(element);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Traverse to find the previous element.\n * If tabbable is true, the element must have tabIndex != -1.\n *\n * @public\n */\nexport function getPreviousElement(\n  rootElement: HTMLElement,\n  currentElement: HTMLElement | null,\n  checkNode?: boolean,\n  suppressParentTraversal?: boolean,\n  traverseChildren?: boolean,\n  includeElementsInFocusZones?: boolean,\n  allowFocusRoot?: boolean,\n  tabbable?: boolean,\n): HTMLElement | null {\n  if (!currentElement || (!allowFocusRoot && currentElement === rootElement)) {\n    return null;\n  }\n\n  let isCurrentElementVisible = isElementVisible(currentElement);\n\n  // Check its children.\n  if (\n    traverseChildren &&\n    isCurrentElementVisible &&\n    (includeElementsInFocusZones || !(isElementFocusZone(currentElement) || isElementFocusSubZone(currentElement)))\n  ) {\n    const childMatch = getPreviousElement(\n      rootElement,\n      currentElement.lastElementChild as HTMLElement,\n      true,\n      true,\n      true,\n      includeElementsInFocusZones,\n      allowFocusRoot,\n      tabbable,\n    );\n\n    if (childMatch) {\n      if ((tabbable && isElementTabbable(childMatch, true)) || !tabbable) {\n        return childMatch;\n      }\n\n      const childMatchSiblingMatch = getPreviousElement(\n        rootElement,\n        childMatch.previousElementSibling as HTMLElement,\n        true,\n        true,\n        true,\n        includeElementsInFocusZones,\n        allowFocusRoot,\n        tabbable,\n      );\n      if (childMatchSiblingMatch) {\n        return childMatchSiblingMatch;\n      }\n\n      let childMatchParent = childMatch.parentElement;\n\n      // At this point if we have not found any potential matches\n      // start looking at the rest of the subtree under the currentParent.\n      // NOTE: We do not want to recurse here because doing so could\n      // cause elements to get skipped.\n      while (childMatchParent && childMatchParent !== currentElement) {\n        const childMatchParentMatch = getPreviousElement(\n          rootElement,\n          childMatchParent.previousElementSibling as HTMLElement,\n          true,\n          true,\n          true,\n          includeElementsInFocusZones,\n          allowFocusRoot,\n          tabbable,\n        );\n\n        if (childMatchParentMatch) {\n          return childMatchParentMatch;\n        }\n\n        childMatchParent = childMatchParent.parentElement;\n      }\n    }\n  }\n\n  // Check the current node, if it's not the first traversal.\n  if (checkNode && isCurrentElementVisible && isElementTabbable(currentElement, tabbable)) {\n    return currentElement;\n  }\n\n  // Check its previous sibling.\n  const siblingMatch = getPreviousElement(\n    rootElement,\n    currentElement.previousElementSibling as HTMLElement,\n    true,\n    true,\n    true,\n    includeElementsInFocusZones,\n    allowFocusRoot,\n    tabbable,\n  );\n\n  if (siblingMatch) {\n    return siblingMatch;\n  }\n\n  // Check its parent.\n  if (!suppressParentTraversal) {\n    return getPreviousElement(\n      rootElement,\n      currentElement.parentElement,\n      true,\n      false,\n      false,\n      includeElementsInFocusZones,\n      allowFocusRoot,\n      tabbable,\n    );\n  }\n\n  return null;\n}\n\n/**\n * Traverse to find the next focusable element.\n * If tabbable is true, the element must have tabIndex != -1.\n *\n * @public\n * @param checkNode - Include currentElement in search when true.\n */\nexport function getNextElement(\n  rootElement: HTMLElement,\n  currentElement: HTMLElement | null,\n  checkNode?: boolean,\n  suppressParentTraversal?: boolean,\n  suppressChildTraversal?: boolean,\n  includeElementsInFocusZones?: boolean,\n  allowFocusRoot?: boolean,\n  tabbable?: boolean,\n): HTMLElement | null {\n  if (!currentElement || (currentElement === rootElement && suppressChildTraversal && !allowFocusRoot)) {\n    return null;\n  }\n\n  let isCurrentElementVisible = isElementVisible(currentElement);\n\n  // Check the current node, if it's not the first traversal.\n  if (checkNode && isCurrentElementVisible && isElementTabbable(currentElement, tabbable)) {\n    return currentElement;\n  }\n\n  // Check its children.\n  if (\n    !suppressChildTraversal &&\n    isCurrentElementVisible &&\n    (includeElementsInFocusZones || !(isElementFocusZone(currentElement) || isElementFocusSubZone(currentElement)))\n  ) {\n    const childMatch = getNextElement(\n      rootElement,\n      currentElement.firstElementChild as HTMLElement,\n      true,\n      true,\n      false,\n      includeElementsInFocusZones,\n      allowFocusRoot,\n      tabbable,\n    );\n\n    if (childMatch) {\n      return childMatch;\n    }\n  }\n\n  if (currentElement === rootElement) {\n    return null;\n  }\n\n  // Check its sibling.\n  const siblingMatch = getNextElement(\n    rootElement,\n    currentElement.nextElementSibling as HTMLElement,\n    true,\n    true,\n    false,\n    includeElementsInFocusZones,\n    allowFocusRoot,\n    tabbable,\n  );\n\n  if (siblingMatch) {\n    return siblingMatch;\n  }\n\n  if (!suppressParentTraversal) {\n    return getNextElement(\n      rootElement,\n      currentElement.parentElement,\n      false,\n      false,\n      true,\n      includeElementsInFocusZones,\n      allowFocusRoot,\n      tabbable,\n    );\n  }\n\n  return null;\n}\n\n/**\n * Determines if an element is visible.\n *\n * @public\n */\nexport function isElementVisible(element: HTMLElement | undefined | null): boolean {\n  // If the element is not valid, return false.\n  if (!element || !element.getAttribute) {\n    return false;\n  }\n\n  const visibilityAttribute = element.getAttribute(IS_VISIBLE_ATTRIBUTE);\n\n  // If the element is explicitly marked with the visibility attribute, return that value as boolean.\n  if (visibilityAttribute !== null && visibilityAttribute !== undefined) {\n    return visibilityAttribute === 'true';\n  }\n\n  // Fallback to other methods of determining actual visibility.\n  return (\n    element.offsetHeight !== 0 ||\n    element.offsetParent !== null ||\n    // tslint:disable-next-line:no-any\n    (element as any).isVisible === true\n  ); // used as a workaround for testing.\n}\n\n/**\n * Determines if an element can receive focus programmatically or via a mouse click.\n * If checkTabIndex is true, additionally checks to ensure the element can be focused with the tab key,\n * meaning tabIndex != -1.\n *\n * @public\n */\nexport function isElementTabbable(element: HTMLElement, checkTabIndex?: boolean): boolean {\n  // If this element is null or is disabled, it is not considered tabbable.\n  if (!element || (element as HTMLButtonElement).disabled) {\n    return false;\n  }\n\n  let tabIndex = 0;\n  let tabIndexAttributeValue = null;\n\n  if (element && element.getAttribute) {\n    tabIndexAttributeValue = element.getAttribute('tabIndex');\n\n    if (tabIndexAttributeValue) {\n      tabIndex = parseInt(tabIndexAttributeValue, 10);\n    }\n  }\n\n  let isFocusableAttribute = element.getAttribute ? element.getAttribute(IS_FOCUSABLE_ATTRIBUTE) : null;\n  let isTabIndexSet = tabIndexAttributeValue !== null && tabIndex >= 0;\n\n  const result =\n    !!element &&\n    isFocusableAttribute !== 'false' &&\n    (element.tagName === 'A' ||\n      element.tagName === 'BUTTON' ||\n      element.tagName === 'INPUT' ||\n      element.tagName === 'TEXTAREA' ||\n      element.tagName === 'SELECT' ||\n      isFocusableAttribute === 'true' ||\n      isTabIndexSet);\n\n  return checkTabIndex ? tabIndex !== -1 && result : result;\n}\n\n/**\n * Determines if a given element is a focus zone.\n *\n * @public\n */\nexport function isElementFocusZone(element?: HTMLElement): boolean {\n  return !!(element && element.getAttribute && !!element.getAttribute(FOCUSZONE_ID_ATTRIBUTE));\n}\n\n/**\n * Determines if a given element is a focus sub zone.\n *\n * @public\n */\nexport function isElementFocusSubZone(element?: HTMLElement): boolean {\n  return !!(element && element.getAttribute && element.getAttribute(FOCUSZONE_SUB_ATTRIBUTE) === 'true');\n}\n\n/**\n * Determines if an element, or any of its children, contain focus.\n *\n * @public\n */\nexport function doesElementContainFocus(element: HTMLElement): boolean {\n  let document = getDocument(element);\n  let currentActiveElement: HTMLElement | undefined = document && (document.activeElement as HTMLElement);\n  if (currentActiveElement && elementContains(element, currentActiveElement)) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Determines if an, or any of its ancestors, sepcificies that it doesn't want focus to wrap\n * @param element - element to start searching from\n * @param noWrapDataAttribute - the no wrap data attribute to match (either)\n * @returns true if focus should wrap, false otherwise\n */\nexport function shouldWrapFocus(\n  element: HTMLElement,\n  noWrapDataAttribute: 'data-no-vertical-wrap' | 'data-no-horizontal-wrap',\n): boolean {\n  return elementContainsAttribute(element, noWrapDataAttribute) === 'true' ? false : true;\n}\n\nlet targetToFocusOnNextRepaint: HTMLElement | { focus: () => void } | null | undefined = undefined;\n\n/**\n * Sets focus to an element asynchronously. The focus will be set at the next browser repaint,\n * meaning it won't cause any extra recalculations. If more than one focusAsync is called during one frame,\n * only the latest called focusAsync element will actually be focused\n * @param element - The element to focus\n */\nexport function focusAsync(element: HTMLElement | { focus: () => void } | undefined | null): void {\n  if (element) {\n    // An element was already queued to be focused, so replace that one with the new element\n    if (targetToFocusOnNextRepaint) {\n      targetToFocusOnNextRepaint = element;\n      return;\n    }\n\n    targetToFocusOnNextRepaint = element;\n\n    const win = getWindow(element as Element);\n\n    if (win) {\n      // element.focus() is a no-op if the element is no longer in the DOM, meaning this is always safe\n      win.requestAnimationFrame(() => {\n        targetToFocusOnNextRepaint && targetToFocusOnNextRepaint.focus();\n\n        // We are done focusing for this frame, so reset the queued focus element\n        targetToFocusOnNextRepaint = undefined;\n      });\n    }\n  }\n}\n\n/**\n * Finds the closest focusable element via an index path from a parent. See\n * `getElementIndexPath` for getting an index path from an element to a child.\n */\nexport function getFocusableByIndexPath(parent: HTMLElement, path: number[]): HTMLElement | undefined {\n  let element = parent;\n\n  for (const index of path) {\n    const nextChild = element.children[Math.min(index, element.children.length - 1)] as HTMLElement;\n\n    if (!nextChild) {\n      break;\n    }\n    element = nextChild;\n  }\n\n  element =\n    isElementTabbable(element) && isElementVisible(element)\n      ? element\n      : getNextElement(parent, element, true) || getPreviousElement(parent, element)!;\n\n  return element as HTMLElement;\n}\n\n/**\n * Finds the element index path from a parent element to a child element.\n *\n * If you had this node structure: \"A has children [B, C] and C has child D\",\n * the index path from A to D would be [1, 0], or `parent.chidren[1].children[0]`.\n */\nexport function getElementIndexPath(fromElement: HTMLElement, toElement: HTMLElement): number[] {\n  const path: number[] = [];\n\n  while (toElement && fromElement && toElement !== fromElement) {\n    const parent = getParent(toElement, true);\n\n    if (parent === null) {\n      return [];\n    }\n\n    path.unshift(Array.prototype.indexOf.call(parent.children, toElement));\n    toElement = parent;\n  }\n\n  return path;\n}\n","import { findElementRecursive } from './findElementRecursive';\n/**\n * Determines if an element, or any of its ancestors, contain the given attribute\n * @param element - element to start searching at\n * @param attribute - the attribute to search for\n * @returns the value of the first instance found\n */\nexport function elementContainsAttribute(element: HTMLElement, attribute: string): string | null {\n  let elementMatch = findElementRecursive(element, (testElement: HTMLElement) => testElement.hasAttribute(attribute));\n  return elementMatch && elementMatch.getAttribute(attribute);\n}\n","import { KeyCodes } from './KeyCodes';\n\nconst DirectionalKeyCodes: { [key: number]: number } = {\n  [KeyCodes.up]: 1,\n  [KeyCodes.down]: 1,\n  [KeyCodes.left]: 1,\n  [KeyCodes.right]: 1,\n  [KeyCodes.home]: 1,\n  [KeyCodes.end]: 1,\n  [KeyCodes.tab]: 1,\n  [KeyCodes.pageUp]: 1,\n  [KeyCodes.pageDown]: 1,\n};\n\n/**\n * Returns true if the keycode is a directional keyboard key.\n */\nexport function isDirectionalKeyCode(which: number): boolean {\n  return !!DirectionalKeyCodes[which];\n}\n\n/**\n * Adds a keycode to the list of keys that, when pressed, should cause the focus outlines to be visible.\n * This can be used to add global shortcut keys that directionally move from section to section within\n * an app or between focus trap zones.\n */\nexport function addDirectionalKeyCode(which: number): void {\n  DirectionalKeyCodes[which] = 1;\n}\n","import * as React from 'react';\nimport { getWindow } from './dom/getWindow';\nimport { isDirectionalKeyCode } from './keyboard';\nimport { setFocusVisibility } from './setFocusVisibility';\n\n/**\n * Counter for mounted component that uses focus rectangle.\n * We want to cleanup the listners before last component that uses focus rectangle unmounts.\n */\nlet mountCounters = new WeakMap<Window, number>();\n\nfunction setMountCounters(key: Window, delta: number): number {\n  let newValue;\n  const currValue = mountCounters.get(key);\n  if (currValue) {\n    newValue = currValue + delta;\n  } else {\n    newValue = 1;\n  }\n\n  mountCounters.set(key, newValue);\n  return newValue;\n}\n\ntype AppWindow = (Window & { FabricConfig?: { disableFocusRects?: boolean } }) | undefined;\n\n/**\n * Initializes the logic which:\n *\n * 1. Subscribes keydown and mousedown events. (It will only do it once per window,\n *    so it's safe to call this method multiple times.)\n * 2. When the user presses directional keyboard keys, adds the 'ms-Fabric--isFocusVisible' classname\n *    to the document body, removes the 'ms-Fabric-isFocusHidden' classname.\n * 3. When the user clicks a mouse button, adds the 'ms-Fabric-isFocusHidden' classname to the\n *    document body, removes the 'ms-Fabric--isFocusVisible' classname.\n *\n * This logic allows components on the page to conditionally render focus treatments based on\n * the existence of global classnames, which simplifies logic overall.\n *\n * @param rootRef - A Ref object. Focus rectangle can be applied on itself and all its children.\n */\nexport function useFocusRects(rootRef?: React.RefObject<HTMLElement>): void {\n  const win = getWindow(rootRef?.current) as AppWindow;\n\n  React.useEffect(() => {\n    if (!win || win.FabricConfig?.disableFocusRects === true) {\n      return undefined;\n    }\n\n    let count = setMountCounters(win, 1);\n    if (count <= 1) {\n      win.addEventListener('mousedown', _onMouseDown, true);\n      win.addEventListener('pointerdown', _onPointerDown, true);\n      win.addEventListener('keydown', _onKeyDown, true);\n    }\n\n    return () => {\n      if (!win || win.FabricConfig?.disableFocusRects === true) {\n        return;\n      }\n\n      count = setMountCounters(win, -1);\n      if (count === 0) {\n        win.removeEventListener('mousedown', _onMouseDown, true);\n        win.removeEventListener('pointerdown', _onPointerDown, true);\n        win.removeEventListener('keydown', _onKeyDown, true);\n      }\n    };\n  }, [win]);\n}\n\n/**\n * Function Component wrapper which enables calling `useFocusRects` hook.\n * Renders nothing.\n */\nexport const FocusRects: React.FunctionComponent<{ rootRef?: React.RefObject<HTMLElement> }> = props => {\n  useFocusRects(props.rootRef);\n  return null;\n};\n\nfunction _onMouseDown(ev: MouseEvent): void {\n  setFocusVisibility(false, ev.target as Element);\n}\n\nfunction _onPointerDown(ev: PointerEvent): void {\n  if (ev.pointerType !== 'mouse') {\n    setFocusVisibility(false, ev.target as Element);\n  }\n}\n\nfunction _onKeyDown(ev: KeyboardEvent): void {\n  // tslint:disable-next-line:deprecation\n  if (isDirectionalKeyCode(ev.which)) {\n    setFocusVisibility(true, ev.target as Element);\n  }\n}\n","import * as React from 'react';\nimport { Async } from './Async';\nimport { EventGroup } from './EventGroup';\nimport { IDisposable } from './IDisposable';\nimport { ISettingsMap } from './warn/warn';\nimport { warnConditionallyRequiredProps } from './warn/warnConditionallyRequiredProps';\nimport { warnMutuallyExclusive } from './warn/warnMutuallyExclusive';\nimport { warnDeprecations } from './warn/warnDeprecations';\nimport { IRefObject } from './createRef';\nimport { IBaseProps } from './BaseComponent.types';\n\n/**\n * BaseComponent class, which provides basic helpers for all components.\n *\n * @public\n * {@docCategory BaseComponent}\n *\n * @deprecated Do not use. We are moving away from class component.\n */\nexport class BaseComponent<TProps extends IBaseProps = {}, TState = {}> extends React.Component<TProps, TState> {\n  /**\n   * @deprecated Use React's error boundaries instead.\n   */\n  // tslint:disable-next-line:no-any\n  public static onError: (errorMessage?: string, ex?: any) => void;\n\n  /**\n   * Controls whether the componentRef prop will be resolved by this component instance. If you are\n   * implementing a passthrough (higher-order component), you would set this to false and pass through\n   * the props to the inner component, allowing it to resolve the componentRef.\n   */\n  protected _skipComponentRefResolution: boolean;\n\n  // tslint:disable:variable-name\n  private __async: Async;\n  private __events: EventGroup;\n  private __disposables: IDisposable[] | null;\n  private __resolves: { [name: string]: (ref: React.ReactNode) => React.ReactNode };\n  private __className: string;\n  // tslint:enable:variable-name\n\n  /**\n   * BaseComponent constructor\n   * @param props - The props for the component.\n   * @param context - The context for the component.\n   */\n  // tslint:disable-next-line:no-any\n  constructor(props: TProps, context?: any) {\n    super(props, context);\n\n    // tslint:disable-next-line:deprecation\n    _makeAllSafe(this, BaseComponent.prototype, [\n      'componentDidMount',\n      'shouldComponentUpdate',\n      'getSnapshotBeforeUpdate',\n      'render',\n      'componentDidUpdate',\n      'componentWillUnmount',\n    ]);\n  }\n\n  /**\n   * When the component receives props, make sure the componentRef is updated.\n   */\n  public componentDidUpdate(prevProps: TProps, prevState: TState): void {\n    this._updateComponentRef(prevProps, this.props);\n  }\n\n  /**\n   * When the component has mounted, update the componentRef.\n   */\n  public componentDidMount(): void {\n    this._setComponentRef(this.props.componentRef, this);\n  }\n\n  /**\n   * If we have disposables, dispose them automatically on unmount.\n   */\n  public componentWillUnmount(): void {\n    this._setComponentRef(this.props.componentRef, null);\n\n    if (this.__disposables) {\n      for (let i = 0, len = this._disposables.length; i < len; i++) {\n        let disposable = this.__disposables[i];\n\n        if (disposable.dispose) {\n          disposable.dispose();\n        }\n      }\n      this.__disposables = null;\n    }\n  }\n\n  /**\n   * Gets the object's class name.\n   */\n  public get className(): string {\n    if (!this.__className) {\n      let funcNameRegex = /function (.{1,})\\(/;\n      let results = funcNameRegex.exec(this.constructor.toString());\n\n      this.__className = results && results.length > 1 ? results[1] : '';\n    }\n\n    return this.__className;\n  }\n\n  /**\n   * Allows subclasses to push things to this._disposables to be auto disposed.\n   */\n  protected get _disposables(): IDisposable[] {\n    if (!this.__disposables) {\n      this.__disposables = [];\n    }\n    return this.__disposables;\n  }\n\n  /**\n   * Gets the async instance associated with the component, created on demand. The async instance gives\n   * subclasses a way to execute setTimeout/setInterval async calls safely, where the callbacks\n   * will be cleared/ignored automatically after unmounting. The helpers within the async object also\n   * preserve the this pointer so that you don't need to \"bind\" the callbacks.\n   */\n  protected get _async(): Async {\n    if (!this.__async) {\n      this.__async = new Async(this);\n      this._disposables.push(this.__async);\n    }\n\n    return this.__async;\n  }\n\n  /**\n   * Gets the event group instance assocaited with the component, created on demand. The event instance\n   * provides on/off methods for listening to DOM (or regular javascript object) events. The event callbacks\n   * will be automatically disconnected after unmounting. The helpers within the events object also\n   * preserve the this reference so that you don't need to \"bind\" the callbacks.\n   */\n  protected get _events(): EventGroup {\n    if (!this.__events) {\n      this.__events = new EventGroup(this);\n      this._disposables.push(this.__events);\n    }\n\n    return this.__events;\n  }\n\n  /**\n   * Helper to return a memoized ref resolver function.\n   * @param refName - Name of the member to assign the ref to.\n   * @returns A function instance keyed from the given refname.\n   * @deprecated Use `createRef` from React.createRef.\n   */\n  protected _resolveRef(refName: string): (ref: React.ReactNode) => React.ReactNode {\n    if (!this.__resolves) {\n      this.__resolves = {};\n    }\n\n    if (!this.__resolves[refName]) {\n      // tslint:disable-next-line:no-any\n      this.__resolves[refName] = (ref: React.ReactNode) => {\n        // tslint:disable-next-line:no-any\n        return ((this as any)[refName] = ref);\n      };\n    }\n\n    return this.__resolves[refName];\n  }\n\n  /**\n   * Updates the componentRef (by calling it with \"this\" when necessary.)\n   */\n  protected _updateComponentRef(currentProps: IBaseProps, newProps: IBaseProps = {}): void {\n    // currentProps *should* always be defined, but verify that just in case a subclass is manually\n    // calling a lifecycle method with no parameters (which has happened) or other odd usage.\n    if (currentProps && newProps && currentProps.componentRef !== newProps.componentRef) {\n      this._setComponentRef(currentProps.componentRef, null);\n      this._setComponentRef(newProps.componentRef, this);\n    }\n  }\n\n  /**\n   * Warns when a deprecated props are being used.\n   *\n   * @param deprecationMap - The map of deprecations, where key is the prop name and the value is\n   * either null or a replacement prop name.\n   */\n  protected _warnDeprecations(deprecationMap: ISettingsMap<TProps>): void {\n    warnDeprecations(this.className, this.props, deprecationMap);\n  }\n\n  /**\n   * Warns when props which are mutually exclusive with each other are both used.\n   *\n   * @param mutuallyExclusiveMap - The map of mutually exclusive props.\n   */\n  protected _warnMutuallyExclusive(mutuallyExclusiveMap: ISettingsMap<TProps>): void {\n    warnMutuallyExclusive(this.className, this.props, mutuallyExclusiveMap);\n  }\n\n  /**\n   * Warns when props are required if a condition is met.\n   *\n   * @param requiredProps - The name of the props that are required when the condition is met.\n   * @param conditionalPropName - The name of the prop that the condition is based on.\n   * @param condition - Whether the condition is met.\n   */\n  protected _warnConditionallyRequiredProps(\n    requiredProps: string[],\n    conditionalPropName: string,\n    condition: boolean,\n  ): void {\n    warnConditionallyRequiredProps(this.className, this.props, requiredProps, conditionalPropName, condition);\n  }\n\n  private _setComponentRef<TRefInterface>(\n    ref: IRefObject<TRefInterface> | undefined,\n    value: TRefInterface | null,\n  ): void {\n    if (!this._skipComponentRefResolution && ref) {\n      if (typeof ref === 'function') {\n        ref(value);\n      }\n\n      if (typeof ref === 'object') {\n        // tslint:disable:no-any\n        (ref as any).current = value;\n      }\n    }\n  }\n}\n\n/**\n * Helper to override a given method with a wrapper method that can try/catch the original, but also\n * ensures that the BaseComponent's methods are called before the subclass's. This ensures that\n * componentWillUnmount in the base is called and that things in the _disposables array are disposed.\n */\n// tslint:disable-next-line:deprecation\nfunction _makeAllSafe(obj: BaseComponent<{}, {}>, prototype: Object, methodNames: string[]): void {\n  for (let i = 0, len = methodNames.length; i < len; i++) {\n    _makeSafe(obj, prototype, methodNames[i]);\n  }\n}\n\n// tslint:disable-next-line:deprecation\nfunction _makeSafe(obj: BaseComponent<{}, {}>, prototype: Object, methodName: string): void {\n  // tslint:disable:no-any\n  let classMethod = (obj as any)[methodName];\n  let prototypeMethod = (prototype as any)[methodName];\n  // tslint:enable:no-any\n\n  if (classMethod || prototypeMethod) {\n    // tslint:disable-next-line:no-any\n    (obj as any)[methodName] = function(): any {\n      let retVal;\n\n      if (prototypeMethod) {\n        retVal = prototypeMethod.apply(this, arguments);\n      }\n      if (classMethod !== prototypeMethod) {\n        retVal = classMethod.apply(this, arguments);\n      }\n\n      return retVal;\n    };\n  }\n}\n\n/**\n * Simple constant function for returning null, used to render empty templates in JSX.\n *\n * @public\n */\nexport function nullRender(): JSX.Element | null {\n  return null;\n}\n","/** Raises a click event. */\nexport function raiseClick(target: Element): void {\n  const event = createNewEvent('MouseEvents');\n  event.initEvent('click', true, true);\n  target.dispatchEvent(event);\n}\n\nfunction createNewEvent(eventName: string): Event {\n  let event;\n  if (typeof Event === 'function') {\n    // Chrome, Opera, Firefox\n    event = new Event(eventName);\n  } else {\n    // IE\n    event = document.createEvent('Event');\n    event.initEvent(eventName, true, true);\n  }\n  return event;\n}\n","import * as React from 'react';\nimport { FocusZoneDirection, FocusZoneTabbableElements, IFocusZone, IFocusZoneProps } from './FocusZone.types';\nimport {\n  KeyCodes,\n  css,\n  elementContains,\n  getDocument,\n  getElementIndexPath,\n  getFocusableByIndexPath,\n  getId,\n  getNativeProps,\n  getNextElement,\n  getParent,\n  getPreviousElement,\n  getRTL,\n  htmlElementProperties,\n  initializeComponentRef,\n  isElementFocusSubZone,\n  isElementFocusZone,\n  isElementTabbable,\n  raiseClick,\n  shouldWrapFocus,\n  warnDeprecations,\n  portalContainsElement,\n  IPoint,\n  getWindow,\n  findScrollableParent,\n} from '@uifabric/utilities';\nimport { mergeStyles } from '@uifabric/merge-styles';\n\nconst IS_FOCUSABLE_ATTRIBUTE = 'data-is-focusable';\nconst IS_ENTER_DISABLED_ATTRIBUTE = 'data-disable-click-on-enter';\nconst FOCUSZONE_ID_ATTRIBUTE = 'data-focuszone-id';\nconst TABINDEX = 'tabindex';\nconst NO_VERTICAL_WRAP = 'data-no-vertical-wrap';\nconst NO_HORIZONTAL_WRAP = 'data-no-horizontal-wrap';\nconst LARGE_DISTANCE_FROM_CENTER = 999999999;\nconst LARGE_NEGATIVE_DISTANCE_FROM_CENTER = -999999999;\n\nlet focusZoneStyles: string;\n\nconst focusZoneClass: string = 'ms-FocusZone';\n\n// Helper function that will return a class for when the root is focused\nfunction getRootClass(): string {\n  if (!focusZoneStyles) {\n    focusZoneStyles = mergeStyles(\n      {\n        selectors: {\n          ':focus': {\n            outline: 'none',\n          },\n        },\n      },\n      focusZoneClass,\n    );\n  }\n  return focusZoneStyles;\n}\n\nconst _allInstances: {\n  [key: string]: FocusZone;\n} = {};\nconst _outerZones: Set<FocusZone> = new Set();\n\nconst ALLOWED_INPUT_TYPES = ['text', 'number', 'password', 'email', 'tel', 'url', 'search'];\n\nconst ALLOW_VIRTUAL_ELEMENTS = false;\n\nexport class FocusZone extends React.Component<IFocusZoneProps> implements IFocusZone {\n  public static defaultProps: IFocusZoneProps = {\n    isCircularNavigation: false,\n    direction: FocusZoneDirection.bidirectional,\n    preventDefaultWhenHandled: true,\n  };\n\n  private _root: React.RefObject<HTMLElement> = React.createRef();\n  private _id: string;\n\n  /** The most recently focused child element. */\n  private _activeElement: HTMLElement | null;\n\n  /**\n   * The index path to the last focused child element.\n   */\n  private _lastIndexPath: number[] | undefined;\n\n  /**\n   * Flag to define when we've intentionally parked focus on the root element to temporarily\n   * hold focus until items appear within the zone.\n   */\n  private _isParked: boolean;\n\n  /** The child element with tabindex=0. */\n  private _defaultFocusElement: HTMLElement | null;\n  private _focusAlignment: IPoint;\n  private _isInnerZone: boolean;\n  private _parkedTabIndex: string | null | undefined;\n\n  /** Used to allow moving to next focusable element even when we're focusing on a input element when pressing tab */\n  private _processingTabKey: boolean;\n\n  private _windowElement: Window | undefined;\n\n  /** Used for testing purposes only. */\n  public static getOuterZones(): number {\n    return _outerZones.size;\n  }\n\n  constructor(props: IFocusZoneProps) {\n    super(props);\n    // Manage componentRef resolution.\n    initializeComponentRef(this);\n\n    if (process.env.NODE_ENV !== 'production') {\n      warnDeprecations('FocusZone', props, {\n        rootProps: undefined,\n        allowTabKey: 'handleTabKey',\n        elementType: 'as',\n        ariaDescribedBy: 'aria-describedby',\n        ariaLabelledBy: 'aria-labelledby',\n      });\n    }\n\n    this._id = getId('FocusZone');\n\n    this._focusAlignment = {\n      x: 0,\n      y: 0,\n    };\n\n    this._processingTabKey = false;\n  }\n\n  public componentDidMount(): void {\n    const { current: root } = this._root;\n\n    _allInstances[this._id] = this;\n\n    if (root) {\n      this._windowElement = getWindow(root);\n      let parentElement = getParent(root, ALLOW_VIRTUAL_ELEMENTS);\n\n      while (parentElement && parentElement !== this._getDocument().body && parentElement.nodeType === 1) {\n        if (isElementFocusZone(parentElement)) {\n          this._isInnerZone = true;\n          break;\n        }\n        parentElement = getParent(parentElement, ALLOW_VIRTUAL_ELEMENTS);\n      }\n\n      if (!this._isInnerZone) {\n        _outerZones.add(this);\n\n        if (this._windowElement && _outerZones.size === 1) {\n          this._windowElement.addEventListener('keydown', this._onKeyDownCapture, true);\n        }\n      }\n\n      this._root.current && this._root.current.addEventListener('blur', this._onBlur, true);\n\n      // Assign initial tab indexes so that we can set initial focus as appropriate.\n      this._updateTabIndexes();\n\n      if (this.props.defaultActiveElement) {\n        this._activeElement = this._getDocument().querySelector(this.props.defaultActiveElement) as HTMLElement;\n        if (this.props.shouldFocusOnMount) {\n          this.focus();\n        }\n      }\n    }\n  }\n\n  public componentDidUpdate(): void {\n    const { current: root } = this._root;\n    const doc = this._getDocument();\n\n    if (\n      doc &&\n      this._lastIndexPath &&\n      (doc.activeElement === doc.body || doc.activeElement === root || doc.activeElement === null)\n    ) {\n      // The element has been removed after the render, attempt to restore focus.\n      const elementToFocus = getFocusableByIndexPath(root as HTMLElement, this._lastIndexPath);\n\n      if (elementToFocus) {\n        this._setActiveElement(elementToFocus, true);\n        elementToFocus.focus();\n        this._setParkedFocus(false);\n      } else {\n        // We had a focus path to restore, but now that path is unresolvable. Park focus\n        // on the container until we can try again.\n        this._setParkedFocus(true);\n      }\n    }\n  }\n\n  public componentWillUnmount(): void {\n    delete _allInstances[this._id];\n\n    if (!this._isInnerZone) {\n      _outerZones.delete(this);\n\n      // If this is the last outer zone, remove the keydown listener.\n      if (this._windowElement && _outerZones.size === 0) {\n        this._windowElement.removeEventListener('keydown', this._onKeyDownCapture, true);\n      }\n    }\n\n    if (this._root.current) {\n      this._root.current.removeEventListener('blur', this._onBlur, true);\n    }\n\n    this._activeElement = null;\n    this._defaultFocusElement = null;\n  }\n\n  public render(): React.ReactNode {\n    // tslint:disable:deprecation\n    const { rootProps, ariaDescribedBy, ariaLabelledBy, className } = this.props;\n    const divProps = getNativeProps(this.props, htmlElementProperties);\n\n    const Tag = this.props.as || this.props.elementType || 'div';\n\n    // Note, right before rendering/reconciling proceeds, we need to record if focus\n    // was in the zone before the update. This helper will track this and, if focus\n    // was actually in the zone, what the index path to the element is at this time.\n    // Then, later in componentDidUpdate, we can evaluate if we need to restore it in\n    // the case the element was removed.\n    this._evaluateFocusBeforeRender();\n\n    return (\n      <Tag\n        aria-labelledby={ariaLabelledBy}\n        aria-describedby={ariaDescribedBy}\n        {...divProps}\n        {\n          // root props has been deprecated and should get removed.\n          // it needs to be marked as \"any\" since root props expects a div element, but really Tag can\n          // be any native element so typescript rightly flags this as a problem.\n          // tslint:disable-next-line:no-any\n          ...(rootProps as any)\n        }\n        // Once the getClassName correctly memoizes inputs this should\n        // be replaced so that className is passed to getRootClass and is included there so\n        // the class names will always be in the same order.\n        className={css(getRootClass(), className)}\n        ref={this._root}\n        data-focuszone-id={this._id}\n        onKeyDown={this._onKeyDown}\n        onFocus={this._onFocus}\n        onMouseDownCapture={this._onMouseDown}\n      >\n        {this.props.children}\n      </Tag>\n    );\n  }\n\n  /**\n   * Sets focus to the first tabbable item in the zone.\n   * @param forceIntoFirstElement - If true, focus will be forced into the first element, even\n   * if focus is already in the focus zone.\n   * @returns True if focus could be set to an active element, false if no operation was taken.\n   */\n  public focus(forceIntoFirstElement: boolean = false): boolean {\n    if (this._root.current) {\n      if (\n        !forceIntoFirstElement &&\n        this._root.current.getAttribute(IS_FOCUSABLE_ATTRIBUTE) === 'true' &&\n        this._isInnerZone\n      ) {\n        const ownerZoneElement = this._getOwnerZone(this._root.current) as HTMLElement;\n\n        if (ownerZoneElement !== this._root.current) {\n          const ownerZone = _allInstances[ownerZoneElement.getAttribute(FOCUSZONE_ID_ATTRIBUTE) as string];\n\n          return !!ownerZone && ownerZone.focusElement(this._root.current);\n        }\n\n        return false;\n      } else if (\n        !forceIntoFirstElement &&\n        this._activeElement &&\n        elementContains(this._root.current, this._activeElement) &&\n        isElementTabbable(this._activeElement)\n      ) {\n        this._activeElement.focus();\n        return true;\n      } else {\n        const firstChild = this._root.current.firstChild as HTMLElement;\n\n        return this.focusElement(getNextElement(this._root.current, firstChild, true) as HTMLElement);\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Sets focus to the last tabbable item in the zone.\n   * @returns True if focus could be set to an active element, false if no operation was taken.\n   */\n  public focusLast(): boolean {\n    if (this._root.current) {\n      const lastChild = this._root.current && (this._root.current.lastChild as HTMLElement | null);\n\n      return this.focusElement(getPreviousElement(this._root.current, lastChild, true, true, true) as HTMLElement);\n    }\n\n    return false;\n  }\n\n  /**\n   * Sets focus to a specific child element within the zone. This can be used in conjunction with\n   * onBeforeFocus to created delayed focus scenarios (like animate the scroll position to the correct\n   * location and then focus.)\n   * @param element - The child element within the zone to focus.\n   * @returns True if focus could be set to an active element, false if no operation was taken.\n   */\n  public focusElement(element: HTMLElement): boolean {\n    const { onBeforeFocus } = this.props;\n\n    if (onBeforeFocus && !onBeforeFocus(element)) {\n      return false;\n    }\n\n    if (element) {\n      // when we Set focus to a specific child, we should recalculate the alignment depend on its position\n      this._setActiveElement(element);\n      if (this._activeElement) {\n        this._activeElement.focus();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Forces horizontal alignment in the context of vertical arrowing to use specific point as the reference,\n   * rather than a center based on the last horizontal motion.\n   * @param point - the new reference point.\n   */\n  public setFocusAlignment(point: IPoint): void {\n    this._focusAlignment = point;\n  }\n\n  private _evaluateFocusBeforeRender(): void {\n    const { current: root } = this._root;\n\n    const doc = this._getDocument();\n    if (doc) {\n      const focusedElement = doc.activeElement as HTMLElement;\n\n      // Only update the index path if we are not parked on the root.\n      if (focusedElement !== root) {\n        const shouldRestoreFocus = elementContains(root, focusedElement, false);\n        this._lastIndexPath = shouldRestoreFocus ? getElementIndexPath(root as HTMLElement, focusedElement) : undefined;\n      }\n    }\n  }\n\n  private _onFocus = (ev: React.FocusEvent<HTMLElement>): void => {\n    if (this._portalContainsElement(ev.target as HTMLElement)) {\n      // If the event target is inside a portal do not process the event.\n      return;\n    }\n\n    const { onActiveElementChanged, doNotAllowFocusEventToPropagate, onFocusNotification } = this.props;\n    const isImmediateDescendant = this._isImmediateDescendantOfZone(ev.target as HTMLElement);\n    let newActiveElement: HTMLElement | undefined;\n\n    if (onFocusNotification) {\n      onFocusNotification();\n    }\n\n    if (isImmediateDescendant) {\n      newActiveElement = ev.target as HTMLElement;\n    } else {\n      let parentElement = ev.target as HTMLElement;\n\n      while (parentElement && parentElement !== this._root.current) {\n        if (isElementTabbable(parentElement) && this._isImmediateDescendantOfZone(parentElement)) {\n          newActiveElement = parentElement;\n          break;\n        }\n        parentElement = getParent(parentElement, ALLOW_VIRTUAL_ELEMENTS) as HTMLElement;\n      }\n    }\n\n    const initialElementFocused = !this._activeElement;\n\n    // If the new active element is a child of this zone and received focus,\n    // update alignment an immediate descendant\n    if (newActiveElement && newActiveElement !== this._activeElement) {\n      if (isImmediateDescendant || initialElementFocused) {\n        this._setFocusAlignment(newActiveElement, true, true);\n      }\n\n      this._activeElement = newActiveElement;\n\n      if (initialElementFocused) {\n        this._updateTabIndexes();\n      }\n    }\n\n    if (onActiveElementChanged) {\n      onActiveElementChanged(this._activeElement as HTMLElement, ev);\n    }\n\n    if (doNotAllowFocusEventToPropagate) {\n      ev.stopPropagation();\n    }\n  };\n\n  /**\n   * When focus is in the zone at render time but then all focusable elements are removed,\n   * we \"park\" focus temporarily on the root. Once we update with focusable children, we restore\n   * focus to the closest path from previous. If the user tabs away from the parked container,\n   * we restore focusability to the pre-parked state.\n   */\n  private _setParkedFocus(isParked: boolean): void {\n    const { current: root } = this._root;\n\n    if (root && this._isParked !== isParked) {\n      this._isParked = isParked;\n\n      if (isParked) {\n        if (!this.props.allowFocusRoot) {\n          this._parkedTabIndex = root.getAttribute('tabindex');\n          root.setAttribute('tabindex', '-1');\n        }\n        root.focus();\n      } else if (!this.props.allowFocusRoot) {\n        if (this._parkedTabIndex) {\n          root.setAttribute('tabindex', this._parkedTabIndex);\n          this._parkedTabIndex = undefined;\n        } else {\n          root.removeAttribute('tabindex');\n        }\n      }\n    }\n  }\n\n  private _onBlur = (): void => {\n    this._setParkedFocus(false);\n  };\n\n  /**\n   * Handle global tab presses so that we can patch tabindexes on the fly.\n   */\n  private _onKeyDownCapture = (ev: KeyboardEvent): void => {\n    if (ev.which === KeyCodes.tab) {\n      _outerZones.forEach((zone: FocusZone) => zone._updateTabIndexes());\n    }\n  };\n\n  private _onMouseDown = (ev: React.MouseEvent<HTMLElement>): void => {\n    if (this._portalContainsElement(ev.target as HTMLElement)) {\n      // If the event target is inside a portal do not process the event.\n      return;\n    }\n\n    const { disabled } = this.props;\n\n    if (disabled) {\n      return;\n    }\n\n    let target = ev.target as HTMLElement;\n    const path = [];\n\n    while (target && target !== this._root.current) {\n      path.push(target);\n      target = getParent(target, ALLOW_VIRTUAL_ELEMENTS) as HTMLElement;\n    }\n\n    while (path.length) {\n      target = path.pop() as HTMLElement;\n\n      if (target && isElementTabbable(target)) {\n        this._setActiveElement(target, true);\n      }\n\n      if (isElementFocusZone(target)) {\n        // Stop here since the focus zone will take care of its own children.\n        break;\n      }\n    }\n  };\n\n  private _setActiveElement(element: HTMLElement, forceAlignment?: boolean): void {\n    const previousActiveElement = this._activeElement;\n\n    this._activeElement = element;\n\n    if (previousActiveElement) {\n      if (isElementFocusZone(previousActiveElement)) {\n        this._updateTabIndexes(previousActiveElement);\n      }\n\n      previousActiveElement.tabIndex = -1;\n    }\n\n    if (this._activeElement) {\n      if (!this._focusAlignment || forceAlignment) {\n        this._setFocusAlignment(element, true, true);\n      }\n\n      this._activeElement.tabIndex = 0;\n    }\n  }\n\n  private _preventDefaultWhenHandled(ev: React.KeyboardEvent<HTMLElement>): void {\n    this.props.preventDefaultWhenHandled && ev.preventDefault();\n  }\n\n  /**\n   * Handle the keystrokes.\n   */\n  private _onKeyDown = (ev: React.KeyboardEvent<HTMLElement>): boolean | undefined => {\n    if (this._portalContainsElement(ev.target as HTMLElement)) {\n      // If the event target is inside a portal do not process the event.\n      return;\n    }\n\n    const { direction, disabled, isInnerZoneKeystroke } = this.props;\n\n    if (disabled) {\n      return;\n    }\n\n    if (this.props.onKeyDown) {\n      this.props.onKeyDown(ev);\n    }\n\n    // If the default has been prevented, do not process keyboard events.\n    if (ev.isDefaultPrevented()) {\n      return;\n    }\n\n    if (this._getDocument().activeElement === this._root.current && this._isInnerZone) {\n      // If this element has focus, it is being controlled by a parent.\n      // Ignore the keystroke.\n      return;\n    }\n\n    if (\n      isInnerZoneKeystroke &&\n      isInnerZoneKeystroke(ev) &&\n      this._isImmediateDescendantOfZone(ev.target as HTMLElement)\n    ) {\n      // Try to focus\n      const innerZone = this._getFirstInnerZone();\n\n      if (innerZone) {\n        if (!innerZone.focus(true)) {\n          return;\n        }\n      } else if (isElementFocusSubZone(ev.target as HTMLElement)) {\n        if (\n          !this.focusElement(\n            getNextElement(\n              ev.target as HTMLElement,\n              (ev.target as HTMLElement).firstChild as HTMLElement,\n              true,\n            ) as HTMLElement,\n          )\n        ) {\n          return;\n        }\n      } else {\n        return;\n      }\n    } else if (ev.altKey) {\n      return;\n    } else {\n      switch (ev.which) {\n        case KeyCodes.space:\n          if (this._tryInvokeClickForFocusable(ev.target as HTMLElement)) {\n            break;\n          }\n          return;\n\n        case KeyCodes.left:\n          if (direction !== FocusZoneDirection.vertical) {\n            this._preventDefaultWhenHandled(ev);\n            if (this._moveFocusLeft()) {\n              break;\n            }\n          }\n          return;\n\n        case KeyCodes.right:\n          if (direction !== FocusZoneDirection.vertical) {\n            this._preventDefaultWhenHandled(ev);\n            if (this._moveFocusRight()) {\n              break;\n            }\n          }\n          return;\n\n        case KeyCodes.up:\n          if (direction !== FocusZoneDirection.horizontal) {\n            this._preventDefaultWhenHandled(ev);\n            if (this._moveFocusUp()) {\n              break;\n            }\n          }\n          return;\n\n        case KeyCodes.down:\n          if (direction !== FocusZoneDirection.horizontal) {\n            this._preventDefaultWhenHandled(ev);\n            if (this._moveFocusDown()) {\n              break;\n            }\n          }\n          return;\n        case KeyCodes.pageDown:\n          if (this._moveFocusPaging(true)) {\n            break;\n          }\n          return;\n        case KeyCodes.pageUp:\n          if (this._moveFocusPaging(false)) {\n            break;\n          }\n          return;\n\n        case KeyCodes.tab:\n          if (\n            this.props.allowTabKey ||\n            this.props.handleTabKey === FocusZoneTabbableElements.all ||\n            (this.props.handleTabKey === FocusZoneTabbableElements.inputOnly &&\n              this._isElementInput(ev.target as HTMLElement))\n          ) {\n            let focusChanged = false;\n            this._processingTabKey = true;\n            if (\n              direction === FocusZoneDirection.vertical ||\n              !this._shouldWrapFocus(this._activeElement as HTMLElement, NO_HORIZONTAL_WRAP)\n            ) {\n              focusChanged = ev.shiftKey ? this._moveFocusUp() : this._moveFocusDown();\n            } else {\n              const tabWithDirection = getRTL() ? !ev.shiftKey : ev.shiftKey;\n              focusChanged = tabWithDirection ? this._moveFocusLeft() : this._moveFocusRight();\n            }\n            this._processingTabKey = false;\n            if (focusChanged) {\n              break;\n            }\n          }\n          return;\n\n        case KeyCodes.home:\n          if (\n            this._isElementInput(ev.target as HTMLElement) &&\n            !this._shouldInputLoseFocus(ev.target as HTMLInputElement, false)\n          ) {\n            return false;\n          }\n          const firstChild = this._root.current && (this._root.current.firstChild as HTMLElement | null);\n          if (\n            this._root.current &&\n            firstChild &&\n            this.focusElement(getNextElement(this._root.current, firstChild, true) as HTMLElement)\n          ) {\n            break;\n          }\n          return;\n\n        case KeyCodes.end:\n          if (\n            this._isElementInput(ev.target as HTMLElement) &&\n            !this._shouldInputLoseFocus(ev.target as HTMLInputElement, true)\n          ) {\n            return false;\n          }\n\n          const lastChild = this._root.current && (this._root.current.lastChild as HTMLElement | null);\n          if (\n            this._root.current &&\n            this.focusElement(getPreviousElement(this._root.current, lastChild, true, true, true) as HTMLElement)\n          ) {\n            break;\n          }\n          return;\n\n        case KeyCodes.enter:\n          if (this._tryInvokeClickForFocusable(ev.target as HTMLElement)) {\n            break;\n          }\n          return;\n\n        default:\n          return;\n      }\n    }\n\n    ev.preventDefault();\n    ev.stopPropagation();\n  };\n\n  /**\n   * Walk up the dom try to find a focusable element.\n   */\n  private _tryInvokeClickForFocusable(target: HTMLElement): boolean {\n    if (target === this._root.current) {\n      return false;\n    }\n\n    do {\n      if (\n        target.tagName === 'BUTTON' ||\n        target.tagName === 'A' ||\n        target.tagName === 'INPUT' ||\n        target.tagName === 'TEXTAREA'\n      ) {\n        return false;\n      }\n\n      if (\n        this._isImmediateDescendantOfZone(target) &&\n        target.getAttribute(IS_FOCUSABLE_ATTRIBUTE) === 'true' &&\n        target.getAttribute(IS_ENTER_DISABLED_ATTRIBUTE) !== 'true'\n      ) {\n        raiseClick(target);\n        return true;\n      }\n\n      target = getParent(target, ALLOW_VIRTUAL_ELEMENTS) as HTMLElement;\n    } while (target !== this._root.current);\n\n    return false;\n  }\n\n  /**\n   * Traverse to find first child zone.\n   */\n  private _getFirstInnerZone(rootElement?: HTMLElement | null): FocusZone | null {\n    rootElement = rootElement || this._activeElement || this._root.current;\n\n    if (!rootElement) {\n      return null;\n    }\n\n    if (isElementFocusZone(rootElement)) {\n      return _allInstances[rootElement.getAttribute(FOCUSZONE_ID_ATTRIBUTE) as string];\n    }\n\n    let child = rootElement.firstElementChild as HTMLElement | null;\n\n    while (child) {\n      if (isElementFocusZone(child)) {\n        return _allInstances[child.getAttribute(FOCUSZONE_ID_ATTRIBUTE) as string];\n      }\n      const match = this._getFirstInnerZone(child);\n\n      if (match) {\n        return match;\n      }\n\n      child = child.nextElementSibling as HTMLElement | null;\n    }\n\n    return null;\n  }\n\n  private _moveFocus(\n    isForward: boolean,\n    getDistanceFromCenter: (activeRect: ClientRect, targetRect: ClientRect) => number,\n    ev?: Event,\n    useDefaultWrap: boolean = true,\n  ): boolean {\n    let element = this._activeElement;\n    let candidateDistance = -1;\n    let candidateElement: HTMLElement | undefined = undefined;\n    let changedFocus = false;\n    const isBidirectional = this.props.direction === FocusZoneDirection.bidirectional;\n\n    if (!element || !this._root.current) {\n      return false;\n    }\n\n    if (this._isElementInput(element)) {\n      if (!this._shouldInputLoseFocus(element as HTMLInputElement, isForward)) {\n        return false;\n      }\n    }\n\n    const activeRect = isBidirectional ? element.getBoundingClientRect() : null;\n\n    do {\n      element = (isForward\n        ? getNextElement(this._root.current, element)\n        : getPreviousElement(this._root.current, element)) as HTMLElement;\n\n      if (isBidirectional) {\n        if (element) {\n          const targetRect = element.getBoundingClientRect();\n          const elementDistance = getDistanceFromCenter(activeRect as ClientRect, targetRect);\n\n          if (elementDistance === -1 && candidateDistance === -1) {\n            candidateElement = element;\n            break;\n          }\n\n          if (elementDistance > -1 && (candidateDistance === -1 || elementDistance < candidateDistance)) {\n            candidateDistance = elementDistance;\n            candidateElement = element;\n          }\n\n          if (candidateDistance >= 0 && elementDistance < 0) {\n            break;\n          }\n        }\n      } else {\n        candidateElement = element;\n        break;\n      }\n    } while (element);\n\n    // Focus the closest candidate\n    if (candidateElement && candidateElement !== this._activeElement) {\n      changedFocus = true;\n      this.focusElement(candidateElement);\n    } else if (this.props.isCircularNavigation && useDefaultWrap) {\n      if (isForward) {\n        return this.focusElement(\n          getNextElement(this._root.current, this._root.current.firstElementChild as HTMLElement, true) as HTMLElement,\n        );\n      } else {\n        return this.focusElement(\n          getPreviousElement(\n            this._root.current,\n            this._root.current.lastElementChild as HTMLElement,\n            true,\n            true,\n            true,\n          ) as HTMLElement,\n        );\n      }\n    }\n\n    return changedFocus;\n  }\n\n  private _moveFocusDown(): boolean {\n    let targetTop = -1;\n    const leftAlignment = this._focusAlignment.x;\n\n    if (\n      this._moveFocus(true, (activeRect: ClientRect, targetRect: ClientRect) => {\n        let distance = -1;\n        // ClientRect values can be floats that differ by very small fractions of a decimal.\n        // If the difference between top and bottom are within a pixel then we should treat\n        // them as equivalent by using Math.floor. For instance 5.2222 and 5.222221 should be equivalent,\n        // but without Math.Floor they will be handled incorrectly.\n        const targetRectTop = Math.floor(targetRect.top);\n        const activeRectBottom = Math.floor(activeRect.bottom);\n\n        if (targetRectTop < activeRectBottom) {\n          if (!this._shouldWrapFocus(this._activeElement as HTMLElement, NO_VERTICAL_WRAP)) {\n            return LARGE_NEGATIVE_DISTANCE_FROM_CENTER;\n          }\n\n          return LARGE_DISTANCE_FROM_CENTER;\n        }\n\n        if ((targetTop === -1 && targetRectTop >= activeRectBottom) || targetRectTop === targetTop) {\n          targetTop = targetRectTop;\n          if (leftAlignment >= targetRect.left && leftAlignment <= targetRect.left + targetRect.width) {\n            distance = 0;\n          } else {\n            distance = Math.abs(targetRect.left + targetRect.width / 2 - leftAlignment);\n          }\n        }\n\n        return distance;\n      })\n    ) {\n      this._setFocusAlignment(this._activeElement as HTMLElement, false, true);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _moveFocusUp(): boolean {\n    let targetTop = -1;\n    const leftAlignment = this._focusAlignment.x;\n\n    if (\n      this._moveFocus(false, (activeRect: ClientRect, targetRect: ClientRect) => {\n        let distance = -1;\n        // ClientRect values can be floats that differ by very small fractions of a decimal.\n        // If the difference between top and bottom are within a pixel then we should treat\n        // them as equivalent by using Math.floor. For instance 5.2222 and 5.222221 should be equivalent,\n        // but without Math.Floor they will be handled incorrectly.\n        const targetRectBottom = Math.floor(targetRect.bottom);\n        const targetRectTop = Math.floor(targetRect.top);\n        const activeRectTop = Math.floor(activeRect.top);\n\n        if (targetRectBottom > activeRectTop) {\n          if (!this._shouldWrapFocus(this._activeElement as HTMLElement, NO_VERTICAL_WRAP)) {\n            return LARGE_NEGATIVE_DISTANCE_FROM_CENTER;\n          }\n          return LARGE_DISTANCE_FROM_CENTER;\n        }\n\n        if ((targetTop === -1 && targetRectBottom <= activeRectTop) || targetRectTop === targetTop) {\n          targetTop = targetRectTop;\n          if (leftAlignment >= targetRect.left && leftAlignment <= targetRect.left + targetRect.width) {\n            distance = 0;\n          } else {\n            distance = Math.abs(targetRect.left + targetRect.width / 2 - leftAlignment);\n          }\n        }\n\n        return distance;\n      })\n    ) {\n      this._setFocusAlignment(this._activeElement as HTMLElement, false, true);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _moveFocusLeft(): boolean {\n    const shouldWrap = this._shouldWrapFocus(this._activeElement as HTMLElement, NO_HORIZONTAL_WRAP);\n    if (\n      this._moveFocus(\n        getRTL(),\n        (activeRect: ClientRect, targetRect: ClientRect) => {\n          let distance = -1;\n          let topBottomComparison;\n\n          if (getRTL()) {\n            // When in RTL, this comparison should be the same as the one in _moveFocusRight for LTR.\n            // Going left at a leftmost rectangle will go down a line instead of up a line like in LTR.\n            // This is important, because we want to be comparing the top of the target rect\n            // with the bottom of the active rect.\n            topBottomComparison = parseFloat(targetRect.top.toFixed(3)) < parseFloat(activeRect.bottom.toFixed(3));\n          } else {\n            topBottomComparison = parseFloat(targetRect.bottom.toFixed(3)) > parseFloat(activeRect.top.toFixed(3));\n          }\n\n          if (\n            topBottomComparison &&\n            targetRect.right <= activeRect.right &&\n            this.props.direction !== FocusZoneDirection.vertical\n          ) {\n            distance = activeRect.right - targetRect.right;\n          } else {\n            if (!shouldWrap) {\n              distance = LARGE_NEGATIVE_DISTANCE_FROM_CENTER;\n            }\n          }\n\n          return distance;\n        },\n        undefined /*ev*/,\n        shouldWrap,\n      )\n    ) {\n      this._setFocusAlignment(this._activeElement as HTMLElement, true, false);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _moveFocusRight(): boolean {\n    const shouldWrap = this._shouldWrapFocus(this._activeElement as HTMLElement, NO_HORIZONTAL_WRAP);\n    if (\n      this._moveFocus(\n        !getRTL(),\n        (activeRect: ClientRect, targetRect: ClientRect) => {\n          let distance = -1;\n          let topBottomComparison;\n\n          if (getRTL()) {\n            // When in RTL, this comparison should be the same as the one in _moveFocusLeft for LTR.\n            // Going right at a rightmost rectangle will go up a line instead of down a line like in LTR.\n            // This is important, because we want to be comparing the bottom of the target rect\n            // with the top of the active rect.\n            topBottomComparison = parseFloat(targetRect.bottom.toFixed(3)) > parseFloat(activeRect.top.toFixed(3));\n          } else {\n            topBottomComparison = parseFloat(targetRect.top.toFixed(3)) < parseFloat(activeRect.bottom.toFixed(3));\n          }\n\n          if (\n            topBottomComparison &&\n            targetRect.left >= activeRect.left &&\n            this.props.direction !== FocusZoneDirection.vertical\n          ) {\n            distance = targetRect.left - activeRect.left;\n          } else if (!shouldWrap) {\n            distance = LARGE_NEGATIVE_DISTANCE_FROM_CENTER;\n          }\n\n          return distance;\n        },\n        undefined /*ev*/,\n        shouldWrap,\n      )\n    ) {\n      this._setFocusAlignment(this._activeElement as HTMLElement, true, false);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _getHorizontalDistanceFromCenter = (\n    isForward: boolean,\n    activeRect: ClientRect,\n    targetRect: ClientRect,\n  ): number => {\n    const leftAlignment = this._focusAlignment.x;\n    // ClientRect values can be floats that differ by very small fractions of a decimal.\n    // If the difference between top and bottom are within a pixel then we should treat\n    // them as equivalent by using Math.floor. For instance 5.2222 and 5.222221 should be equivalent,\n    // but without Math.Floor they will be handled incorrectly.\n    const targetRectTop = Math.floor(targetRect.top);\n    const activeRectBottom = Math.floor(activeRect.bottom);\n    const targetRectBottom = Math.floor(targetRect.bottom);\n    const activeRectTop = Math.floor(activeRect.top);\n    const isValidCandidateOnpagingDown = isForward && targetRectTop > activeRectBottom;\n    const isValidCandidateOnpagingUp = !isForward && targetRectBottom < activeRectTop;\n\n    if (isValidCandidateOnpagingDown || isValidCandidateOnpagingUp) {\n      if (leftAlignment >= targetRect.left && leftAlignment <= targetRect.left + targetRect.width) {\n        return 0;\n      }\n      return Math.abs(targetRect.left + targetRect.width / 2 - leftAlignment);\n    } else {\n      if (!this._shouldWrapFocus(this._activeElement as HTMLElement, NO_VERTICAL_WRAP)) {\n        return LARGE_NEGATIVE_DISTANCE_FROM_CENTER;\n      }\n      return LARGE_DISTANCE_FROM_CENTER;\n    }\n  };\n\n  private _moveFocusPaging(isForward: boolean, useDefaultWrap: boolean = true): boolean {\n    if (useDefaultWrap === void 0) {\n      useDefaultWrap = true;\n    }\n    let element = this._activeElement;\n    if (!element || !this._root.current) {\n      return false;\n    }\n    if (this._isElementInput(element)) {\n      if (!this._shouldInputLoseFocus(element as HTMLInputElement, isForward)) {\n        return false;\n      }\n    }\n    const scrollableParent = findScrollableParent(element);\n    if (!scrollableParent) {\n      return false;\n    }\n    let candidateDistance = -1;\n    let candidateElement = undefined;\n    let targetTop = -1;\n    let targetBottom = -1;\n    const pagesize = scrollableParent.clientHeight;\n    const activeRect = element.getBoundingClientRect();\n    do {\n      element = isForward\n        ? getNextElement(this._root.current, element)\n        : getPreviousElement(this._root.current, element);\n      if (element) {\n        const targetRect = element.getBoundingClientRect();\n        const targetRectTop = Math.floor(targetRect.top);\n        const activeRectBottom = Math.floor(activeRect.bottom);\n        const targetRectBottom = Math.floor(targetRect.bottom);\n        const activeRectTop = Math.floor(activeRect.top);\n        const elementDistance = this._getHorizontalDistanceFromCenter(isForward, activeRect, targetRect);\n        const isElementPassedPageSizeOnPagingDown = isForward && targetRectTop > activeRectBottom + pagesize;\n        const isElementPassedPageSizeOnPagingUp = !isForward && targetRectBottom < activeRectTop - pagesize;\n\n        if (isElementPassedPageSizeOnPagingDown || isElementPassedPageSizeOnPagingUp) {\n          break;\n        }\n        if (elementDistance > -1) {\n          // for paging down\n          if (isForward && targetRectTop > targetTop) {\n            targetTop = targetRectTop;\n            candidateDistance = elementDistance;\n            candidateElement = element;\n          } else if (!isForward && targetRectBottom < targetBottom) {\n            // for paging up\n            targetBottom = targetRectBottom;\n            candidateDistance = elementDistance;\n            candidateElement = element;\n          } else {\n            if (candidateDistance === -1 || elementDistance <= candidateDistance) {\n              candidateDistance = elementDistance;\n              candidateElement = element;\n            }\n          }\n        }\n      }\n    } while (element);\n\n    let changedFocus = false;\n    // Focus the closest candidate\n    if (candidateElement && candidateElement !== this._activeElement) {\n      changedFocus = true;\n      this.focusElement(candidateElement);\n      this._setFocusAlignment(candidateElement as HTMLElement, false, true);\n    } else if (this.props.isCircularNavigation && useDefaultWrap) {\n      if (isForward) {\n        return this.focusElement(\n          getNextElement(this._root.current, this._root.current.firstElementChild as HTMLElement, true) as HTMLElement,\n        );\n      }\n      return this.focusElement(\n        getPreviousElement(\n          this._root.current,\n          this._root.current.lastElementChild as HTMLElement,\n          true,\n          true,\n          true,\n        ) as HTMLElement,\n      );\n    }\n    return changedFocus;\n  }\n\n  private _setFocusAlignment(element: HTMLElement, isHorizontal?: boolean, isVertical?: boolean): void {\n    if (\n      this.props.direction === FocusZoneDirection.bidirectional &&\n      (!this._focusAlignment || isHorizontal || isVertical)\n    ) {\n      const rect = element.getBoundingClientRect();\n      const left = rect.left + rect.width / 2;\n      const top = rect.top + rect.height / 2;\n\n      if (!this._focusAlignment) {\n        this._focusAlignment = {\n          x: left,\n          y: top,\n        };\n      }\n\n      if (isHorizontal) {\n        this._focusAlignment.x = left;\n      }\n\n      if (isVertical) {\n        this._focusAlignment.y = top;\n      }\n    }\n  }\n\n  private _isImmediateDescendantOfZone(element?: HTMLElement): boolean {\n    return this._getOwnerZone(element) === this._root.current;\n  }\n\n  private _getOwnerZone(element?: HTMLElement): HTMLElement | null {\n    let parentElement = getParent(element as HTMLElement, ALLOW_VIRTUAL_ELEMENTS);\n\n    while (parentElement && parentElement !== this._root.current && parentElement !== this._getDocument().body) {\n      if (isElementFocusZone(parentElement)) {\n        return parentElement;\n      }\n\n      parentElement = getParent(parentElement, ALLOW_VIRTUAL_ELEMENTS);\n    }\n\n    return parentElement;\n  }\n\n  private _updateTabIndexes(element?: HTMLElement): void {\n    if (!element && this._root.current) {\n      this._defaultFocusElement = null;\n      element = this._root.current;\n      if (this._activeElement && !elementContains(element, this._activeElement)) {\n        this._activeElement = null;\n      }\n    }\n\n    // If active element changes state to disabled, set it to null.\n    // Otherwise, we lose keyboard accessibility to other elements in focus zone.\n    if (this._activeElement && !isElementTabbable(this._activeElement)) {\n      this._activeElement = null;\n    }\n\n    const childNodes = element && element.children;\n\n    for (let childIndex = 0; childNodes && childIndex < childNodes.length; childIndex++) {\n      const child = childNodes[childIndex] as HTMLElement;\n\n      if (!isElementFocusZone(child)) {\n        // If the item is explicitly set to not be focusable then TABINDEX needs to be set to -1.\n        if (child.getAttribute && child.getAttribute(IS_FOCUSABLE_ATTRIBUTE) === 'false') {\n          child.setAttribute(TABINDEX, '-1');\n        }\n\n        if (isElementTabbable(child)) {\n          if (this.props.disabled) {\n            child.setAttribute(TABINDEX, '-1');\n          } else if (\n            !this._isInnerZone &&\n            ((!this._activeElement && !this._defaultFocusElement) || this._activeElement === child)\n          ) {\n            this._defaultFocusElement = child;\n            if (child.getAttribute(TABINDEX) !== '0') {\n              child.setAttribute(TABINDEX, '0');\n            }\n          } else if (child.getAttribute(TABINDEX) !== '-1') {\n            child.setAttribute(TABINDEX, '-1');\n          }\n        } else if (child.tagName === 'svg' && child.getAttribute('focusable') !== 'false') {\n          // Disgusting IE hack. Sad face.\n          child.setAttribute('focusable', 'false');\n        }\n      } else if (child.getAttribute(IS_FOCUSABLE_ATTRIBUTE) === 'true') {\n        if (\n          !this._isInnerZone &&\n          ((!this._activeElement && !this._defaultFocusElement) || this._activeElement === child)\n        ) {\n          this._defaultFocusElement = child;\n          if (child.getAttribute(TABINDEX) !== '0') {\n            child.setAttribute(TABINDEX, '0');\n          }\n        } else if (child.getAttribute(TABINDEX) !== '-1') {\n          child.setAttribute(TABINDEX, '-1');\n        }\n      }\n\n      this._updateTabIndexes(child);\n    }\n  }\n\n  private _isElementInput(element: HTMLElement): boolean {\n    if (\n      element &&\n      element.tagName &&\n      (element.tagName.toLowerCase() === 'input' || element.tagName.toLowerCase() === 'textarea')\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  private _shouldInputLoseFocus(element: HTMLInputElement, isForward?: boolean): boolean {\n    // If a tab was used, we want to focus on the next element.\n    if (\n      !this._processingTabKey &&\n      element &&\n      element.type &&\n      ALLOWED_INPUT_TYPES.indexOf(element.type.toLowerCase()) > -1\n    ) {\n      const selectionStart = element.selectionStart;\n      const selectionEnd = element.selectionEnd;\n      const isRangeSelected = selectionStart !== selectionEnd;\n      const inputValue = element.value;\n      const isReadonly = element.readOnly;\n\n      // We shouldn't lose focus in the following cases:\n      // 1. There is range selected.\n      // 2. When selection start is larger than 0 and it is backward and not readOnly.\n      // 3. when selection start is not the end of length, it is forward and not readOnly.\n      // 4. We press any of the arrow keys when our handleTabKey isn't none or undefined (only losing focus if we hit\n      // tab) and if shouldInputLoseFocusOnArrowKey is defined, if scenario prefers to not loose the focus which is\n      // determined by calling the callback shouldInputLoseFocusOnArrowKey\n      if (\n        isRangeSelected ||\n        (selectionStart! > 0 && !isForward && !isReadonly) ||\n        (selectionStart !== inputValue.length && isForward && !isReadonly) ||\n        (!!this.props.handleTabKey &&\n          !(this.props.shouldInputLoseFocusOnArrowKey && this.props.shouldInputLoseFocusOnArrowKey(element)))\n      ) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  private _shouldWrapFocus(\n    element: HTMLElement,\n    noWrapDataAttribute: 'data-no-vertical-wrap' | 'data-no-horizontal-wrap',\n  ): boolean {\n    return !!this.props.checkForNoWrap ? shouldWrapFocus(element, noWrapDataAttribute) : true;\n  }\n\n  /**\n   * Returns true if the element is a descendant of the FocusZone through a React portal.\n   */\n  private _portalContainsElement(element: HTMLElement): boolean {\n    return element && !!this._root.current && portalContainsElement(element, this._root.current);\n  }\n\n  private _getDocument(): Document {\n    return getDocument(this._root.current)!;\n  }\n}\n","export const DirectionalHint = {\n  /**\n   * Appear above the target element, with the left edges of the callout and target aligning.\n   */\n  topLeftEdge: 0 as 0,\n\n  /**\n   * Appear above the target element, with the centers of the callout and target aligning.\n   */\n  topCenter: 1 as 1,\n\n  /**\n   * Appear above the target element, with the right edges of the callout and target aligning.\n   */\n  topRightEdge: 2 as 2,\n\n  /**\n   * Appear above the target element, aligning with the target element such that the callout tends toward\n   * the center of the screen.\n   */\n  topAutoEdge: 3 as 3,\n\n  /**\n   * Appear below the target element, with the left edges of the callout and target aligning.\n   */\n  bottomLeftEdge: 4 as 4,\n\n  /**\n   * Appear below the target element, with the centers of the callout and target aligning.\n   */\n  bottomCenter: 5 as 5,\n\n  /**\n   * Appear below the target element, with the right edges of the callout and target aligning.\n   */\n  bottomRightEdge: 6 as 6,\n\n  /**\n   * Appear below the target element, aligning with the target element such that the callout tends toward\n   * the center of the screen.\n   */\n  bottomAutoEdge: 7 as 7,\n\n  /**\n   * Appear to the left of the target element, with the top edges of the callout and target aligning.\n   */\n  leftTopEdge: 8 as 8,\n\n  /**\n   * Appear to the left of the target element, with the centers of the callout and target aligning.\n   */\n  leftCenter: 9 as 9,\n\n  /**\n   * Appear to the left of the target element, with the bottom edges of the callout and target aligning.\n   */\n  leftBottomEdge: 10 as 10,\n\n  /**\n   * Appear to the right of the target element, with the top edges of the callout and target aligning.\n   */\n  rightTopEdge: 11 as 11,\n\n  /**\n   * Appear to the right of the target element, with the centers of the callout and target aligning.\n   */\n  rightCenter: 12 as 12,\n\n  /**\n   * Appear to the right of the target element, with the bottom edges of the callout and target aligning.\n   */\n  rightBottomEdge: 13 as 13,\n};\n\nexport type DirectionalHint = typeof DirectionalHint[keyof typeof DirectionalHint];\n","import { _isSSR } from './setSSR';\n\nlet _window: Window | undefined = undefined;\n\n// Note: Accessing \"window\" in IE11 is somewhat expensive, and calling \"typeof window\"\n// hits a memory leak, whereas aliasing it and calling \"typeof _window\" does not.\n// Caching the window value at the file scope lets us minimize the impact.\ntry {\n  _window = window;\n} catch (e) {\n  /* no-op */\n}\n\n/**\n * Helper to get the window object. The helper will make sure to use a cached variable\n * of \"window\", to avoid overhead and memory leaks in IE11. Note that in popup scenarios the\n * window object won't match the \"global\" window object, and for these scenarios, you should\n * pass in an element hosted within the popup.\n *\n * @public\n */\nexport function getWindow(rootElement?: Element | null): Window | undefined {\n  if (_isSSR || typeof _window === 'undefined') {\n    return undefined;\n  } else {\n    const el = rootElement as Element;\n\n    return el && el.ownerDocument && el.ownerDocument.defaultView ? el.ownerDocument.defaultView : _window;\n  }\n}\n","import { IStyle } from './IStyle';\n\nexport const InjectionMode = {\n  /**\n   * Avoids style injection, use getRules() to read the styles.\n   */\n  none: 0 as 0,\n\n  /**\n   * Inserts rules using the insertRule api.\n   */\n  insertNode: 1 as 1,\n\n  /**\n   * Appends rules using appendChild.\n   */\n  appendChild: 2 as 2,\n};\n\nexport type InjectionMode = typeof InjectionMode[keyof typeof InjectionMode];\n\n/**\n * CSP settings for the stylesheet\n */\nexport interface ICSPSettings {\n  /**\n   * Nonce to inject into script tag\n   */\n  nonce?: string;\n}\n\n/**\n * Stylesheet config.\n *\n * @public\n */\nexport interface IStyleSheetConfig {\n  /**\n   * Injection mode for how rules are inserted.\n   */\n  injectionMode?: InjectionMode;\n\n  /**\n   * Default 'displayName' to use for a className.\n   * @defaultvalue 'css'\n   */\n  defaultPrefix?: string;\n\n  /**\n   * Defines the default direction of rules for auto-rtlifying things.\n   * While typically this is represented as a DIR attribute in the markup,\n   * the DIR is not enough to control whether padding goes on the left or\n   * right. Use this to set the default direction when rules are registered.\n   */\n  rtl?: boolean;\n\n  /**\n   * Default 'namespace' to attach before the className.\n   */\n  namespace?: string;\n\n  /**\n   * CSP settings\n   */\n  cspSettings?: ICSPSettings;\n\n  /**\n   * Callback executed when a rule is inserted.\n   */\n  onInsertRule?: (rule: string) => void;\n\n  /**\n   * Initial value for classnames cache. Key is serialized css rules associated with a classname.\n   */\n  classNameCache?: { [key: string]: string };\n}\n\nconst STYLESHEET_SETTING = '__stylesheet__';\n/**\n * MSIE 11 doesn't cascade styles based on DOM ordering, but rather on the order that each style node\n * is created. As such, to maintain consistent priority, IE11 should reuse a single style node.\n */\nconst REUSE_STYLE_NODE = typeof navigator !== 'undefined' && /rv:11.0/.test(navigator.userAgent);\n\n// tslint:disable-next-line:no-any\nlet _global: { [key: string]: any } = {};\n\n// Grab window.\ntry {\n  _global = window;\n} catch {\n  /* leave as blank object */\n}\n\nlet _stylesheet: Stylesheet;\n\n/**\n * Represents the state of styles registered in the page. Abstracts\n * the surface for adding styles to the stylesheet, exposes helpers\n * for reading the styles registered in server rendered scenarios.\n *\n * @public\n */\nexport class Stylesheet {\n  private _lastStyleElement?: HTMLStyleElement;\n  private _styleElement?: HTMLStyleElement;\n  private _rules: string[] = [];\n  private _preservedRules: string[] = [];\n  private _config: IStyleSheetConfig;\n  private _rulesToInsert: string[] = [];\n  private _counter = 0;\n  private _keyToClassName: { [key: string]: string } = {};\n  private _onResetCallbacks: (() => void)[] = [];\n\n  // tslint:disable-next-line:no-any\n  private _classNameToArgs: { [key: string]: { args: any; rules: string[] } } = {};\n\n  /**\n   * Gets the singleton instance.\n   */\n  public static getInstance(): Stylesheet {\n    _stylesheet = _global[STYLESHEET_SETTING] as Stylesheet;\n\n    if (!_stylesheet || (_stylesheet._lastStyleElement && _stylesheet._lastStyleElement.ownerDocument !== document)) {\n      // tslint:disable-next-line:no-string-literal\n      const fabricConfig = (_global && _global['FabricConfig']) || {};\n\n      _stylesheet = _global[STYLESHEET_SETTING] = new Stylesheet(fabricConfig.mergeStyles);\n    }\n\n    return _stylesheet;\n  }\n\n  constructor(config?: IStyleSheetConfig) {\n    this._config = {\n      injectionMode: InjectionMode.insertNode,\n      defaultPrefix: 'css',\n      namespace: undefined,\n      cspSettings: undefined,\n      ...config,\n    };\n\n    this._keyToClassName = this._config.classNameCache || {};\n  }\n\n  /**\n   * Configures the stylesheet.\n   */\n  public setConfig(config?: IStyleSheetConfig): void {\n    this._config = {\n      ...this._config,\n      ...config,\n    };\n  }\n\n  /**\n   * Configures a reset callback.\n   *\n   * @param callback - A callback which will be called when the Stylesheet is reset.\n   */\n  public onReset(callback: () => void): void {\n    this._onResetCallbacks.push(callback);\n  }\n\n  /**\n   * Generates a unique classname.\n   *\n   * @param displayName - Optional value to use as a prefix.\n   */\n  public getClassName(displayName?: string): string {\n    const { namespace } = this._config;\n    const prefix = displayName || this._config.defaultPrefix;\n\n    return `${namespace ? namespace + '-' : ''}${prefix}-${this._counter++}`;\n  }\n\n  /**\n   * Used internally to cache information about a class which was\n   * registered with the stylesheet.\n   */\n  public cacheClassName(className: string, key: string, args: IStyle[], rules: string[]): void {\n    this._keyToClassName[key] = className;\n    this._classNameToArgs[className] = {\n      args,\n      rules,\n    };\n  }\n\n  /**\n   * Gets the appropriate classname given a key which was previously\n   * registered using cacheClassName.\n   */\n  public classNameFromKey(key: string): string | undefined {\n    return this._keyToClassName[key];\n  }\n\n  /**\n   * Gets all classnames cache with the stylesheet.\n   */\n  public getClassNameCache(): { [key: string]: string } {\n    return this._keyToClassName;\n  }\n\n  /**\n   * Gets the arguments associated with a given classname which was\n   * previously registered using cacheClassName.\n   */\n  public argsFromClassName(className: string): IStyle[] | undefined {\n    const entry = this._classNameToArgs[className];\n\n    return entry && entry.args;\n  }\n\n  /**\n   * Gets the arguments associated with a given classname which was\n   * previously registered using cacheClassName.\n   */\n  public insertedRulesFromClassName(className: string): string[] | undefined {\n    const entry = this._classNameToArgs[className];\n\n    return entry && entry.rules;\n  }\n\n  /**\n   * Inserts a css rule into the stylesheet.\n   * @param preserve - Preserves the rule beyond a reset boundary.\n   */\n  public insertRule(rule: string, preserve?: boolean): void {\n    const { injectionMode } = this._config;\n    const element = injectionMode !== InjectionMode.none ? this._getStyleElement() : undefined;\n\n    if (preserve) {\n      this._preservedRules.push(rule);\n    }\n\n    if (element) {\n      switch (this._config.injectionMode) {\n        case InjectionMode.insertNode:\n          const { sheet } = element!;\n\n          try {\n            (sheet as CSSStyleSheet).insertRule(rule, (sheet as CSSStyleSheet).cssRules.length);\n          } catch (e) {\n            // The browser will throw exceptions on unsupported rules (such as a moz prefix in webkit.)\n            // We need to swallow the exceptions for this scenario, otherwise we'd need to filter\n            // which could be slower and bulkier.\n          }\n          break;\n\n        case InjectionMode.appendChild:\n          element.appendChild(document.createTextNode(rule));\n          break;\n      }\n    } else {\n      this._rules.push(rule);\n    }\n\n    if (this._config.onInsertRule) {\n      this._config.onInsertRule(rule);\n    }\n  }\n\n  /**\n   * Gets all rules registered with the stylesheet; only valid when\n   * using InsertionMode.none.\n   */\n  public getRules(includePreservedRules?: boolean): string {\n    return (\n      (includePreservedRules ? this._preservedRules.join('') : '') + this._rules.join('') + this._rulesToInsert.join('')\n    );\n  }\n\n  /**\n   * Resets the internal state of the stylesheet. Only used in server\n   * rendered scenarios where we're using InsertionMode.none.\n   */\n  public reset(): void {\n    this._rules = [];\n    this._rulesToInsert = [];\n    this._counter = 0;\n    this._classNameToArgs = {};\n    this._keyToClassName = {};\n\n    this._onResetCallbacks.forEach((callback: () => void) => callback());\n  }\n\n  // Forces the regeneration of incoming styles without totally resetting the stylesheet.\n  public resetKeys(): void {\n    this._keyToClassName = {};\n  }\n\n  private _getStyleElement(): HTMLStyleElement | undefined {\n    if (!this._styleElement && typeof document !== 'undefined') {\n      this._styleElement = this._createStyleElement();\n\n      if (!REUSE_STYLE_NODE) {\n        // Reset the style element on the next frame.\n        window.requestAnimationFrame(() => {\n          this._styleElement = undefined;\n        });\n      }\n    }\n    return this._styleElement;\n  }\n\n  private _createStyleElement(): HTMLStyleElement {\n    const head: HTMLHeadElement = document.head;\n    const styleElement = document.createElement('style');\n\n    styleElement.setAttribute('data-merge-styles', 'true');\n\n    const { cspSettings } = this._config;\n    if (cspSettings) {\n      if (cspSettings.nonce) {\n        styleElement.setAttribute('nonce', cspSettings.nonce);\n      }\n    }\n    if (this._lastStyleElement) {\n      // If the `nextElementSibling` is null, then the insertBefore will act as a regular append.\n      // https://developer.mozilla.org/en-US/docs/Web/API/Node/insertBefore#Syntax\n      head!.insertBefore(styleElement, this._lastStyleElement.nextElementSibling);\n    } else {\n      const placeholderStyleTag: Element | null = this._findPlaceholderStyleTag();\n\n      if (placeholderStyleTag) {\n        head!.insertBefore(styleElement, placeholderStyleTag.nextElementSibling);\n      } else {\n        head!.insertBefore(styleElement, head.childNodes[0]);\n      }\n    }\n    this._lastStyleElement = styleElement;\n\n    return styleElement;\n  }\n\n  private _findPlaceholderStyleTag(): Element | null {\n    const head: HTMLHeadElement = document.head;\n    if (head) {\n      return head.querySelector('style[data-merge-styles]');\n    }\n    return null;\n  }\n}\n","import { _isSSR } from './setSSR';\n\n/**\n * Helper to get the document object. Note that in popup window cases, document\n * might be the wrong document, which is why we look at ownerDocument for the\n * truth. Also note that the SSR flag is used to test ssr scenarios even if\n * document is defined (from JSDOM for example.)\n *\n * @public\n */\nexport function getDocument(rootElement?: HTMLElement | null): Document | undefined {\n  if (_isSSR || typeof document === 'undefined') {\n    return undefined;\n  } else {\n    const el = rootElement as Element;\n\n    return el && el.ownerDocument ? el.ownerDocument : document;\n  }\n}\n","import { IStyleOptions } from './IStyleOptions';\n\n/**\n * Sets the current RTL value.\n */\nexport function setRTL(isRTL: boolean): void {\n  if (_rtl !== isRTL) {\n    _rtl = isRTL;\n  }\n}\n\n/**\n * Gets the current RTL value.\n */\nexport function getRTL(): boolean {\n  if (_rtl === undefined) {\n    _rtl =\n      typeof document !== 'undefined' &&\n      !!document.documentElement &&\n      document.documentElement.getAttribute('dir') === 'rtl';\n  }\n  return _rtl;\n}\n\n// This has been split into 2 lines because it was working in Fabric due to the code being transpiled to es5, so this\n// was converted to var while not working in Fluent that uses babel to transpile the code to be es6-like. Splitting the\n// logic into two lines, however, allows it to work in both scenarios.\nlet _rtl: boolean;\n_rtl = getRTL();\n\nexport function getStyleOptions(): IStyleOptions {\n  return {\n    rtl: getRTL(),\n  };\n}\n","let _warningCallback: ((message: string) => void) | undefined = undefined;\n\nexport type ISettingsMap<T> = { [P in keyof T]?: string };\n\n/**\n * Sends a warning to console, if the api is present.\n *\n * @public\n * @param message - Warning message.\n */\nexport function warn(message: string): void {\n  if (_warningCallback && process.env.NODE_ENV !== 'production') {\n    _warningCallback(message);\n  } else if (console && console.warn) {\n    console.warn(message);\n  }\n}\n\n/**\n * Configures the warning callback. Passing in undefined will reset it to use the default\n * console.warn function.\n *\n * @public\n * @param warningCallback - Callback to override the generated warnings.\n */\nexport function setWarningCallback(warningCallback?: (message: string) => void): void {\n  _warningCallback = warningCallback;\n}\n","import { IButtonStyles } from './Button.types';\nimport { memoizeFunction } from '../../Utilities';\nimport { HighContrastSelector, ITheme, IRawStyle, getFocusStyle, hiddenContentStyle } from '../../Styling';\n\nconst noOutline: IRawStyle = {\n  outline: 0,\n};\n\nconst iconStyle = (fontSize?: string | number): IRawStyle => {\n  return {\n    fontSize: fontSize,\n    margin: '0 4px',\n    height: '16px',\n    lineHeight: '16px',\n    textAlign: 'center',\n    flexShrink: 0,\n  };\n};\n\n/**\n * Gets the base button styles. Note: because it is a base class to be used with the `mergeRules`\n * helper, it should have values for all class names in the interface. This let `mergeRules` optimize\n * mixing class names together.\n */\nexport const getStyles = memoizeFunction(\n  (theme: ITheme): IButtonStyles => {\n    const { semanticColors, effects, fonts } = theme;\n\n    const border = semanticColors.buttonBorder;\n    const disabledBackground = semanticColors.disabledBackground;\n    const disabledText = semanticColors.disabledText;\n    const buttonHighContrastFocus = {\n      left: -2,\n      top: -2,\n      bottom: -2,\n      right: -2,\n      border: 'none',\n      outlineColor: 'ButtonText',\n    };\n\n    return {\n      root: [\n        getFocusStyle(theme, { inset: 1, highContrastStyle: buttonHighContrastFocus, borderColor: 'transparent' }),\n        theme.fonts.medium,\n        {\n          boxSizing: 'border-box',\n          border: '1px solid ' + border,\n          userSelect: 'none',\n          display: 'inline-block',\n          textDecoration: 'none',\n          textAlign: 'center',\n          cursor: 'pointer',\n          padding: '0 16px',\n          borderRadius: effects.roundedCorner2,\n\n          selectors: {\n            // IE11 workaround for preventing shift of child elements of a button when active.\n            ':active > *': {\n              position: 'relative',\n              left: 0,\n              top: 0,\n            },\n          },\n        },\n      ],\n\n      rootDisabled: [\n        getFocusStyle(theme, { inset: 1, highContrastStyle: buttonHighContrastFocus, borderColor: 'transparent' }),\n        {\n          backgroundColor: disabledBackground,\n          borderColor: disabledBackground,\n          color: disabledText,\n          cursor: 'default',\n          pointerEvents: 'none',\n          selectors: {\n            ':hover': noOutline,\n            ':focus': noOutline,\n            [HighContrastSelector]: {\n              color: 'grayText',\n              borderColor: 'grayText',\n            },\n          },\n        },\n      ],\n\n      iconDisabled: {\n        color: disabledText,\n      },\n\n      menuIconDisabled: {\n        color: disabledText,\n      },\n\n      flexContainer: {\n        display: 'flex',\n        height: '100%',\n        flexWrap: 'nowrap',\n        justifyContent: 'center',\n        alignItems: 'center',\n      },\n      description: {\n        display: 'block',\n      },\n\n      textContainer: {\n        flexGrow: 1,\n        display: 'block',\n      },\n\n      icon: iconStyle(fonts.mediumPlus.fontSize),\n\n      menuIcon: iconStyle(fonts.small.fontSize),\n\n      label: {\n        margin: '0 4px',\n        lineHeight: '100%',\n        display: 'block',\n      },\n\n      screenReaderText: hiddenContentStyle,\n    };\n  },\n);\n","import * as React from 'react';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport { IFocusZoneProps } from '../../FocusZone';\nimport { IIconProps } from '../Icon/Icon.types';\nimport { ICalloutProps, ICalloutContentStyleProps, Target } from '../../Callout';\nimport { ITheme, IStyle } from '../../Styling';\nimport { IButtonStyles } from '../../Button';\nimport { IRefObject, IBaseProps, IRectangle, IRenderFunction, IStyleFunctionOrObject } from '../../Utilities';\nimport { IWithResponsiveModeState } from '../../utilities/decorators/withResponsiveMode';\nimport { IContextualMenuClassNames, IMenuItemClassNames } from './ContextualMenu.classNames';\nexport { DirectionalHint } from '../../common/DirectionalHint';\nimport { IVerticalDividerClassNames } from '../Divider/VerticalDivider.types';\nimport {\n  IContextualMenuItemProps,\n  IContextualMenuRenderItem,\n  IContextualMenuItemStyleProps,\n} from './ContextualMenuItem.types';\nimport { IKeytipProps } from '../../Keytip';\n\n/**\n * {@docCategory ContextualMenu}\n */\nexport enum ContextualMenuItemType {\n  Normal = 0,\n  Divider = 1,\n  Header = 2,\n  Section = 3,\n}\n\n/**\n * {@docCategory ContextualMenu}\n */\nexport interface IContextualMenu {}\n\n/**\n * {@docCategory ContextualMenu}\n */\nexport interface IContextualMenuProps extends IBaseProps<IContextualMenu>, IWithResponsiveModeState {\n  /**\n   * Optional callback to access the IContextualMenu interface. Use this instead of ref for accessing\n   * the public methods and properties of the component.\n   */\n  componentRef?: IRefObject<IContextualMenu>;\n\n  /**\n   * Call to provide customized styling that will layer on top of the variant rules.\n   */\n  styles?: IStyleFunctionOrObject<IContextualMenuStyleProps, IContextualMenuStyles>;\n\n  /**\n   * Theme provided by higher-order component.\n   */\n  theme?: ITheme;\n\n  /**\n   * Additional CSS class to apply to the ContextualMenu.\n   */\n  className?: string;\n\n  /**\n   * The target that the ContextualMenu should try to position itself based on.\n   * It can be either an element, a query selector string resolving to a valid element,\n   * or a MouseEvent. If a MouseEvent is given, the origin point of the event will be used.\n   */\n  target?: Target;\n\n  /**\n   * How the menu should be positioned\n   * @defaultvalue DirectionalHint.bottomAutoEdge\n   */\n  directionalHint?: DirectionalHint;\n\n  /**\n   * How the menu should be positioned in RTL layouts.\n   * If not specified, a mirror of `directionalHint` will be used.\n   */\n  directionalHintForRTL?: DirectionalHint;\n\n  /**\n   * The gap between the ContextualMenu and the target\n   * @defaultvalue 0\n   */\n  gapSpace?: number;\n\n  /**\n   * The width of the beak.\n   * @defaultvalue 16\n   */\n  beakWidth?: number;\n\n  /**\n   * If true the context menu will render as the same width as the target element\n   * @defaultvalue false\n   */\n  useTargetWidth?: boolean;\n\n  /**\n   * If true the context menu will have a minimum width equal to the width of the target element\n   * @defaultvalue false\n   */\n  useTargetAsMinWidth?: boolean;\n\n  /**\n   * The bounding rectangle (or callback that returns a rectangle) which the contextual menu can appear in.\n   */\n  bounds?: IRectangle | ((target?: Target, targetWindow?: Window) => IRectangle | undefined);\n\n  /**\n   * If true then the beak is visible. If false it will not be shown.\n   */\n  isBeakVisible?: boolean;\n\n  /**\n   * If true, the menu will be positioned to cover the target.\n   * If false, it will be positioned next to the target.\n   * @defaultvalue false\n   */\n  coverTarget?: boolean;\n\n  /**\n   * If true the positioning logic will prefer to flip edges rather than to nudge the rectangle to fit within bounds,\n   * thus making sure the element aligns perfectly with target's alignment edge\n   */\n  alignTargetEdge?: boolean;\n\n  /**\n   * Menu items to display.\n   * @defaultvalue []\n   */\n  items: IContextualMenuItem[];\n\n  /**\n   * Used as `aria-labelledby` for the menu element inside the callout.\n   */\n  labelElementId?: string;\n\n  /**\n   * Whether to focus on the menu when mounted.\n   * @defaultvalue true\n   */\n  shouldFocusOnMount?: boolean;\n\n  /**\n   * Whether to focus on the contextual menu container (as opposed to the first menu item).\n   */\n  shouldFocusOnContainer?: boolean;\n\n  /**\n   * Callback when the ContextualMenu tries to close. If `dismissAll` is true then all\n   * submenus will be dismissed.\n   */\n  onDismiss?: (ev?: React.MouseEvent | React.KeyboardEvent, dismissAll?: boolean) => void;\n\n  /**\n   * Click handler which is invoked if `onClick` is not passed for individual contextual\n   * menu item.\n   * Returning true will dismiss the menu even if `ev.preventDefault()` was called.\n   */\n  onItemClick?: (\n    ev?: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>,\n    item?: IContextualMenuItem,\n  ) => boolean | void;\n\n  /**\n   * Whether this menu is a submenu of another menu.\n   */\n  isSubMenu?: boolean;\n\n  /**\n   * ID for the ContextualMenu's root element (inside the callout).\n   * Should be used for `aria-owns` and other such uses, rather than direct reference for programmatic purposes.\n   */\n  id?: string;\n\n  /**\n   * Accessible label for the ContextualMenu's root element (inside the callout).\n   */\n  ariaLabel?: string;\n\n  /**\n   * If true do not render on a new layer. If false render on a new layer.\n   * @defaultvalue false\n   */\n  doNotLayer?: boolean;\n\n  /**\n   * If true the position will not change sides in an attempt to fit the ContextualMenu within bounds.\n   * It will still attempt to align it to whatever bounds are given.\n   * @defaultvalue false\n   */\n  directionalHintFixed?: boolean;\n\n  /**\n   * Callback for when the menu has been opened.\n   */\n  onMenuOpened?: (contextualMenu?: IContextualMenuProps) => void;\n\n  /**\n   * Callback for when the menu is being closed (removing from the DOM).\n   */\n  onMenuDismissed?: (contextualMenu?: IContextualMenuProps) => void;\n\n  /**\n   * Additional custom props for the Callout.\n   */\n  calloutProps?: ICalloutProps;\n\n  /**\n   * Optional title to be displayed on top of the menu.\n   */\n  title?: string;\n\n  /**\n   * Method to provide the classnames to style the contextual menu.\n   * @deprecated Use `styles` instead to leverage mergeStyles API.\n   */\n  // tslint:disable-next-line:deprecation\n  getMenuClassNames?: (theme: ITheme, className?: string) => IContextualMenuClassNames;\n\n  /** Custom render function for a submenu. */\n  onRenderSubMenu?: IRenderFunction<IContextualMenuProps>;\n\n  /**\n   * Method to override the render of the list of menu items.\n   */\n  onRenderMenuList?: IRenderFunction<IContextualMenuListProps>;\n\n  /**\n   * Delay (in milliseconds) to wait before expanding / dismissing a submenu on mouseEnter or mouseLeave\n   */\n  subMenuHoverDelay?: number;\n\n  /**\n   * Method to override the render of the individual menu items\n   * @defaultvalue ContextualMenuItem\n   */\n  contextualMenuItemAs?:\n    | React.ComponentClass<IContextualMenuItemProps>\n    | React.FunctionComponent<IContextualMenuItemProps>;\n\n  /**\n   * Props to pass down to the FocusZone.\n   * NOTE: the default FocusZoneDirection will be used unless a direction\n   * is specified in the focusZoneProps (even if other focusZoneProps are defined)\n   * @defaultvalue \\{ direction: FocusZoneDirection.vertical \\}\n   */\n  focusZoneProps?: IFocusZoneProps;\n\n  /**\n   * If true, renders the ContextualMenu in a hidden state.\n   * Use this flag, rather than rendering a ContextualMenu conditionally based on visibility,\n   * to improve rendering performance when it becomes visible.\n   * Note: When ContextualMenu is hidden its content will not be rendered. It will only render\n   * once the ContextualMenu is visible.\n   * @defaultValue undefined\n   */\n  hidden?: boolean;\n\n  /**\n   * If true, the component will be updated even when `hidden=true`.\n   * Note that this would consume resources to update even though\n   * nothing is being shown to the user.\n   * This might be helpful though if your updates are small and you want the\n   * contextual menu to be revealed fast to the user when `hidden` is set to false.\n   */\n  shouldUpdateWhenHidden?: boolean;\n\n  /**\n   * If true, the contextual menu will not be updated until focus enters the menu via other means.\n   * This will only result in different behavior when `shouldFocusOnMount = false`.\n   * @defaultvalue null\n   */\n  delayUpdateFocusOnHover?: boolean;\n}\n\n/**\n * {@docCategory ContextualMenu}\n */\nexport interface IContextualMenuItemRenderProps extends IContextualMenuItem {\n  index: number;\n  focusableElementIndex: number;\n  totalItemCount: number;\n  hasCheckmarks: boolean;\n  hasIcons: boolean;\n}\n\n/**\n * {@docCategory ContextualMenu}\n */\nexport interface IContextualMenuListProps {\n  items: IContextualMenuItem[];\n  totalItemCount: number;\n  hasCheckmarks: boolean;\n  hasIcons: boolean;\n  defaultMenuItemRenderer: (item: IContextualMenuItemRenderProps) => React.ReactNode;\n}\n\n/**\n * {@docCategory ContextualMenu}\n */\nexport interface IContextualMenuItem {\n  /**\n   * Optional callback to access the IContextualMenuRenderItem interface.\n   * This will get passed down to ContextualMenuItem.\n   */\n  componentRef?: IRefObject<IContextualMenuRenderItem>;\n\n  /**\n   * Unique id to identify the item\n   */\n  key: string;\n\n  /**\n   * Text description for the menu item to display\n   * If a standard dash (-) is passed in, then the item will be rendered as a divider\n   * If a dash must appear as text then the alternatives of\n   * emdash (—), figuredash (‒), or minus symbol (−)\n   * can be used instead\n   */\n  text?: string;\n\n  /**\n   * Seconday description for the menu item to display\n   */\n  secondaryText?: string;\n\n  itemType?: ContextualMenuItemType;\n\n  /**\n   * Props for the Icon.\n   */\n  iconProps?: IIconProps;\n\n  /**\n   * Custom render function for the menu item icon\n   */\n  onRenderIcon?: IRenderFunction<IContextualMenuItemProps>;\n\n  /**\n   * Props for the Icon used for the chevron.\n   */\n  submenuIconProps?: IIconProps;\n\n  /**\n   * Whether the menu item is disabled\n   * @defaultvalue false\n   */\n  disabled?: boolean;\n\n  /**\n   * If the menu item is a split button, this prop disables purely the primary action of the button.\n   * @defaultvalue false\n   */\n  primaryDisabled?: boolean;\n\n  /**\n   * @deprecated Not used\n   */\n  shortCut?: string;\n\n  /**\n   * Whether or not this menu item can be checked\n   * @defaultvalue false\n   */\n  canCheck?: boolean;\n\n  /**\n   * Whether or not this menu item is currently checked.\n   * @defaultvalue false\n   */\n  checked?: boolean;\n\n  /**\n   * Whether or not this menu item is a splitButton.\n   * @defaultvalue false\n   */\n  split?: boolean;\n\n  /**\n   * Any custom data the developer wishes to associate with the menu item.\n   */\n  data?: any;\n\n  /**\n   * Callback for when the menu item is invoked. If `ev.preventDefault()` is called in `onClick`,\n   * the click will not close the menu.\n   * Returning true will dismiss the menu even if `ev.preventDefault()` was called.\n   */\n  onClick?: (\n    ev?: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>,\n    item?: IContextualMenuItem,\n  ) => boolean | void;\n\n  /**\n   * Navigate to this URL when the menu item is clicked.\n   */\n  href?: string;\n\n  /**\n   * Target window when using `href`.\n   */\n  target?: string;\n\n  /**\n   * Link relation setting when using `href`.\n   * If `target` is `_blank`, `rel` is defaulted to a value to prevent clickjacking.\n   */\n  rel?: string;\n\n  /**\n   * Properties to apply to a submenu to this item.\n   *\n   * The ContextualMenu will provide default values for `target`, `onDismiss`, `isSubMenu`,\n   * `id`, `shouldFocusOnMount`, `directionalHint`, `className`, and `gapSpace`, all of which\n   * can be overridden.\n   */\n  subMenuProps?: IContextualMenuProps;\n\n  /**\n   * Method to provide the classnames to style the individual items inside a menu.\n   * @deprecated Use `styles` prop of `IContextualMenuItemProps` to leverage mergeStyles API.\n   */\n  getItemClassNames?: (\n    theme: ITheme,\n    disabled: boolean,\n    expanded: boolean,\n    checked: boolean,\n    isAnchorLink: boolean,\n    knownIcon: boolean,\n    itemClassName?: string,\n    dividerClassName?: string,\n    iconClassName?: string,\n    subMenuClassName?: string,\n    primaryDisabled?: boolean,\n  ) => // tslint:disable-next-line:deprecation\n  IMenuItemClassNames;\n\n  /**\n   * Optional IContextualMenuItemProps overrides to customize behaviors such as item styling via `styles`.\n   */\n  itemProps?: Partial<IContextualMenuItemProps>;\n\n  /**\n   * Method to provide the classnames to style the Vertical Divider of a split button inside a menu.\n   * Default value is the `getSplitButtonVerticalDividerClassNames` func defined in `ContextualMenu.classnames.ts`.\n   * @defaultvalue getSplitButtonVerticalDividerClassNames\n   */\n  // tslint:disable-next-line:deprecation\n  getSplitButtonVerticalDividerClassNames?: (theme: ITheme) => IVerticalDividerClassNames;\n\n  /**\n   * Properties to apply to render this item as a section.\n   * This prop is mutually exclusive with `subMenuProps`.\n   */\n  sectionProps?: IContextualMenuSection;\n\n  /**\n   * Additional CSS class to apply to the menu item.\n   */\n  className?: string;\n\n  /**\n   * Additional styles to apply to the menu item\n   * @deprecated in favor of the `styles` prop to leverage mergeStyles API.\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * Optional accessibility label (aria-label) attribute that will be stamped on to the element.\n   * If none is specified, the aria-label attribute will contain the item name\n   */\n  ariaLabel?: string;\n\n  /**\n   * Optional title for displaying text when hovering over an item.\n   */\n  title?: string;\n\n  /**\n   * Method to custom render this menu item.\n   * For keyboard accessibility, the top-level rendered item should be a focusable element\n   * (like an anchor or a button) or have the `data-is-focusable` property set to true.\n   *\n   * @param item - Item to render. Will typically be of type `IContextualMenuItem`.\n   * (When rendering a command bar item, will be `ICommandBarItemProps`.)\n   * @param dismissMenu - Function to dismiss the menu. Can be used to ensure that a custom menu\n   * item click dismisses the menu. (Will be undefined if rendering a command bar item.)\n   */\n  onRender?: (item: any, dismissMenu: (ev?: any, dismissAll?: boolean) => void) => React.ReactNode;\n\n  /**\n   * A function to be executed on mouse down. This is executed before an `onClick` event and can\n   * be used to interrupt native on click events as well. The click event should still handle\n   * the commands. This should only be used in special cases when react and non-react are mixed.\n   */\n  onMouseDown?: (item: IContextualMenuItem, event: React.MouseEvent<HTMLElement>) => void;\n\n  /**\n   * Optional override for the menu button's role. Defaults to `menuitem` or `menuitemcheckbox`.\n   */\n  role?: string;\n\n  /**\n   * When rendering a custom menu component that is passed in, the component might also be a list of\n   * elements. We want to keep track of the correct index our menu is using based off of\n   * the length of the custom list. It is up to the user to increment the count for their list.\n   */\n  customOnRenderListLength?: number;\n\n  /**\n   * Keytip for this contextual menu item\n   */\n  keytipProps?: IKeytipProps;\n\n  /**\n   * Any additional properties to use when custom rendering menu items.\n   */\n  [propertyName: string]: any;\n\n  /**\n   * This prop is no longer used. All contextual menu items are now focusable when disabled.\n   * @deprecated in 6.38.2 will be removed in 7.0.0\n   */\n  inactive?: boolean;\n\n  /**\n   * Text description for the menu item to display\n   * If a standard dash (-) is passed in, then the item will be rendered as a divider\n   * If a dash must appear as text then the alternatives of\n   * emdash (—), figuredash (‒), or minus symbol (−)\n   * can be used instead\n   * @deprecated Use `text` instead.\n   */\n  name?: string;\n}\n\n/**\n * {@docCategory ContextualMenu}\n */\nexport interface IContextualMenuSection extends React.ClassAttributes<any> {\n  /**\n   * The items to include inside the section.\n   */\n  items: IContextualMenuItem[];\n\n  /**\n   * The optional section title.\n   */\n  title?: string;\n\n  /**\n   * If set to true, the section will display a divider at the top of the section.\n   */\n  topDivider?: boolean;\n\n  /**\n   * If set to true, the section will display a divider at the bottom of the section.\n   */\n  bottomDivider?: boolean;\n}\n\n/**\n * {@docCategory ContextualMenu}\n */\nexport interface IMenuItemStyles extends IButtonStyles {\n  /**\n   * Styles for a menu item that is an anchor link.\n   */\n  item: IStyle;\n\n  /**\n   * Styles for the content inside the button/link of the menuItem.\n   */\n  linkContent: IStyle;\n\n  /**\n   * Styles for a menu item that is an anchor link.\n   */\n  anchorLink: IStyle;\n\n  /**\n   * Default icon color style for known icons.\n   */\n  iconColor: IStyle;\n\n  /**\n   * Default style for checkmark icons.\n   */\n  checkmarkIcon: IStyle;\n\n  /**\n   * Styles for the submenu icon of a menu item.\n   */\n  subMenuIcon: IStyle;\n\n  /**\n   * Styles for a divider item of a ConextualMenu.\n   */\n  divider: IStyle;\n}\n\n/**\n * {@docCategory ContextualMenu}\n */\nexport interface IContextualMenuStyleProps {\n  theme: ITheme;\n\n  className?: string;\n\n  // Insert ContextualMenu style props below\n}\n\n/**\n * {@docCategory ContextualMenu}\n */\nexport interface IContextualMenuStyles {\n  /**\n   * Style override for the contextual menu title.\n   */\n  title: IStyle;\n\n  /**\n   * Style for the container which parents all menu items.\n   */\n  container: IStyle;\n\n  /**\n   * Base styles for the root element of all ContextualMenus.\n   */\n  root: IStyle;\n\n  /**\n   * Styles for the header item of a ContextualMenu\n   */\n  header: IStyle;\n\n  /**\n   * Styles for the list that contains all menuItems.\n   */\n  list: IStyle;\n\n  /**\n   * SubComponent styles.\n   */\n  subComponentStyles: IContextualMenuSubComponentStyles;\n}\n\n/**\n * {@docCategory ContextualMenu}\n */\nexport interface IContextualMenuSubComponentStyles {\n  /** Styles for the callout that hosts the ContextualMenu options. */\n  callout: IStyleFunctionOrObject<ICalloutContentStyleProps, any>;\n\n  /** Styles for each menu item. */\n  menuItem: IStyleFunctionOrObject<IContextualMenuItemStyleProps, any>;\n}\n","import * as React from 'react';\n\nimport { IImageIconProps } from './Icon.types';\nimport { Image } from '../Image/Image';\nimport { css, getNativeProps, htmlElementProperties } from '../../Utilities';\nimport { classNames, MS_ICON } from './Icon.styles';\n\n/**\n * Fast icon component which only supports images (not font glyphs) and can't be targeted by customizations.\n * To style the icon, use `className` or reference `ms-Icon` in CSS.\n * {@docCategory Icon}\n */\nexport const ImageIcon: React.FunctionComponent<IImageIconProps> = props => {\n  const { className, imageProps } = props;\n\n  const nativeProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(props, htmlElementProperties);\n\n  const containerProps = props['aria-label']\n    ? {}\n    : {\n        role: 'presentation',\n        'aria-hidden': imageProps.alt || imageProps['aria-labelledby'] ? false : true,\n      };\n\n  return (\n    <div {...containerProps} {...nativeProps} className={css(MS_ICON, classNames.root, classNames.image, className)}>\n      <Image {...imageProps} />\n    </div>\n  );\n};\n","import { IContextualMenuItem } from '../../index';\n\n/**\n * Determines the effective checked state of a menu item.\n *\n * @param item {IContextualMenuItem} to get the check state of.\n * @returns {true} if the item is checked.\n * @returns {false} if the item is unchecked.\n * @returns {null} if the item is not checkable.\n */\nexport function getIsChecked(item: IContextualMenuItem): boolean | null {\n  if (item.canCheck) {\n    return !!(item.isChecked || item.checked);\n  }\n\n  if (typeof item.isChecked === 'boolean') {\n    return item.isChecked;\n  }\n\n  if (typeof item.checked === 'boolean') {\n    return item.checked;\n  }\n\n  // Item is not checkable.\n  return null;\n}\n\nexport function hasSubmenu(item: IContextualMenuItem): boolean {\n  return !!(item.subMenuProps || item.items);\n}\n\nexport function isItemDisabled(item: IContextualMenuItem): boolean {\n  return !!(item.isDisabled || item.disabled);\n}\n\nexport function getMenuItemAriaRole(item: IContextualMenuItem): string {\n  const isChecked = getIsChecked(item);\n  const canCheck: boolean = isChecked !== null;\n  return canCheck ? 'menuitemcheckbox' : 'menuitem';\n}\n","import * as React from 'react';\nimport { hasSubmenu, getIsChecked } from '../../utilities/contextualMenu/index';\nimport { getRTL, initializeComponentRef } from '../../Utilities';\nimport { Icon } from '../../Icon';\nimport { IContextualMenuItemProps } from './ContextualMenuItem.types';\n\nconst renderItemIcon = (props: IContextualMenuItemProps) => {\n  const { item, hasIcons, classNames } = props;\n\n  const { iconProps } = item;\n\n  if (!hasIcons) {\n    return null;\n  }\n\n  if (item.onRenderIcon) {\n    return item.onRenderIcon(props);\n  }\n\n  return <Icon {...iconProps} className={classNames.icon} />;\n};\n\nconst renderCheckMarkIcon = ({ onCheckmarkClick, item, classNames }: IContextualMenuItemProps) => {\n  const isItemChecked = getIsChecked(item);\n  if (onCheckmarkClick) {\n    // Ensures that the item is passed as the first argument to the checkmark click callback.\n    const onClick = (e: React.MouseEvent<HTMLElement>) => onCheckmarkClick(item, e);\n\n    return (\n      <Icon\n        iconName={item.canCheck !== false && isItemChecked ? 'CheckMark' : ''}\n        className={classNames.checkmarkIcon}\n        onClick={onClick}\n      />\n    );\n  }\n  return null;\n};\n\nconst renderItemName = ({ item, classNames }: IContextualMenuItemProps) => {\n  // tslint:disable:deprecation\n  if (item.text || item.name) {\n    return <span className={classNames.label}>{item.text || item.name}</span>;\n  }\n  // tslint:enable:deprecation\n  return null;\n};\n\nconst renderSecondaryText = ({ item, classNames }: IContextualMenuItemProps) => {\n  if (item.secondaryText) {\n    return <span className={classNames.secondaryText}>{item.secondaryText}</span>;\n  }\n  return null;\n};\n\nconst renderSubMenuIcon = ({ item, classNames, theme }: IContextualMenuItemProps) => {\n  if (hasSubmenu(item)) {\n    return (\n      <Icon\n        iconName={getRTL(theme) ? 'ChevronLeft' : 'ChevronRight'}\n        {...item.submenuIconProps}\n        className={classNames.subMenuIcon}\n      />\n    );\n  }\n  return null;\n};\n\nexport class ContextualMenuItemBase extends React.Component<IContextualMenuItemProps, {}> {\n  constructor(props: IContextualMenuItemProps) {\n    super(props);\n\n    initializeComponentRef(this);\n  }\n\n  public render() {\n    const { item, classNames } = this.props;\n\n    return (\n      <div className={item.split ? classNames.linkContentMenu : classNames.linkContent}>\n        {renderCheckMarkIcon(this.props)}\n        {renderItemIcon(this.props)}\n        {renderItemName(this.props)}\n        {renderSecondaryText(this.props)}\n        {renderSubMenuIcon(this.props)}\n      </div>\n    );\n  }\n\n  public openSubMenu = (): void => {\n    const { item, openSubMenu, getSubmenuTarget } = this.props;\n    if (getSubmenuTarget) {\n      const submenuTarget = getSubmenuTarget();\n      if (hasSubmenu(item) && openSubMenu && submenuTarget) {\n        openSubMenu(item, submenuTarget);\n      }\n    }\n  };\n\n  public dismissSubMenu = (): void => {\n    const { item, dismissSubMenu } = this.props;\n    if (hasSubmenu(item) && dismissSubMenu) {\n      dismissSubMenu();\n    }\n  };\n\n  public dismissMenu = (dismissAll?: boolean): void => {\n    const { dismissMenu } = this.props;\n    if (dismissMenu) {\n      dismissMenu(undefined /* ev */, dismissAll);\n    }\n  };\n}\n","import { memoizeFunction } from '../../Utilities';\nimport { mergeStyleSets, ITheme } from '../../Styling';\nimport { IVerticalDividerClassNames } from './VerticalDivider.types';\n\n/**\n * @deprecated use getStyles exported from VerticalDivider.styles.ts\n */\nexport const getDividerClassNames = memoizeFunction(\n  // tslint:disable-next-line:deprecation\n  (theme: ITheme): IVerticalDividerClassNames => {\n    return mergeStyleSets({\n      wrapper: {\n        display: 'inline-flex',\n        height: '100%',\n        alignItems: 'center',\n      },\n      divider: {\n        width: 1,\n        height: '100%',\n        backgroundColor: theme.palette.neutralTertiaryAlt,\n      },\n    });\n  },\n);\n","import {\n  concatStyleSets,\n  getFocusStyle,\n  HighContrastSelector,\n  IRawStyle,\n  ITheme,\n  getScreenSelector,\n  ScreenWidthMaxMedium,\n  IconFontSizes,\n} from '../../Styling';\nimport { IMenuItemStyles } from './ContextualMenu.types';\nimport { memoizeFunction } from '../../Utilities';\n\nexport const CONTEXTUAL_MENU_ITEM_HEIGHT = 36;\n\nconst MediumScreenSelector = getScreenSelector(0, ScreenWidthMaxMedium);\n\nconst getItemHighContrastStyles = memoizeFunction(\n  (): IRawStyle => {\n    return {\n      selectors: {\n        [HighContrastSelector]: {\n          backgroundColor: 'Highlight',\n          borderColor: 'Highlight',\n          color: 'HighlightText',\n          MsHighContrastAdjust: 'none',\n        },\n      },\n    };\n  },\n);\n\nexport const getMenuItemStyles = memoizeFunction(\n  (theme: ITheme): IMenuItemStyles => {\n    const { semanticColors, fonts, palette } = theme;\n    const ContextualMenuItemBackgroundHoverColor = semanticColors.menuItemBackgroundHovered;\n    const ContextualMenuItemTextHoverColor = semanticColors.menuItemTextHovered;\n    const ContextualMenuItemBackgroundSelectedColor = semanticColors.menuItemBackgroundPressed;\n    const ContextualMenuItemDividerColor = semanticColors.bodyDivider;\n\n    const menuItemStyles: IMenuItemStyles = {\n      item: [\n        fonts.medium,\n        {\n          color: semanticColors.bodyText,\n          position: 'relative',\n          boxSizing: 'border-box',\n        },\n      ],\n      divider: {\n        display: 'block',\n        height: '1px',\n        backgroundColor: ContextualMenuItemDividerColor,\n        position: 'relative',\n      },\n      root: [\n        getFocusStyle(theme),\n        fonts.medium,\n        {\n          color: semanticColors.bodyText,\n          backgroundColor: 'transparent',\n          border: 'none',\n          width: '100%',\n          height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n          lineHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n          display: 'block',\n          cursor: 'pointer',\n          padding: '0px 8px 0 4px', // inner elements have a margin of 4px (4 + 4 = 8px as on right side)\n          textAlign: 'left',\n        },\n      ],\n      rootDisabled: {\n        color: semanticColors.disabledBodyText,\n        cursor: 'default',\n        pointerEvents: 'none',\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'GrayText',\n            opacity: 1,\n          },\n        },\n      },\n      rootHovered: {\n        backgroundColor: ContextualMenuItemBackgroundHoverColor,\n        color: ContextualMenuItemTextHoverColor,\n        selectors: {\n          '.ms-ContextualMenu-icon': {\n            color: palette.themeDarkAlt,\n          },\n          '.ms-ContextualMenu-submenuIcon': {\n            color: palette.neutralPrimary,\n          },\n        },\n        ...getItemHighContrastStyles(),\n      },\n      rootFocused: {\n        backgroundColor: palette.white,\n        ...getItemHighContrastStyles(),\n      },\n      rootChecked: {\n        selectors: {\n          '.ms-ContextualMenu-checkmarkIcon': {\n            color: palette.neutralPrimary,\n          },\n        },\n        ...getItemHighContrastStyles(),\n      },\n      rootPressed: {\n        backgroundColor: ContextualMenuItemBackgroundSelectedColor,\n        selectors: {\n          '.ms-ContextualMenu-icon': {\n            color: palette.themeDark,\n          },\n          '.ms-ContextualMenu-submenuIcon': {\n            color: palette.neutralPrimary,\n          },\n        },\n        ...getItemHighContrastStyles(),\n      },\n      rootExpanded: {\n        backgroundColor: ContextualMenuItemBackgroundSelectedColor,\n        color: semanticColors.bodyTextChecked,\n        ...getItemHighContrastStyles(),\n      },\n      linkContent: {\n        whiteSpace: 'nowrap',\n        height: 'inherit',\n        display: 'flex',\n        alignItems: 'center',\n        maxWidth: '100%',\n      },\n      anchorLink: {\n        padding: '0px 8px 0 4px', // inner elements have a margin of 4px (4 + 4 = 8px as on right side)\n        textRendering: 'auto',\n        color: 'inherit',\n        letterSpacing: 'normal',\n        wordSpacing: 'normal',\n        textTransform: 'none',\n        textIndent: '0px',\n        textShadow: 'none',\n        textDecoration: 'none',\n        boxSizing: 'border-box',\n      },\n      label: {\n        margin: '0 4px',\n        verticalAlign: 'middle',\n        display: 'inline-block',\n        flexGrow: '1',\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n      },\n      secondaryText: {\n        color: theme.palette.neutralSecondary,\n        paddingLeft: '20px',\n        textAlign: 'right',\n      },\n      icon: {\n        display: 'inline-block',\n        minHeight: '1px',\n        maxHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n        fontSize: IconFontSizes.medium,\n        width: IconFontSizes.medium,\n        margin: '0 4px',\n        verticalAlign: 'middle',\n        flexShrink: '0',\n        selectors: {\n          [MediumScreenSelector]: {\n            fontSize: IconFontSizes.large,\n            width: IconFontSizes.large,\n          },\n        },\n      },\n      iconColor: {\n        color: semanticColors.menuIcon,\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'inherit',\n          },\n          ['$root:hover &']: {\n            selectors: {\n              [HighContrastSelector]: {\n                color: 'HighlightText',\n              },\n            },\n          },\n          ['$root:focus &']: {\n            selectors: {\n              [HighContrastSelector]: {\n                color: 'HighlightText',\n              },\n            },\n          },\n        },\n      },\n      iconDisabled: {\n        color: semanticColors.disabledBodyText,\n      },\n      checkmarkIcon: {\n        color: semanticColors.bodySubtext,\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'HighlightText',\n          },\n        },\n      },\n      subMenuIcon: {\n        height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n        lineHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n        color: palette.neutralSecondary,\n        textAlign: 'center',\n        display: 'inline-block',\n        verticalAlign: 'middle',\n        flexShrink: '0',\n        fontSize: IconFontSizes.small, // 12px\n        selectors: {\n          ':hover': {\n            color: palette.neutralPrimary,\n          },\n          ':active': {\n            color: palette.neutralPrimary,\n          },\n          [MediumScreenSelector]: {\n            fontSize: IconFontSizes.medium, // 16px\n          },\n        },\n      },\n      splitButtonFlexContainer: [\n        getFocusStyle(theme),\n        {\n          display: 'flex',\n          height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n          flexWrap: 'nowrap',\n          justifyContent: 'center',\n          alignItems: 'flex-start',\n        },\n      ],\n    };\n\n    return concatStyleSets(menuItemStyles);\n  },\n);\n","import { getDividerClassNames } from '../Divider/VerticalDivider.classNames';\nimport { getMenuItemStyles } from './ContextualMenu.cnstyles';\nimport { ITheme, mergeStyleSets, getGlobalClassNames, getScreenSelector, ScreenWidthMaxMedium } from '../../Styling';\nimport { IVerticalDividerClassNames } from '../Divider/VerticalDivider.types';\nimport { memoizeFunction, IsFocusVisibleClassName } from '../../Utilities';\nimport { IContextualMenuItemStyles, IContextualMenuItemStyleProps } from './ContextualMenuItem.types';\nimport { IContextualMenuSubComponentStyles } from './ContextualMenu.types';\n\n/**\n * @deprecated in favor of mergeStyles API.\n */\nexport interface IContextualMenuClassNames {\n  container: string;\n  root: string;\n  list: string;\n  header: string;\n  title: string;\n  subComponentStyles?: IContextualMenuSubComponentStyles;\n}\n\n/**\n * @deprecated in favor of mergeStyles API.\n */\nexport interface IMenuItemClassNames {\n  item: string;\n  divider: string;\n  root: string;\n  linkContent: string;\n  icon: string;\n  checkmarkIcon: string;\n  subMenuIcon: string;\n  label: string;\n  secondaryText: string;\n  splitContainer: string;\n  splitPrimary: string;\n  splitMenu: string;\n  linkContentMenu: string;\n}\n\nconst CONTEXTUAL_SPLIT_MENU_MINWIDTH = '28px';\n\nconst MediumScreenSelector = getScreenSelector(0, ScreenWidthMaxMedium);\n\nexport const getSplitButtonVerticalDividerClassNames = memoizeFunction(\n  // tslint:disable:deprecation\n  (theme: ITheme): IVerticalDividerClassNames => {\n    return mergeStyleSets(getDividerClassNames(theme), {\n      // tslint:enable:deprecation\n      wrapper: {\n        position: 'absolute',\n        right: 28, // width of the splitMenu based on the padding plus icon fontSize\n        selectors: {\n          [MediumScreenSelector]: {\n            right: 32, // fontSize of the icon increased from 12px to 16px\n          },\n        },\n      },\n      divider: {\n        height: 16,\n        width: 1,\n      },\n    });\n  },\n);\n\nconst GlobalClassNames = {\n  item: 'ms-ContextualMenu-item',\n  divider: 'ms-ContextualMenu-divider',\n  root: 'ms-ContextualMenu-link',\n  isChecked: 'is-checked',\n  isExpanded: 'is-expanded',\n  isDisabled: 'is-disabled',\n  linkContent: 'ms-ContextualMenu-linkContent',\n  linkContentMenu: 'ms-ContextualMenu-linkContent',\n  icon: 'ms-ContextualMenu-icon',\n  iconColor: 'ms-ContextualMenu-iconColor',\n  checkmarkIcon: 'ms-ContextualMenu-checkmarkIcon',\n  subMenuIcon: 'ms-ContextualMenu-submenuIcon',\n  label: 'ms-ContextualMenu-itemText',\n  secondaryText: 'ms-ContextualMenu-secondaryText',\n  splitMenu: 'ms-ContextualMenu-splitMenu',\n};\n\n/**\n * @deprecated To be removed in 7.0.\n * @internal\n * This is a package-internal method that has been depended on.\n * It is being kept in this form for backwards compatibility.\n * It should be cleaned up in 7.0.\n *\n * TODO: Audit perf. impact of and potentially remove memoizeFunction.\n * https://github.com/microsoft/fluentui/issues/5534\n */\nexport const getItemClassNames = memoizeFunction(\n  (\n    theme: ITheme,\n    disabled: boolean,\n    expanded: boolean,\n    checked: boolean,\n    isAnchorLink: boolean,\n    knownIcon: boolean,\n    itemClassName?: string,\n    dividerClassName?: string,\n    iconClassName?: string,\n    subMenuClassName?: string,\n    primaryDisabled?: boolean,\n    className?: string,\n  ): IContextualMenuItemStyles => {\n    const styles = getMenuItemStyles(theme);\n    const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n    return mergeStyleSets({\n      item: [classNames.item, styles.item, itemClassName],\n      divider: [classNames.divider, styles.divider, dividerClassName],\n      root: [\n        classNames.root,\n        styles.root,\n        checked && [classNames.isChecked, styles.rootChecked],\n        isAnchorLink && styles.anchorLink,\n        expanded && [classNames.isExpanded, styles.rootExpanded],\n        disabled && [classNames.isDisabled, styles.rootDisabled],\n        !disabled &&\n          !expanded && [\n            {\n              selectors: {\n                ':hover': styles.rootHovered,\n                ':active': styles.rootPressed,\n                [`.${IsFocusVisibleClassName} &:focus, .${IsFocusVisibleClassName} &:focus:hover`]: styles.rootFocused,\n                [`.${IsFocusVisibleClassName} &:hover`]: { background: 'inherit;' },\n              },\n            },\n          ],\n        className,\n      ],\n      splitPrimary: [\n        styles.root,\n        {\n          width: `calc(100% - ${CONTEXTUAL_SPLIT_MENU_MINWIDTH})`,\n        },\n        checked && ['is-checked', styles.rootChecked],\n        (disabled || primaryDisabled) && ['is-disabled', styles.rootDisabled],\n        !(disabled || primaryDisabled) &&\n          !checked && [\n            {\n              selectors: {\n                ':hover': styles.rootHovered,\n                // when hovering over the splitPrimary also affect the splitMenu\n                [`:hover ~ .${classNames.splitMenu}`]: styles.rootHovered,\n                ':active': styles.rootPressed,\n                [`.${IsFocusVisibleClassName} &:focus, .${IsFocusVisibleClassName} &:focus:hover`]: styles.rootFocused,\n                [`.${IsFocusVisibleClassName} &:hover`]: { background: 'inherit;' },\n              },\n            },\n          ],\n      ],\n      splitMenu: [\n        classNames.splitMenu,\n        styles.root,\n        {\n          flexBasis: '0',\n          padding: '0 8px',\n          minWidth: CONTEXTUAL_SPLIT_MENU_MINWIDTH,\n        },\n        expanded && ['is-expanded', styles.rootExpanded],\n        disabled && ['is-disabled', styles.rootDisabled],\n        !disabled &&\n          !expanded && [\n            {\n              selectors: {\n                ':hover': styles.rootHovered,\n                ':active': styles.rootPressed,\n                [`.${IsFocusVisibleClassName} &:focus, .${IsFocusVisibleClassName} &:focus:hover`]: styles.rootFocused,\n                [`.${IsFocusVisibleClassName} &:hover`]: { background: 'inherit;' },\n              },\n            },\n          ],\n      ],\n      anchorLink: styles.anchorLink,\n      linkContent: [classNames.linkContent, styles.linkContent],\n      linkContentMenu: [\n        classNames.linkContentMenu,\n        styles.linkContent,\n        {\n          justifyContent: 'center',\n        },\n      ],\n      icon: [\n        classNames.icon,\n        knownIcon && styles.iconColor,\n        styles.icon,\n        iconClassName,\n        disabled && [classNames.isDisabled, styles.iconDisabled],\n      ],\n      iconColor: styles.iconColor,\n      checkmarkIcon: [classNames.checkmarkIcon, knownIcon && styles.checkmarkIcon, styles.icon, iconClassName],\n      subMenuIcon: [\n        classNames.subMenuIcon,\n        styles.subMenuIcon,\n        subMenuClassName,\n        expanded && { color: theme.palette.neutralPrimary },\n        disabled && [styles.iconDisabled],\n      ],\n      label: [classNames.label, styles.label],\n      secondaryText: [classNames.secondaryText, styles.secondaryText],\n      splitContainer: [\n        styles.splitButtonFlexContainer,\n        !disabled &&\n          !checked && [\n            {\n              selectors: {\n                [`.${IsFocusVisibleClassName} &:focus, .${IsFocusVisibleClassName} &:focus:hover`]: styles.rootFocused,\n              },\n            },\n          ],\n      ],\n    });\n  },\n);\n\n/**\n * Wrapper function for generating ContextualMenuItem classNames which adheres to\n * the getStyles API, but invokes memoized className generator function with\n * primitive values.\n *\n * @param props the ContextualMenuItem style props used to generate its styles.\n */\nexport const getItemStyles = (props: IContextualMenuItemStyleProps): IContextualMenuItemStyles => {\n  const {\n    theme,\n    disabled,\n    expanded,\n    checked,\n    isAnchorLink,\n    knownIcon,\n    itemClassName,\n    dividerClassName,\n    iconClassName,\n    subMenuClassName,\n    primaryDisabled,\n    className,\n  } = props;\n\n  // tslint:disable-next-line:deprecation\n  return getItemClassNames(\n    theme,\n    disabled,\n    expanded,\n    checked,\n    isAnchorLink,\n    knownIcon,\n    itemClassName,\n    dividerClassName,\n    iconClassName,\n    subMenuClassName,\n    primaryDisabled,\n    className,\n  );\n};\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport {\n  IContextualMenuItemProps,\n  IContextualMenuItemStyleProps,\n  IContextualMenuItemStyles,\n} from './ContextualMenuItem.types';\nimport { ContextualMenuItemBase } from './ContextualMenuItem.base';\nimport { getItemStyles } from './ContextualMenu.classNames';\n\n/**\n * ContextualMenuItem description\n */\nexport const ContextualMenuItem: React.FunctionComponent<IContextualMenuItemProps> = styled<\n  IContextualMenuItemProps,\n  IContextualMenuItemStyleProps,\n  IContextualMenuItemStyles\n>(ContextualMenuItemBase, getItemStyles, undefined, { scope: 'ContextualMenuItem' });\n","import * as React from 'react';\nimport { initializeComponentRef, shallowCompare } from '../../../Utilities';\nimport { IContextualMenuItemWrapperProps } from './ContextualMenuItemWrapper.types';\nimport { IContextualMenuItem } from '../../../ContextualMenu';\n\nexport class ContextualMenuItemWrapper extends React.Component<IContextualMenuItemWrapperProps> {\n  constructor(props: IContextualMenuItemWrapperProps) {\n    super(props);\n    initializeComponentRef(this);\n  }\n\n  public shouldComponentUpdate(newProps: IContextualMenuItemWrapperProps): boolean {\n    return !shallowCompare(newProps, this.props);\n  }\n\n  protected _onItemMouseEnter = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemMouseEnter } = this.props;\n    if (onItemMouseEnter) {\n      onItemMouseEnter(item, ev, ev.currentTarget as HTMLElement);\n    }\n  };\n\n  protected _onItemClick = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemClickBase } = this.props;\n    if (onItemClickBase) {\n      onItemClickBase(item, ev, ev.currentTarget as HTMLElement);\n    }\n  };\n\n  protected _onItemMouseLeave = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemMouseLeave } = this.props;\n    if (onItemMouseLeave) {\n      onItemMouseLeave(item, ev);\n    }\n  };\n\n  protected _onItemKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    const { item, onItemKeyDown } = this.props;\n    if (onItemKeyDown) {\n      onItemKeyDown(item, ev);\n    }\n  };\n\n  protected _onItemMouseMove = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemMouseMove } = this.props;\n    if (onItemMouseMove) {\n      onItemMouseMove(item, ev, ev.currentTarget as HTMLElement);\n    }\n  };\n\n  protected _getSubMenuId = (item: IContextualMenuItem): string | undefined => {\n    const { getSubMenuId } = this.props;\n    if (getSubMenuId) {\n      return getSubMenuId(item);\n    }\n  };\n\n  protected _getSubmenuTarget = (): HTMLElement | undefined => {\n    return undefined;\n  };\n}\n","import * as React from 'react';\nimport { anchorProperties, getNativeProps, memoizeFunction } from '../../../Utilities';\nimport { ContextualMenuItemWrapper } from './ContextualMenuItemWrapper';\nimport { KeytipData } from '../../../KeytipData';\nimport { isItemDisabled, hasSubmenu } from '../../../utilities/contextualMenu/index';\nimport { ContextualMenuItem } from '../ContextualMenuItem';\nimport { IKeytipDataProps } from '../../KeytipData/KeytipData.types';\nimport { IKeytipProps } from '../../Keytip/Keytip.types';\n\nexport class ContextualMenuAnchor extends ContextualMenuItemWrapper {\n  private _anchor = React.createRef<HTMLAnchorElement>();\n\n  private _getMemoizedMenuButtonKeytipProps = memoizeFunction((keytipProps: IKeytipProps) => {\n    return {\n      ...keytipProps,\n      hasMenu: true,\n    };\n  });\n\n  public render() {\n    const {\n      item,\n      classNames,\n      index,\n      focusableElementIndex,\n      totalItemCount,\n      hasCheckmarks,\n      hasIcons,\n      contextualMenuItemAs: ChildrenRenderer = ContextualMenuItem,\n      expandedMenuItemKey,\n      onItemClick,\n      openSubMenu,\n      dismissSubMenu,\n      dismissMenu,\n    } = this.props;\n\n    let anchorRel = item.rel;\n    if (item.target && item.target.toLowerCase() === '_blank') {\n      anchorRel = anchorRel ? anchorRel : 'nofollow noopener noreferrer'; // Safe default to prevent tabjacking\n    }\n\n    const subMenuId = this._getSubMenuId(item);\n    const itemHasSubmenu = hasSubmenu(item);\n    const nativeProps = getNativeProps<React.HTMLAttributes<HTMLAnchorElement>>(item, anchorProperties);\n    const disabled = isItemDisabled(item);\n    const { itemProps } = item;\n\n    let { keytipProps } = item;\n    if (keytipProps && itemHasSubmenu) {\n      keytipProps = this._getMemoizedMenuButtonKeytipProps(keytipProps);\n    }\n\n    return (\n      <div>\n        <KeytipData\n          keytipProps={item.keytipProps}\n          ariaDescribedBy={nativeProps['aria-describedby']}\n          disabled={disabled}\n        >\n          {(keytipAttributes: IKeytipDataProps): JSX.Element => (\n            <a\n              {...nativeProps}\n              {...keytipAttributes}\n              ref={this._anchor}\n              href={item.href}\n              target={item.target}\n              rel={anchorRel}\n              className={classNames.root}\n              role=\"menuitem\"\n              aria-owns={item.key === expandedMenuItemKey ? subMenuId : undefined}\n              aria-haspopup={itemHasSubmenu || undefined}\n              aria-expanded={itemHasSubmenu ? item.key === expandedMenuItemKey : undefined}\n              aria-posinset={focusableElementIndex + 1}\n              aria-setsize={totalItemCount}\n              aria-disabled={isItemDisabled(item)}\n              // tslint:disable-next-line:deprecation\n              style={item.style}\n              onClick={this._onItemClick}\n              onMouseEnter={this._onItemMouseEnter}\n              onMouseLeave={this._onItemMouseLeave}\n              onMouseMove={this._onItemMouseMove}\n              onKeyDown={itemHasSubmenu ? this._onItemKeyDown : undefined}\n            >\n              <ChildrenRenderer\n                componentRef={item.componentRef}\n                item={item}\n                classNames={classNames}\n                index={index}\n                onCheckmarkClick={hasCheckmarks && onItemClick ? onItemClick : undefined}\n                hasIcons={hasIcons}\n                openSubMenu={openSubMenu}\n                dismissSubMenu={dismissSubMenu}\n                dismissMenu={dismissMenu}\n                getSubmenuTarget={this._getSubmenuTarget}\n                {...itemProps}\n              />\n            </a>\n          )}\n        </KeytipData>\n      </div>\n    );\n  }\n\n  protected _getSubmenuTarget = (): HTMLElement | undefined => {\n    return this._anchor.current ? this._anchor.current : undefined;\n  };\n\n  protected _onItemClick = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemClick } = this.props;\n    if (onItemClick) {\n      onItemClick(item, ev);\n    }\n  };\n}\n","import * as React from 'react';\nimport { buttonProperties, getNativeProps, memoizeFunction } from '../../../Utilities';\nimport { ContextualMenuItemWrapper } from './ContextualMenuItemWrapper';\nimport { KeytipData } from '../../../KeytipData';\nimport { getIsChecked, isItemDisabled, hasSubmenu, getMenuItemAriaRole } from '../../../utilities/contextualMenu/index';\nimport { ContextualMenuItem } from '../ContextualMenuItem';\nimport { IKeytipDataProps } from '../../KeytipData/KeytipData.types';\nimport { IKeytipProps } from '../../Keytip/Keytip.types';\n\nexport class ContextualMenuButton extends ContextualMenuItemWrapper {\n  private _btn = React.createRef<HTMLButtonElement>();\n\n  private _getMemoizedMenuButtonKeytipProps = memoizeFunction((keytipProps: IKeytipProps) => {\n    return {\n      ...keytipProps,\n      hasMenu: true,\n    };\n  });\n\n  public render() {\n    const {\n      item,\n      classNames,\n      index,\n      focusableElementIndex,\n      totalItemCount,\n      hasCheckmarks,\n      hasIcons,\n      contextualMenuItemAs: ChildrenRenderer = ContextualMenuItem,\n      expandedMenuItemKey,\n      onItemMouseDown,\n      onItemClick,\n      openSubMenu,\n      dismissSubMenu,\n      dismissMenu,\n    } = this.props;\n\n    const subMenuId = this._getSubMenuId(item);\n\n    const isChecked: boolean | null | undefined = getIsChecked(item);\n    const canCheck: boolean = isChecked !== null;\n    const defaultRole = getMenuItemAriaRole(item);\n    const itemHasSubmenu = hasSubmenu(item);\n    const { itemProps, ariaLabel } = item;\n\n    const buttonNativeProperties = getNativeProps<React.ButtonHTMLAttributes<HTMLButtonElement>>(\n      item,\n      buttonProperties,\n    );\n    // Do not add the disabled attribute to the button so that it is focusable\n    delete buttonNativeProperties.disabled;\n\n    const itemButtonProperties = {\n      className: classNames.root,\n      onClick: this._onItemClick,\n      onKeyDown: itemHasSubmenu ? this._onItemKeyDown : undefined,\n      onMouseEnter: this._onItemMouseEnter,\n      onMouseLeave: this._onItemMouseLeave,\n      onMouseDown: (ev: React.MouseEvent<HTMLButtonElement>) =>\n        onItemMouseDown ? onItemMouseDown(item, ev) : undefined,\n      onMouseMove: this._onItemMouseMove,\n      href: item.href,\n      title: item.title,\n      'aria-label': ariaLabel,\n      'aria-haspopup': itemHasSubmenu || undefined,\n      'aria-owns': item.key === expandedMenuItemKey ? subMenuId : undefined,\n      'aria-expanded': itemHasSubmenu ? item.key === expandedMenuItemKey : undefined,\n      'aria-checked': canCheck ? !!isChecked : undefined,\n      'aria-posinset': focusableElementIndex + 1,\n      'aria-setsize': totalItemCount,\n      'aria-disabled': isItemDisabled(item),\n      role: item.role || defaultRole,\n      // tslint:disable-next-line:deprecation\n      style: item.style,\n    };\n\n    let { keytipProps } = item;\n    if (keytipProps && itemHasSubmenu) {\n      keytipProps = this._getMemoizedMenuButtonKeytipProps(keytipProps);\n    }\n\n    return (\n      <KeytipData\n        keytipProps={keytipProps}\n        ariaDescribedBy={buttonNativeProperties['aria-describedby']}\n        disabled={isItemDisabled(item)}\n      >\n        {(keytipAttributes: IKeytipDataProps): JSX.Element => (\n          <button ref={this._btn} {...buttonNativeProperties} {...itemButtonProperties} {...keytipAttributes}>\n            <ChildrenRenderer\n              componentRef={item.componentRef}\n              item={item}\n              classNames={classNames}\n              index={index}\n              onCheckmarkClick={hasCheckmarks && onItemClick ? onItemClick : undefined}\n              hasIcons={hasIcons}\n              openSubMenu={openSubMenu}\n              dismissSubMenu={dismissSubMenu}\n              dismissMenu={dismissMenu}\n              getSubmenuTarget={this._getSubmenuTarget}\n              {...itemProps}\n            />\n          </button>\n        )}\n      </KeytipData>\n    );\n  }\n\n  protected _getSubmenuTarget = (): HTMLElement | undefined => {\n    return this._btn.current ? this._btn.current : undefined;\n  };\n}\n","import * as React from 'react';\nimport { IVerticalDividerProps, IVerticalDividerPropsStyles, IVerticalDividerStyles } from './VerticalDivider.types';\nimport { classNamesFunction } from '../../Utilities';\nconst getClassNames = classNamesFunction<IVerticalDividerPropsStyles, IVerticalDividerStyles>();\n\nexport const VerticalDividerBase = (props: IVerticalDividerProps) => {\n  // tslint:disable-next-line:deprecation\n  const { styles, theme, getClassNames: deprecatedGetClassNames, className } = props;\n  const classNames = getClassNames(styles, { theme: theme, getClassNames: deprecatedGetClassNames, className });\n  return (\n    <span className={classNames.wrapper}>\n      <span className={classNames.divider} />\n    </span>\n  );\n};\n","import * as React from 'react';\nimport { IVerticalDividerProps, IVerticalDividerStyles, IVerticalDividerPropsStyles } from './VerticalDivider.types';\nimport { getStyles } from './VerticalDivider.styles';\nimport { VerticalDividerBase } from './VerticalDivider.base';\nimport { styled } from '../../Utilities';\n\nexport const VerticalDivider: React.FunctionComponent<IVerticalDividerProps> = styled<\n  IVerticalDividerProps,\n  IVerticalDividerPropsStyles,\n  IVerticalDividerStyles\n>(VerticalDividerBase, getStyles, undefined, {\n  scope: 'VerticalDivider',\n});\n","import { IVerticalDividerPropsStyles, IVerticalDividerStyles } from './VerticalDivider.types';\nimport { IStyleFunction } from '../../Utilities';\n\nexport const getStyles: IStyleFunction<IVerticalDividerPropsStyles, IVerticalDividerStyles> = (\n  props: IVerticalDividerPropsStyles,\n): IVerticalDividerStyles => {\n  // tslint:disable-next-line:deprecation\n  const { theme, getClassNames, className } = props;\n\n  if (!theme) {\n    throw new Error('Theme is undefined or null.');\n  }\n\n  if (getClassNames) {\n    const names = getClassNames(theme);\n    return {\n      wrapper: [names.wrapper],\n      divider: [names.divider],\n    };\n  }\n\n  return {\n    wrapper: [\n      {\n        display: 'inline-flex',\n        height: '100%',\n        alignItems: 'center',\n      },\n      className,\n    ],\n    divider: [\n      {\n        width: 1,\n        height: '100%',\n        backgroundColor: theme.palette.neutralTertiaryAlt,\n      },\n    ],\n  };\n};\n","import * as React from 'react';\nimport {\n  buttonProperties,\n  getNativeProps,\n  KeyCodes,\n  mergeAriaAttributeValues,\n  memoizeFunction,\n  Async,\n  EventGroup,\n} from '../../../Utilities';\nimport { ContextualMenuItem } from '../ContextualMenuItem';\nimport { IContextualMenuItem } from '../ContextualMenu.types';\nimport { IMenuItemClassNames, getSplitButtonVerticalDividerClassNames } from '../ContextualMenu.classNames';\nimport { KeytipData } from '../../../KeytipData';\nimport { isItemDisabled, hasSubmenu, getMenuItemAriaRole } from '../../../utilities/contextualMenu/index';\nimport { VerticalDivider } from '../../../Divider';\nimport { ContextualMenuItemWrapper } from './ContextualMenuItemWrapper';\nimport { IKeytipProps } from '../../Keytip/Keytip.types';\nimport { IContextualMenuItemWrapperProps } from './ContextualMenuItemWrapper.types';\n\nexport interface IContextualMenuSplitButtonState {}\n\nconst TouchIdleDelay = 500; /* ms */\n\nexport class ContextualMenuSplitButton extends ContextualMenuItemWrapper {\n  private _splitButton: HTMLDivElement;\n  private _lastTouchTimeoutId: number | undefined;\n  private _processingTouch: boolean;\n\n  private _async: Async;\n  private _events: EventGroup;\n\n  private _getMemoizedMenuButtonKeytipProps = memoizeFunction((keytipProps: IKeytipProps) => {\n    return {\n      ...keytipProps,\n      hasMenu: true,\n    };\n  });\n\n  constructor(props: IContextualMenuItemWrapperProps) {\n    super(props);\n\n    this._async = new Async(this);\n    this._events = new EventGroup(this);\n  }\n\n  public componentDidMount() {\n    if (this._splitButton && 'onpointerdown' in this._splitButton) {\n      this._events.on(this._splitButton, 'pointerdown', this._onPointerDown, true);\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this._async.dispose();\n    this._events.dispose();\n  }\n\n  public render(): JSX.Element | null {\n    const {\n      item,\n      classNames,\n      index,\n      focusableElementIndex,\n      totalItemCount,\n      hasCheckmarks,\n      hasIcons,\n      onItemMouseLeave,\n      expandedMenuItemKey,\n    } = this.props;\n\n    const itemHasSubmenu = hasSubmenu(item);\n\n    let { keytipProps } = item;\n    if (keytipProps) {\n      keytipProps = this._getMemoizedMenuButtonKeytipProps(keytipProps);\n    }\n\n    return (\n      <KeytipData keytipProps={keytipProps} disabled={isItemDisabled(item)}>\n        {(keytipAttributes: any): JSX.Element => (\n          <div\n            data-ktp-target={keytipAttributes['data-ktp-target']}\n            ref={(splitButton: HTMLDivElement) => (this._splitButton = splitButton)}\n            role={getMenuItemAriaRole(item)}\n            aria-label={item.ariaLabel}\n            className={classNames.splitContainer}\n            aria-disabled={isItemDisabled(item)}\n            aria-expanded={itemHasSubmenu ? item.key === expandedMenuItemKey : undefined}\n            aria-haspopup={true}\n            aria-describedby={mergeAriaAttributeValues(item.ariaDescription, keytipAttributes['aria-describedby'])}\n            aria-checked={item.isChecked || item.checked}\n            aria-posinset={focusableElementIndex + 1}\n            aria-setsize={totalItemCount}\n            onMouseEnter={this._onItemMouseEnterPrimary}\n            onMouseLeave={\n              onItemMouseLeave ? onItemMouseLeave.bind(this, { ...item, subMenuProps: null, items: null }) : undefined\n            }\n            onMouseMove={this._onItemMouseMovePrimary}\n            onKeyDown={this._onItemKeyDown}\n            onClick={this._executeItemClick}\n            onTouchStart={this._onTouchStart}\n            tabIndex={0}\n            data-is-focusable={true}\n            aria-roledescription={item['aria-roledescription']}\n          >\n            {this._renderSplitPrimaryButton(item, classNames, index, hasCheckmarks!, hasIcons!)}\n            {this._renderSplitDivider(item)}\n            {this._renderSplitIconButton(item, classNames, index, keytipAttributes)}\n          </div>\n        )}\n      </KeytipData>\n    );\n  }\n\n  protected _onItemKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    const { item, onItemKeyDown } = this.props;\n    if (ev.which === KeyCodes.enter) {\n      this._executeItemClick(ev);\n      ev.preventDefault();\n      ev.stopPropagation();\n    } else if (onItemKeyDown) {\n      onItemKeyDown(item, ev);\n    }\n  };\n\n  protected _getSubmenuTarget = (): HTMLElement | undefined => {\n    return this._splitButton;\n  };\n\n  private _renderSplitPrimaryButton(\n    item: IContextualMenuItem,\n    // tslint:disable-next-line:deprecation\n    classNames: IMenuItemClassNames,\n    index: number,\n    hasCheckmarks: boolean,\n    hasIcons: boolean,\n  ) {\n    const { contextualMenuItemAs: ChildrenRenderer = ContextualMenuItem, onItemClick } = this.props;\n\n    const itemProps: IContextualMenuItem = {\n      key: item.key,\n      disabled: isItemDisabled(item) || item.primaryDisabled,\n      // tslint:disable:deprecation\n      name: item.name,\n      text: item.text || item.name,\n      secondaryText: item.secondaryText,\n      // tslint:enable:deprecation\n      className: classNames.splitPrimary,\n      canCheck: item.canCheck,\n      isChecked: item.isChecked,\n      checked: item.checked,\n      iconProps: item.iconProps,\n      onRenderIcon: item.onRenderIcon,\n      data: item.data,\n      'data-is-focusable': false,\n    };\n\n    const { itemProps: itemComponentProps } = item;\n\n    return (\n      <button {...getNativeProps(itemProps, buttonProperties)}>\n        <ChildrenRenderer\n          data-is-focusable={false}\n          item={itemProps}\n          classNames={classNames}\n          index={index}\n          onCheckmarkClick={hasCheckmarks && onItemClick ? onItemClick : undefined}\n          hasIcons={hasIcons}\n          {...itemComponentProps}\n        />\n      </button>\n    );\n  }\n\n  private _renderSplitDivider(item: IContextualMenuItem) {\n    const getDividerClassNames =\n      item.getSplitButtonVerticalDividerClassNames || getSplitButtonVerticalDividerClassNames;\n    return <VerticalDivider getClassNames={getDividerClassNames} />;\n  }\n\n  private _renderSplitIconButton(\n    item: IContextualMenuItem,\n    classNames: IMenuItemClassNames, // tslint:disable-line:deprecation\n    index: number,\n    keytipAttributes: any,\n  ) {\n    const {\n      contextualMenuItemAs: ChildrenRenderer = ContextualMenuItem,\n      onItemMouseLeave,\n      onItemMouseDown,\n      openSubMenu,\n      dismissSubMenu,\n      dismissMenu,\n    } = this.props;\n\n    const itemProps: IContextualMenuItem = {\n      onClick: this._onIconItemClick,\n      disabled: isItemDisabled(item),\n      className: classNames.splitMenu,\n      subMenuProps: item.subMenuProps,\n      submenuIconProps: item.submenuIconProps,\n      split: true,\n      key: item.key,\n    };\n\n    const buttonProps = {\n      ...getNativeProps<React.ButtonHTMLAttributes<HTMLButtonElement>>(itemProps, buttonProperties),\n      ...{\n        onMouseEnter: this._onItemMouseEnterIcon,\n        onMouseLeave: onItemMouseLeave ? onItemMouseLeave.bind(this, item) : undefined,\n        onMouseDown: (ev: React.MouseEvent<HTMLButtonElement>) =>\n          onItemMouseDown ? onItemMouseDown(item, ev) : undefined,\n        onMouseMove: this._onItemMouseMoveIcon,\n        'data-is-focusable': false,\n        'data-ktp-execute-target': keytipAttributes['data-ktp-execute-target'],\n        'aria-hidden': true,\n      },\n    };\n\n    const { itemProps: itemComponentProps } = item;\n\n    return (\n      <button {...buttonProps}>\n        <ChildrenRenderer\n          componentRef={item.componentRef}\n          item={itemProps}\n          classNames={classNames}\n          index={index}\n          hasIcons={false}\n          openSubMenu={openSubMenu}\n          dismissSubMenu={dismissSubMenu}\n          dismissMenu={dismissMenu}\n          getSubmenuTarget={this._getSubmenuTarget}\n          {...itemComponentProps}\n        />\n      </button>\n    );\n  }\n\n  private _onItemMouseEnterPrimary = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemMouseEnter } = this.props;\n    if (onItemMouseEnter) {\n      onItemMouseEnter({ ...item, subMenuProps: undefined, items: undefined }, ev, this._splitButton);\n    }\n  };\n\n  private _onItemMouseEnterIcon = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemMouseEnter } = this.props;\n    if (onItemMouseEnter) {\n      onItemMouseEnter(item, ev, this._splitButton);\n    }\n  };\n\n  private _onItemMouseMovePrimary = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemMouseMove } = this.props;\n    if (onItemMouseMove) {\n      onItemMouseMove({ ...item, subMenuProps: undefined, items: undefined }, ev, this._splitButton);\n    }\n  };\n\n  private _onItemMouseMoveIcon = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemMouseMove } = this.props;\n    if (onItemMouseMove) {\n      onItemMouseMove(item, ev, this._splitButton);\n    }\n  };\n\n  private _onIconItemClick = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemClickBase } = this.props;\n    if (onItemClickBase) {\n      onItemClickBase(item, ev, (this._splitButton ? this._splitButton : ev.currentTarget) as HTMLElement);\n    }\n  };\n\n  private _executeItemClick = (ev: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>): void => {\n    const { item, executeItemClick, onItemClick } = this.props;\n\n    if (item.disabled || item.isDisabled) {\n      return;\n    }\n\n    if (this._processingTouch && onItemClick) {\n      return onItemClick(item, ev);\n    }\n\n    if (executeItemClick) {\n      executeItemClick(item, ev);\n    }\n  };\n\n  private _onTouchStart = (ev: React.TouchEvent<HTMLElement>): void => {\n    if (this._splitButton && !('onpointerdown' in this._splitButton)) {\n      this._handleTouchAndPointerEvent(ev);\n    }\n  };\n\n  private _onPointerDown = (ev: PointerEvent): void => {\n    if (ev.pointerType === 'touch') {\n      this._handleTouchAndPointerEvent(ev);\n      ev.preventDefault();\n      ev.stopImmediatePropagation();\n    }\n  };\n\n  private _handleTouchAndPointerEvent(ev: React.TouchEvent<HTMLElement> | PointerEvent) {\n    const { onTap } = this.props;\n\n    if (onTap) {\n      onTap(ev);\n    }\n    // If we already have an existing timeout from a previous touch/pointer event\n    // cancel that timeout so we can set a new one.\n    if (this._lastTouchTimeoutId) {\n      this._async.clearTimeout(this._lastTouchTimeoutId);\n      this._lastTouchTimeoutId = undefined;\n    }\n    this._processingTouch = true;\n    this._lastTouchTimeoutId = this._async.setTimeout(() => {\n      this._processingTouch = false;\n      this._lastTouchTimeoutId = undefined;\n    }, TouchIdleDelay);\n  }\n}\n","import * as React from 'react';\nimport {\n  IContextualMenuProps,\n  IContextualMenuItem,\n  ContextualMenuItemType,\n  IContextualMenuListProps,\n  IContextualMenuStyleProps,\n  IContextualMenuStyles,\n  IContextualMenuItemRenderProps,\n} from './ContextualMenu.types';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport { FocusZone, FocusZoneDirection, IFocusZoneProps, FocusZoneTabbableElements } from '../../FocusZone';\nimport { IMenuItemClassNames, IContextualMenuClassNames } from './ContextualMenu.classNames';\nimport {\n  divProperties,\n  getNativeProps,\n  shallowCompare,\n  warnDeprecations,\n  Async,\n  EventGroup,\n  assign,\n  classNamesFunction,\n  css,\n  getDocument,\n  getFirstFocusable,\n  getId,\n  getLastFocusable,\n  getRTL,\n  getWindow,\n  IRenderFunction,\n  IPoint,\n  KeyCodes,\n  shouldWrapFocus,\n  IStyleFunctionOrObject,\n  isIOS,\n  isMac,\n  initializeComponentRef,\n  memoizeFunction,\n} from '../../Utilities';\nimport { hasSubmenu, getIsChecked, isItemDisabled } from '../../utilities/contextualMenu/index';\nimport { withResponsiveMode, ResponsiveMode } from '../../utilities/decorators/withResponsiveMode';\nimport { Callout, ICalloutContentStyleProps, ICalloutContentStyles, Target } from '../../Callout';\nimport { ContextualMenuItem } from './ContextualMenuItem';\nimport {\n  ContextualMenuSplitButton,\n  ContextualMenuButton,\n  ContextualMenuAnchor,\n} from './ContextualMenuItemWrapper/index';\nimport { IProcessedStyleSet, concatStyleSetsWithProps } from '../../Styling';\nimport { IContextualMenuItemStyleProps, IContextualMenuItemStyles } from './ContextualMenuItem.types';\nimport { getItemStyles } from './ContextualMenu.classNames';\n\nconst getClassNames = classNamesFunction<IContextualMenuStyleProps, IContextualMenuStyles>();\nconst getContextualMenuItemClassNames = classNamesFunction<IContextualMenuItemStyleProps, IContextualMenuItemStyles>();\n\nexport interface IContextualMenuState {\n  expandedMenuItemKey?: string;\n  /** True if the menu was expanded by mouse click OR hover (as opposed to by keyboard) */\n  expandedByMouseClick?: boolean;\n  dismissedMenuItemKey?: string;\n  contextualMenuItems?: IContextualMenuItem[];\n  contextualMenuTarget?: Element;\n  submenuTarget?: Element;\n  positions?: any;\n  slideDirectionalClassName?: string;\n  subMenuId?: string;\n  submenuDirection?: DirectionalHint;\n}\n\nexport function getSubmenuItems(item: IContextualMenuItem): IContextualMenuItem[] | undefined {\n  return item.subMenuProps ? item.subMenuProps.items : item.items;\n}\n\n/**\n * Returns true if a list of menu items can contain a checkbox\n */\nexport function canAnyMenuItemsCheck(items: IContextualMenuItem[]): boolean {\n  return items.some(item => {\n    if (item.canCheck) {\n      return true;\n    }\n\n    // If the item is a section, check if any of the items in the section can check.\n    if (item.sectionProps && item.sectionProps.items.some(submenuItem => submenuItem.canCheck === true)) {\n      return true;\n    }\n\n    return false;\n  });\n}\n\nconst NavigationIdleDelay = 250 /* ms */;\n\nconst COMPONENT_NAME = 'ContextualMenu';\n\nconst _getMenuItemStylesFunction = memoizeFunction(\n  (\n    ...styles: (IStyleFunctionOrObject<IContextualMenuItemStyleProps, IContextualMenuItemStyles> | undefined)[]\n  ): IStyleFunctionOrObject<IContextualMenuItemStyleProps, IContextualMenuItemStyles> => {\n    return (styleProps: IContextualMenuItemStyleProps) =>\n      concatStyleSetsWithProps(styleProps, getItemStyles, ...styles);\n  },\n);\n\n@withResponsiveMode\nexport class ContextualMenuBase extends React.Component<IContextualMenuProps, IContextualMenuState> {\n  // The default ContextualMenu properties have no items and beak, the default submenu direction is right and top.\n  public static defaultProps: IContextualMenuProps = {\n    items: [],\n    shouldFocusOnMount: true,\n    gapSpace: 0,\n    directionalHint: DirectionalHint.bottomAutoEdge,\n    beakWidth: 16,\n  };\n\n  private _async: Async;\n  private _events: EventGroup;\n  private _id: string;\n  private _host: HTMLElement;\n  private _previousActiveElement: HTMLElement | null;\n  private _isFocusingPreviousElement: boolean;\n  private _enterTimerId: number | undefined;\n  private _targetWindow: Window;\n  private _target: Element | MouseEvent | IPoint | null;\n  private _isScrollIdle: boolean;\n  private _scrollIdleTimeoutId: number | undefined;\n  /** True if the most recent keydown event was for alt (option) or meta (command). */\n  private _lastKeyDownWasAltOrMeta: boolean | undefined;\n  private _shouldUpdateFocusOnMouseEvent: boolean;\n  private _gotMouseMove: boolean;\n  private _mounted = false;\n\n  private _adjustedFocusZoneProps: IFocusZoneProps;\n\n  // tslint:disable-next-line:deprecation\n  private _classNames: IProcessedStyleSet<IContextualMenuStyles> | IContextualMenuClassNames;\n\n  constructor(props: IContextualMenuProps) {\n    super(props);\n\n    this._async = new Async(this);\n    this._events = new EventGroup(this);\n    initializeComponentRef(this);\n\n    warnDeprecations(COMPONENT_NAME, props, {\n      getMenuClassNames: 'styles',\n    });\n\n    this.state = {\n      contextualMenuItems: undefined,\n      subMenuId: getId('ContextualMenu'),\n    };\n\n    this._id = props.id || getId('ContextualMenu');\n    this._isFocusingPreviousElement = false;\n    this._isScrollIdle = true;\n    this._shouldUpdateFocusOnMouseEvent = !this.props.delayUpdateFocusOnHover;\n    this._gotMouseMove = false;\n  }\n\n  public dismiss = (ev?: any, dismissAll?: boolean) => {\n    const { onDismiss } = this.props;\n\n    if (onDismiss) {\n      onDismiss(ev, dismissAll);\n    }\n  };\n\n  public shouldComponentUpdate(newProps: IContextualMenuProps, newState: IContextualMenuState): boolean {\n    if (!newProps.shouldUpdateWhenHidden && this.props.hidden && newProps.hidden) {\n      // Do not update when hidden.\n      return false;\n    }\n\n    return !shallowCompare(this.props, newProps) || !shallowCompare(this.state, newState);\n  }\n\n  // tslint:disable-next-line function-name\n  public UNSAFE_componentWillUpdate(newProps: IContextualMenuProps): void {\n    if (newProps.target !== this.props.target) {\n      const newTarget = newProps.target;\n      this._setTargetWindowAndElement(newTarget!);\n    }\n\n    if (this._isHidden(newProps) !== this._isHidden(this.props)) {\n      if (this._isHidden(newProps)) {\n        this._onMenuClosed();\n      } else {\n        this._onMenuOpened();\n        this._previousActiveElement = this._targetWindow\n          ? (this._targetWindow.document.activeElement as HTMLElement)\n          : null;\n      }\n    }\n    if (newProps.delayUpdateFocusOnHover !== this.props.delayUpdateFocusOnHover) {\n      // update shouldUpdateFocusOnMouseEvent to follow what was passed in\n      this._shouldUpdateFocusOnMouseEvent = !newProps.delayUpdateFocusOnHover;\n\n      // If shouldUpdateFocusOnMouseEvent is false, we need to reset gotMouseMove to false\n      this._gotMouseMove = this._shouldUpdateFocusOnMouseEvent && this._gotMouseMove;\n    }\n  }\n\n  // Invoked once, both on the client and server, immediately before the initial rendering occurs.\n  // tslint:disable-next-line function-name\n  public UNSAFE_componentWillMount() {\n    const target = this.props.target;\n    this._setTargetWindowAndElement(target!);\n    if (!this.props.hidden) {\n      this._previousActiveElement = this._targetWindow\n        ? (this._targetWindow.document.activeElement as HTMLElement)\n        : null;\n    }\n  }\n\n  // Invoked once, only on the client (not on the server), immediately after the initial rendering occurs.\n  public componentDidMount(): void {\n    if (!this.props.hidden) {\n      this._onMenuOpened();\n    }\n\n    this._mounted = true;\n  }\n\n  // Invoked immediately before a component is unmounted from the DOM.\n  public componentWillUnmount() {\n    this._tryFocusPreviousActiveElement();\n\n    if (this.props.onMenuDismissed) {\n      this.props.onMenuDismissed(this.props);\n    }\n\n    this._events.dispose();\n    this._async.dispose();\n    this._mounted = false;\n  }\n\n  public render(): JSX.Element | null {\n    let { isBeakVisible } = this.props;\n\n    const {\n      items,\n      labelElementId,\n      id,\n      className,\n      beakWidth,\n      directionalHint,\n      directionalHintForRTL,\n      alignTargetEdge,\n      gapSpace,\n      coverTarget,\n      ariaLabel,\n      doNotLayer,\n      target,\n      bounds,\n      useTargetWidth,\n      useTargetAsMinWidth,\n      directionalHintFixed,\n      shouldFocusOnMount,\n      shouldFocusOnContainer,\n      title,\n      styles,\n      theme,\n      calloutProps,\n      onRenderSubMenu = this._onRenderSubMenu,\n      onRenderMenuList = this._onRenderMenuList,\n      focusZoneProps,\n      // tslint:disable-next-line:deprecation\n      getMenuClassNames,\n    } = this.props;\n\n    this._classNames = getMenuClassNames\n      ? getMenuClassNames(theme!, className)\n      : getClassNames(styles, {\n          theme: theme!,\n          className: className,\n        });\n\n    const hasIcons = itemsHaveIcons(items);\n\n    function itemsHaveIcons(contextualMenuItems: IContextualMenuItem[]): boolean {\n      for (const item of contextualMenuItems) {\n        if (!!item.iconProps) {\n          return true;\n        }\n\n        if (\n          item.itemType === ContextualMenuItemType.Section &&\n          item.sectionProps &&\n          itemsHaveIcons(item.sectionProps.items)\n        ) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    this._adjustedFocusZoneProps = { ...focusZoneProps, direction: this._getFocusZoneDirection() };\n\n    const hasCheckmarks = canAnyMenuItemsCheck(items);\n    const submenuProps = this.state.expandedMenuItemKey && this.props.hidden !== true ? this._getSubmenuProps() : null;\n\n    isBeakVisible = isBeakVisible === undefined ? this.props.responsiveMode! <= ResponsiveMode.medium : isBeakVisible;\n    /**\n     * When useTargetWidth is true, get the width of the target element and apply it for the context menu container\n     */\n    let contextMenuStyle;\n    const targetAsHtmlElement = this._target as HTMLElement;\n    if ((useTargetWidth || useTargetAsMinWidth) && targetAsHtmlElement && targetAsHtmlElement.offsetWidth) {\n      const targetBoundingRect = targetAsHtmlElement.getBoundingClientRect();\n      const targetWidth = targetBoundingRect.width - 2 /* Accounts for 1px border */;\n\n      if (useTargetWidth) {\n        contextMenuStyle = {\n          width: targetWidth,\n        };\n      } else if (useTargetAsMinWidth) {\n        contextMenuStyle = {\n          minWidth: targetWidth,\n        };\n      }\n    }\n\n    // The menu should only return if items were provided, if no items were provided then it should not appear.\n    if (items && items.length > 0) {\n      let totalItemCount = 0;\n      for (const item of items) {\n        if (item.itemType !== ContextualMenuItemType.Divider && item.itemType !== ContextualMenuItemType.Header) {\n          const itemCount = item.customOnRenderListLength ? item.customOnRenderListLength : 1;\n          totalItemCount += itemCount;\n        }\n      }\n\n      const calloutStyles = this._classNames.subComponentStyles\n        ? (this._classNames.subComponentStyles.callout as IStyleFunctionOrObject<\n            ICalloutContentStyleProps,\n            ICalloutContentStyles\n          >)\n        : undefined;\n\n      return (\n        <Callout\n          styles={calloutStyles}\n          {...calloutProps}\n          target={target}\n          isBeakVisible={isBeakVisible}\n          beakWidth={beakWidth}\n          directionalHint={directionalHint}\n          directionalHintForRTL={directionalHintForRTL}\n          gapSpace={gapSpace}\n          coverTarget={coverTarget}\n          doNotLayer={doNotLayer}\n          className={css('ms-ContextualMenu-Callout', calloutProps && calloutProps.className)}\n          setInitialFocus={shouldFocusOnMount}\n          onDismiss={this.props.onDismiss}\n          onScroll={this._onScroll}\n          bounds={bounds}\n          directionalHintFixed={directionalHintFixed}\n          alignTargetEdge={alignTargetEdge}\n          hidden={this.props.hidden}\n        >\n          <div\n            aria-label={ariaLabel}\n            aria-labelledby={labelElementId}\n            style={contextMenuStyle}\n            ref={(host: HTMLDivElement) => (this._host = host)}\n            id={id}\n            className={this._classNames.container}\n            tabIndex={shouldFocusOnContainer ? 0 : -1}\n            onKeyDown={this._onMenuKeyDown}\n            onKeyUp={this._onKeyUp}\n            onFocusCapture={this._onMenuFocusCapture}\n          >\n            {title && <div className={this._classNames.title}> {title} </div>}\n            {items && items.length ? (\n              <FocusZone\n                {...this._adjustedFocusZoneProps}\n                className={this._classNames.root}\n                isCircularNavigation={true}\n                handleTabKey={FocusZoneTabbableElements.all}\n              >\n                {onRenderMenuList(\n                  {\n                    items,\n                    totalItemCount,\n                    hasCheckmarks,\n                    hasIcons,\n                    defaultMenuItemRenderer: this._renderMenuItem,\n                  },\n                  this._onRenderMenuList,\n                )}\n              </FocusZone>\n            ) : null}\n            {submenuProps && onRenderSubMenu(submenuProps, this._onRenderSubMenu)}\n          </div>\n        </Callout>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Return whether the contextual menu is hidden.\n   * Undefined value for hidden is equivalent to hidden being false.\n   * @param props - Props for the component\n   */\n  private _isHidden(props: IContextualMenuProps) {\n    return !!props.hidden;\n  }\n\n  private _onMenuOpened() {\n    this._events.on(this._targetWindow, 'resize', this.dismiss);\n    this._shouldUpdateFocusOnMouseEvent = !this.props.delayUpdateFocusOnHover;\n    this._gotMouseMove = false;\n    this.props.onMenuOpened && this.props.onMenuOpened(this.props);\n  }\n\n  private _onMenuClosed() {\n    this._events.off(this._targetWindow, 'resize', this.dismiss);\n    this._tryFocusPreviousActiveElement();\n\n    if (this.props.onMenuDismissed) {\n      this.props.onMenuDismissed(this.props);\n    }\n\n    this._shouldUpdateFocusOnMouseEvent = !this.props.delayUpdateFocusOnHover;\n\n    // We need to dismiss any submenu related state properties,\n    // so that when the menu is shown again, the submenu is collapsed\n    this.setState({\n      expandedByMouseClick: undefined,\n      dismissedMenuItemKey: undefined,\n      expandedMenuItemKey: undefined,\n      submenuTarget: undefined,\n    });\n  }\n\n  private _tryFocusPreviousActiveElement() {\n    if (this._isFocusingPreviousElement && this._previousActiveElement) {\n      // This slight delay is required so that we can unwind the stack, const react try to mess with focus, and then\n      // apply the correct focus. Without the setTimeout, we end up focusing the correct thing, and then React wants\n      // to reset the focus back to the thing it thinks should have been focused.\n      // Note: Cannot be replaced by this._async.setTimout because those will be removed by the time this is called.\n      setTimeout(() => {\n        this._previousActiveElement && this._previousActiveElement!.focus();\n      }, 0);\n    }\n  }\n\n  /**\n   * Gets the focusZoneDirection by using the arrowDirection if specified,\n   * the direction specificed in the focusZoneProps, or defaults to FocusZoneDirection.vertical\n   */\n  private _getFocusZoneDirection() {\n    const { focusZoneProps } = this.props;\n    return focusZoneProps && focusZoneProps.direction !== undefined\n      ? focusZoneProps.direction\n      : FocusZoneDirection.vertical;\n  }\n\n  private _onRenderSubMenu(\n    subMenuProps: IContextualMenuProps,\n    defaultRender?: IRenderFunction<IContextualMenuProps>,\n  ): JSX.Element {\n    throw Error(\n      'ContextualMenuBase: onRenderSubMenu callback is null or undefined. ' +\n        'Please ensure to set `onRenderSubMenu` property either manually or with `styled` helper.',\n    );\n  }\n\n  private _onRenderMenuList = (\n    menuListProps: IContextualMenuListProps,\n    defaultRender?: IRenderFunction<IContextualMenuListProps>,\n  ): JSX.Element => {\n    let indexCorrection = 0;\n    return (\n      <ul className={this._classNames.list} onKeyDown={this._onKeyDown} onKeyUp={this._onKeyUp} role=\"menu\">\n        {menuListProps.items.map((item, index) => {\n          const menuItem = this._renderMenuItem({\n            ...item,\n            index,\n            focusableElementIndex: indexCorrection,\n            totalItemCount: menuListProps.totalItemCount,\n            hasCheckmarks: menuListProps.hasCheckmarks,\n            hasIcons: menuListProps.hasIcons,\n          });\n          if (item.itemType !== ContextualMenuItemType.Divider && item.itemType !== ContextualMenuItemType.Header) {\n            const indexIncrease = item.customOnRenderListLength ? item.customOnRenderListLength : 1;\n            indexCorrection += indexIncrease;\n          }\n          return menuItem;\n        })}\n      </ul>\n    );\n  };\n\n  private _renderMenuItem = (item: IContextualMenuItemRenderProps): React.ReactNode => {\n    const renderedItems: React.ReactNode[] = [];\n    const iconProps = item.iconProps || { iconName: 'None' };\n    const {\n      getItemClassNames, // tslint:disable-line:deprecation\n      itemProps,\n      index,\n      focusableElementIndex,\n      totalItemCount,\n      hasCheckmarks,\n      hasIcons,\n    } = item;\n    const styles = itemProps ? itemProps.styles : undefined;\n\n    // We only send a dividerClassName when the item to be rendered is a divider.\n    // For all other cases, the default divider style is used.\n    const dividerClassName = item.itemType === ContextualMenuItemType.Divider ? item.className : undefined;\n    const subMenuIconClassName = item.submenuIconProps ? item.submenuIconProps.className : '';\n\n    // tslint:disable-next-line:deprecation\n    let itemClassNames: IMenuItemClassNames;\n\n    // IContextualMenuItem#getItemClassNames for backwards compatibility\n    // otherwise uses mergeStyles for class names.\n    if (getItemClassNames) {\n      itemClassNames = getItemClassNames(\n        this.props.theme!,\n        isItemDisabled(item),\n        this.state.expandedMenuItemKey === item.key,\n        !!getIsChecked(item),\n        !!item.href,\n        iconProps.iconName !== 'None',\n        item.className,\n        dividerClassName,\n        iconProps.className,\n        subMenuIconClassName,\n        item.primaryDisabled,\n      );\n    } else {\n      const itemStyleProps: IContextualMenuItemStyleProps = {\n        theme: this.props.theme!,\n        disabled: isItemDisabled(item),\n        expanded: this.state.expandedMenuItemKey === item.key,\n        checked: !!getIsChecked(item),\n        isAnchorLink: !!item.href,\n        knownIcon: iconProps.iconName !== 'None',\n        itemClassName: item.className,\n        dividerClassName,\n        iconClassName: iconProps.className,\n        subMenuClassName: subMenuIconClassName,\n        primaryDisabled: item.primaryDisabled,\n      };\n\n      // We need to generate default styles then override if styles are provided\n      // since the ContextualMenu currently handles item classNames.\n      itemClassNames = getContextualMenuItemClassNames(\n        _getMenuItemStylesFunction(this._classNames.subComponentStyles?.menuItem, styles),\n        itemStyleProps,\n      );\n    }\n\n    // tslint:disable-next-line:deprecation\n    if (item.text === '-' || item.name === '-') {\n      item.itemType = ContextualMenuItemType.Divider;\n    }\n    switch (item.itemType) {\n      case ContextualMenuItemType.Divider:\n        renderedItems.push(this._renderSeparator(index, itemClassNames));\n        break;\n      case ContextualMenuItemType.Header:\n        renderedItems.push(this._renderSeparator(index, itemClassNames));\n        const headerItem = this._renderHeaderMenuItem(item, itemClassNames, index, hasCheckmarks, hasIcons);\n        renderedItems.push(this._renderListItem(headerItem, item.key || index, itemClassNames, item.title));\n        break;\n      case ContextualMenuItemType.Section:\n        renderedItems.push(this._renderSectionItem(item, itemClassNames, index, hasCheckmarks, hasIcons));\n        break;\n      default:\n        const menuItem = this._renderNormalItem(\n          item,\n          itemClassNames,\n          index,\n          focusableElementIndex,\n          totalItemCount,\n          hasCheckmarks,\n          hasIcons,\n        );\n        renderedItems.push(this._renderListItem(menuItem, item.key || index, itemClassNames, item.title));\n        break;\n    }\n\n    return renderedItems;\n  };\n\n  private _renderSectionItem(\n    sectionItem: IContextualMenuItem,\n    // tslint:disable-next-line:deprecation\n    menuClassNames: IMenuItemClassNames,\n    index: number,\n    hasCheckmarks: boolean,\n    hasIcons: boolean,\n  ) {\n    const sectionProps = sectionItem.sectionProps;\n    if (!sectionProps) {\n      return;\n    }\n\n    let headerItem;\n    let groupProps;\n    if (sectionProps.title) {\n      // Since title is a user-facing string, it needs to be stripped of whitespace in order to build a valid element ID\n      const id = this._id + sectionProps.title.replace(/\\s/g, '');\n      const headerContextualMenuItem: IContextualMenuItem = {\n        key: `section-${sectionProps.title}-title`,\n        itemType: ContextualMenuItemType.Header,\n        text: sectionProps.title,\n        id: id,\n      };\n      groupProps = {\n        role: 'group',\n        'aria-labelledby': id,\n      };\n      headerItem = this._renderHeaderMenuItem(headerContextualMenuItem, menuClassNames, index, hasCheckmarks, hasIcons);\n    }\n\n    if (sectionProps.items && sectionProps.items.length > 0) {\n      return (\n        <li role=\"presentation\" key={sectionProps.key || sectionItem.key || `section-${index}`}>\n          <div {...groupProps}>\n            <ul className={this._classNames.list}>\n              {sectionProps.topDivider && this._renderSeparator(index, menuClassNames, true, true)}\n              {headerItem &&\n                this._renderListItem(headerItem, sectionItem.key || index, menuClassNames, sectionItem.title)}\n              {sectionProps.items.map((contextualMenuItem, itemsIndex) =>\n                this._renderMenuItem({\n                  ...contextualMenuItem,\n                  index: itemsIndex,\n                  focusableElementIndex: itemsIndex,\n                  totalItemCount: sectionProps.items.length,\n                  hasCheckmarks,\n                  hasIcons,\n                }),\n              )}\n              {sectionProps.bottomDivider && this._renderSeparator(index, menuClassNames, false, true)}\n            </ul>\n          </div>\n        </li>\n      );\n    }\n  }\n\n  private _renderListItem(\n    content: React.ReactNode,\n    key: string | number,\n    classNames: IMenuItemClassNames, // tslint:disable-line:deprecation\n    title?: string,\n  ) {\n    return (\n      <li role=\"presentation\" title={title} key={key} className={classNames.item}>\n        {content}\n      </li>\n    );\n  }\n\n  private _renderSeparator(\n    index: number,\n    classNames: IMenuItemClassNames, // tslint:disable-line:deprecation\n    top?: boolean,\n    fromSection?: boolean,\n  ): React.ReactNode {\n    if (fromSection || index > 0) {\n      return (\n        <li\n          role=\"separator\"\n          key={'separator-' + index + (top === undefined ? '' : top ? '-top' : '-bottom')}\n          className={classNames.divider}\n          aria-hidden=\"true\"\n        />\n      );\n    }\n    return null;\n  }\n\n  private _renderNormalItem(\n    item: IContextualMenuItem,\n    classNames: IMenuItemClassNames, // tslint:disable-line:deprecation\n    index: number,\n    focusableElementIndex: number,\n    totalItemCount: number,\n    hasCheckmarks: boolean,\n    hasIcons: boolean,\n  ): React.ReactNode {\n    if (item.onRender) {\n      return item.onRender(\n        { 'aria-posinset': focusableElementIndex + 1, 'aria-setsize': totalItemCount, ...item },\n        this.dismiss,\n      );\n    }\n    if (item.href) {\n      return this._renderAnchorMenuItem(\n        item,\n        classNames,\n        index,\n        focusableElementIndex,\n        totalItemCount,\n        hasCheckmarks,\n        hasIcons,\n      );\n    }\n\n    if (item.split && hasSubmenu(item)) {\n      return this._renderSplitButton(\n        item,\n        classNames,\n        index,\n        focusableElementIndex,\n        totalItemCount,\n        hasCheckmarks,\n        hasIcons,\n      );\n    }\n\n    return this._renderButtonItem(\n      item,\n      classNames,\n      index,\n      focusableElementIndex,\n      totalItemCount,\n      hasCheckmarks,\n      hasIcons,\n    );\n  }\n\n  private _renderHeaderMenuItem(\n    item: IContextualMenuItem,\n    // tslint:disable-next-line:deprecation\n    classNames: IMenuItemClassNames,\n    index: number,\n    hasCheckmarks: boolean,\n    hasIcons: boolean,\n  ): React.ReactNode {\n    const { contextualMenuItemAs: ChildrenRenderer = ContextualMenuItem } = this.props;\n    const { itemProps, id } = item;\n    const divHtmlProperties =\n      itemProps && getNativeProps<React.HTMLAttributes<HTMLDivElement>>(itemProps, divProperties);\n    return (\n      // tslint:disable-next-line:deprecation\n      <div id={id} className={this._classNames.header} {...divHtmlProperties} style={item.style}>\n        <ChildrenRenderer\n          item={item}\n          classNames={classNames}\n          index={index}\n          onCheckmarkClick={hasCheckmarks ? this._onItemClick : undefined}\n          hasIcons={hasIcons}\n          {...itemProps}\n        />\n      </div>\n    );\n  }\n\n  private _renderAnchorMenuItem(\n    item: IContextualMenuItem,\n    // tslint:disable-next-line:deprecation\n    classNames: IMenuItemClassNames,\n    index: number,\n    focusableElementIndex: number,\n    totalItemCount: number,\n    hasCheckmarks: boolean,\n    hasIcons: boolean,\n  ): React.ReactNode {\n    const { contextualMenuItemAs } = this.props;\n    const { expandedMenuItemKey } = this.state;\n    return (\n      <ContextualMenuAnchor\n        item={item}\n        classNames={classNames}\n        index={index}\n        focusableElementIndex={focusableElementIndex}\n        totalItemCount={totalItemCount}\n        hasCheckmarks={hasCheckmarks}\n        hasIcons={hasIcons}\n        contextualMenuItemAs={contextualMenuItemAs}\n        onItemMouseEnter={this._onItemMouseEnterBase}\n        onItemMouseLeave={this._onMouseItemLeave}\n        onItemMouseMove={this._onItemMouseMoveBase}\n        onItemMouseDown={this._onItemMouseDown}\n        executeItemClick={this._executeItemClick}\n        onItemClick={this._onAnchorClick}\n        onItemKeyDown={this._onItemKeyDown}\n        getSubMenuId={this._getSubMenuId}\n        expandedMenuItemKey={expandedMenuItemKey}\n        openSubMenu={this._onItemSubMenuExpand}\n        dismissSubMenu={this._onSubMenuDismiss}\n        dismissMenu={this.dismiss}\n      />\n    );\n  }\n\n  private _renderButtonItem(\n    item: IContextualMenuItem,\n    // tslint:disable-next-line:deprecation\n    classNames: IMenuItemClassNames,\n    index: number,\n    focusableElementIndex: number,\n    totalItemCount: number,\n    hasCheckmarks?: boolean,\n    hasIcons?: boolean,\n  ) {\n    const { contextualMenuItemAs } = this.props;\n    const { expandedMenuItemKey } = this.state;\n\n    return (\n      <ContextualMenuButton\n        item={item}\n        classNames={classNames}\n        index={index}\n        focusableElementIndex={focusableElementIndex}\n        totalItemCount={totalItemCount}\n        hasCheckmarks={hasCheckmarks}\n        hasIcons={hasIcons}\n        contextualMenuItemAs={contextualMenuItemAs}\n        onItemMouseEnter={this._onItemMouseEnterBase}\n        onItemMouseLeave={this._onMouseItemLeave}\n        onItemMouseMove={this._onItemMouseMoveBase}\n        onItemMouseDown={this._onItemMouseDown}\n        executeItemClick={this._executeItemClick}\n        onItemClick={this._onItemClick}\n        onItemClickBase={this._onItemClickBase}\n        onItemKeyDown={this._onItemKeyDown}\n        getSubMenuId={this._getSubMenuId}\n        expandedMenuItemKey={expandedMenuItemKey}\n        openSubMenu={this._onItemSubMenuExpand}\n        dismissSubMenu={this._onSubMenuDismiss}\n        dismissMenu={this.dismiss}\n      />\n    );\n  }\n\n  private _renderSplitButton(\n    item: IContextualMenuItem,\n    // tslint:disable-next-line:deprecation\n    classNames: IMenuItemClassNames,\n    index: number,\n    focusableElementIndex: number,\n    totalItemCount: number,\n    hasCheckmarks?: boolean,\n    hasIcons?: boolean,\n  ): JSX.Element {\n    const { contextualMenuItemAs } = this.props;\n    const { expandedMenuItemKey } = this.state;\n\n    return (\n      <ContextualMenuSplitButton\n        item={item}\n        classNames={classNames}\n        index={index}\n        focusableElementIndex={focusableElementIndex}\n        totalItemCount={totalItemCount}\n        hasCheckmarks={hasCheckmarks}\n        hasIcons={hasIcons}\n        contextualMenuItemAs={contextualMenuItemAs}\n        onItemMouseEnter={this._onItemMouseEnterBase}\n        onItemMouseLeave={this._onMouseItemLeave}\n        onItemMouseMove={this._onItemMouseMoveBase}\n        onItemMouseDown={this._onItemMouseDown}\n        executeItemClick={this._executeItemClick}\n        onItemClick={this._onItemClick}\n        onItemClickBase={this._onItemClickBase}\n        onItemKeyDown={this._onItemKeyDown}\n        openSubMenu={this._onItemSubMenuExpand}\n        dismissSubMenu={this._onSubMenuDismiss}\n        dismissMenu={this.dismiss}\n        expandedMenuItemKey={expandedMenuItemKey}\n        onTap={this._onPointerAndTouchEvent}\n      />\n    );\n  }\n\n  private _onKeyDown = (ev: React.KeyboardEvent<HTMLElement>): boolean => {\n    // Take note if we are processing an alt (option) or meta (command) keydown.\n    // See comment in _shouldHandleKeyUp for reasoning.\n    this._lastKeyDownWasAltOrMeta = this._isAltOrMeta(ev);\n\n    // On Mac, pressing escape dismisses all levels of native context menus\n    const dismissAllMenus = ev.which === KeyCodes.escape && (isMac() || isIOS());\n\n    return this._keyHandler(ev, this._shouldHandleKeyDown, dismissAllMenus);\n  };\n\n  private _shouldHandleKeyDown = (ev: React.KeyboardEvent<HTMLElement>) => {\n    return (\n      ev.which === KeyCodes.escape ||\n      this._shouldCloseSubMenu(ev) ||\n      (ev.which === KeyCodes.up && (ev.altKey || ev.metaKey))\n    );\n  };\n\n  private _onMenuFocusCapture = (ev: React.FocusEvent<HTMLElement>) => {\n    if (this.props.delayUpdateFocusOnHover) {\n      this._shouldUpdateFocusOnMouseEvent = true;\n    }\n  };\n\n  private _onKeyUp = (ev: React.KeyboardEvent<HTMLElement>): boolean => {\n    return this._keyHandler(ev, this._shouldHandleKeyUp, true /* dismissAllMenus */);\n  };\n\n  /**\n   * We close the menu on key up only if ALL of the following are true:\n   * - Most recent key down was alt or meta (command)\n   * - The alt/meta key down was NOT followed by some other key (such as down/up arrow to\n   *   expand/collapse the menu)\n   * - We're not on a Mac (or iOS)\n   *\n   * This is because on Windows, pressing alt moves focus to the application menu bar or similar,\n   * closing any open context menus. There is not a similar behavior on Macs.\n   */\n  private _shouldHandleKeyUp = (ev: React.KeyboardEvent<HTMLElement>) => {\n    const keyPressIsAltOrMetaAlone = this._lastKeyDownWasAltOrMeta && this._isAltOrMeta(ev);\n    this._lastKeyDownWasAltOrMeta = false;\n    return !!keyPressIsAltOrMetaAlone && !(isIOS() || isMac());\n  };\n\n  /**\n   * Returns true if the key for the event is alt (Mac option) or meta (Mac command).\n   */\n  private _isAltOrMeta(ev: React.KeyboardEvent<HTMLElement>): boolean {\n    return ev.which === KeyCodes.alt || ev.key === 'Meta';\n  }\n\n  /**\n   * Calls `shouldHandleKey` to determine whether the keyboard event should be handled;\n   * if so, stops event propagation and dismisses menu(s).\n   * @param ev - The keyboard event.\n   * @param shouldHandleKey - Returns whether we should handle this keyboard event.\n   * @param dismissAllMenus - If true, dismiss all menus. Otherwise, dismiss only the current menu.\n   * Only does anything if `shouldHandleKey` returns true.\n   * @returns Whether the event was handled.\n   */\n  private _keyHandler = (\n    ev: React.KeyboardEvent<HTMLElement>,\n    shouldHandleKey: (ev: React.KeyboardEvent<HTMLElement>) => boolean,\n    dismissAllMenus?: boolean,\n  ): boolean => {\n    let handled = false;\n\n    if (shouldHandleKey(ev)) {\n      this._isFocusingPreviousElement = true;\n      this.dismiss(ev, dismissAllMenus);\n      ev.preventDefault();\n      ev.stopPropagation();\n      handled = true;\n    }\n\n    return handled;\n  };\n\n  /**\n   * Checks if the submenu should be closed\n   */\n  private _shouldCloseSubMenu = (ev: React.KeyboardEvent<HTMLElement>): boolean => {\n    const submenuCloseKey = getRTL(this.props.theme) ? KeyCodes.right : KeyCodes.left;\n\n    if (ev.which !== submenuCloseKey || !this.props.isSubMenu) {\n      return false;\n    }\n\n    return (\n      this._adjustedFocusZoneProps.direction === FocusZoneDirection.vertical ||\n      (!!this._adjustedFocusZoneProps.checkForNoWrap &&\n        !shouldWrapFocus(ev.target as HTMLElement, 'data-no-horizontal-wrap'))\n    );\n  };\n\n  private _onMenuKeyDown = (ev: React.KeyboardEvent<HTMLElement>) => {\n    // Mark as handled if onKeyDown returns true (for handling collapse cases)\n    // or if we are attempting to expand a submenu\n    const handled = this._onKeyDown(ev);\n\n    if (handled || !this._host) {\n      return;\n    }\n\n    // If we have a modifier key being pressed, we do not want to move focus.\n    // Otherwise, handle up and down keys.\n    const hasModifier = !!(ev.altKey || ev.metaKey);\n    const isUp = ev.which === KeyCodes.up;\n    const isDown = ev.which === KeyCodes.down;\n    if (!hasModifier && (isUp || isDown)) {\n      const elementToFocus = isUp\n        ? getLastFocusable(this._host, this._host.lastChild as HTMLElement, true)\n        : getFirstFocusable(this._host, this._host.firstChild as HTMLElement, true);\n\n      if (elementToFocus) {\n        elementToFocus.focus();\n        ev.preventDefault();\n        ev.stopPropagation();\n      }\n    }\n  };\n\n  /**\n   * Scroll handler for the callout to make sure the mouse events\n   * for updating focus are not interacting during scroll\n   */\n  private _onScroll = (): void => {\n    if (!this._isScrollIdle && this._scrollIdleTimeoutId !== undefined) {\n      this._async.clearTimeout(this._scrollIdleTimeoutId);\n      this._scrollIdleTimeoutId = undefined;\n    } else {\n      this._isScrollIdle = false;\n    }\n\n    this._scrollIdleTimeoutId = this._async.setTimeout(() => {\n      this._isScrollIdle = true;\n    }, NavigationIdleDelay);\n  };\n\n  private _onItemMouseEnterBase = (item: any, ev: React.MouseEvent<HTMLElement>, target?: HTMLElement): void => {\n    if (this._shouldIgnoreMouseEvent()) {\n      return;\n    }\n\n    this._updateFocusOnMouseEvent(item, ev, target);\n  };\n\n  private _onItemMouseMoveBase = (item: any, ev: React.MouseEvent<HTMLElement>, target: HTMLElement): void => {\n    const targetElement = ev.currentTarget as HTMLElement;\n\n    // Always do this check to make sure we record a mouseMove if needed (even if we are timed out)\n    if (this._shouldUpdateFocusOnMouseEvent) {\n      this._gotMouseMove = true;\n    } else {\n      return;\n    }\n\n    if (\n      !this._isScrollIdle ||\n      this._enterTimerId !== undefined ||\n      targetElement === (this._targetWindow.document.activeElement as HTMLElement)\n    ) {\n      return;\n    }\n\n    this._updateFocusOnMouseEvent(item, ev, target);\n  };\n\n  private _shouldIgnoreMouseEvent(): boolean {\n    return !this._isScrollIdle || !this._gotMouseMove;\n  }\n\n  private _onMouseItemLeave = (item: any, ev: React.MouseEvent<HTMLElement>): void => {\n    if (this._shouldIgnoreMouseEvent()) {\n      return;\n    }\n\n    if (this._enterTimerId !== undefined) {\n      this._async.clearTimeout(this._enterTimerId);\n      this._enterTimerId = undefined;\n    }\n\n    if (this.state.expandedMenuItemKey !== undefined) {\n      return;\n    }\n\n    /**\n     * IE11 focus() method forces parents to scroll to top of element.\n     * Edge and IE expose a setActive() function for focusable divs that\n     * sets the page focus but does not scroll the parent element.\n     */\n    if ((this._host as any).setActive) {\n      try {\n        (this._host as any).setActive();\n      } catch (e) {\n        /* no-op */\n      }\n    } else {\n      this._host.focus();\n    }\n  };\n\n  /**\n   * Handles updating focus when mouseEnter or mouseMove fire.\n   * As part of updating focus, This function will also update\n   * the expand/collapse state accordingly.\n   */\n  private _updateFocusOnMouseEvent(item: IContextualMenuItem, ev: React.MouseEvent<HTMLElement>, target?: HTMLElement) {\n    const targetElement = target ? target : (ev.currentTarget as HTMLElement);\n    const { subMenuHoverDelay: timeoutDuration = NavigationIdleDelay } = this.props;\n\n    if (item.key === this.state.expandedMenuItemKey) {\n      return;\n    }\n\n    if (this._enterTimerId !== undefined) {\n      this._async.clearTimeout(this._enterTimerId);\n      this._enterTimerId = undefined;\n    }\n\n    // If the menu is not expanded we can update focus without any delay\n    if (this.state.expandedMenuItemKey === undefined) {\n      targetElement.focus();\n    }\n\n    // Delay updating expanding/dismissing the submenu\n    // and only set focus if we have not already done so\n    if (hasSubmenu(item)) {\n      ev.stopPropagation();\n      this._enterTimerId = this._async.setTimeout(() => {\n        targetElement.focus();\n        this.setState({\n          expandedByMouseClick: true,\n        });\n        this._onItemSubMenuExpand(item, targetElement);\n        this._enterTimerId = undefined;\n      }, timeoutDuration);\n    } else {\n      this._enterTimerId = this._async.setTimeout(() => {\n        this._onSubMenuDismiss(ev);\n        targetElement.focus();\n        this._enterTimerId = undefined;\n      }, timeoutDuration);\n    }\n  }\n\n  private _onItemMouseDown = (item: IContextualMenuItem, ev: React.MouseEvent<HTMLElement>): void => {\n    if (item.onMouseDown) {\n      item.onMouseDown(item, ev);\n    }\n  };\n\n  private _onItemClick = (\n    item: IContextualMenuItem,\n    ev: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>,\n  ): void => {\n    this._onItemClickBase(item, ev, ev.currentTarget as HTMLElement);\n  };\n\n  private _onItemClickBase = (\n    item: IContextualMenuItem,\n    ev: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>,\n    target: HTMLElement,\n  ): void => {\n    const items = getSubmenuItems(item);\n\n    // Cancel a async menu item hover timeout action from being taken and instead\n    // just trigger the click event instead.\n    this._cancelSubMenuTimer();\n\n    if (!hasSubmenu(item) && (!items || !items.length)) {\n      // This is an item without a menu. Click it.\n      this._executeItemClick(item, ev);\n    } else {\n      if (item.key !== this.state.expandedMenuItemKey) {\n        // This has a collapsed sub menu. Expand it.\n        this.setState({\n          // When Edge + Narrator are used together (regardless of if the button is in a form or not), pressing\n          // \"Enter\" fires this method and not _onMenuKeyDown. Checking ev.nativeEvent.detail differentiates\n          // between a real click event and a keypress event (detail should be the number of mouse clicks).\n          // ...Plot twist! For a real click event in IE 11, detail is always 0 (Edge sets it properly to 1).\n          // So we also check the pointerType property, which both Edge and IE set to \"mouse\" for real clicks\n          // and \"\" for pressing \"Enter\" with Narrator on.\n          expandedByMouseClick: ev.nativeEvent.detail !== 0 || (ev.nativeEvent as PointerEvent).pointerType === 'mouse',\n        });\n        this._onItemSubMenuExpand(item, target);\n      }\n    }\n\n    ev.stopPropagation();\n    ev.preventDefault();\n  };\n\n  private _onAnchorClick = (item: IContextualMenuItem, ev: React.MouseEvent<HTMLElement>) => {\n    this._executeItemClick(item, ev);\n    ev.stopPropagation();\n  };\n\n  private _executeItemClick = (\n    item: IContextualMenuItem,\n    ev: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>,\n  ): void => {\n    if (item.disabled || item.isDisabled) {\n      return;\n    }\n\n    let dismiss = false;\n    if (item.onClick) {\n      dismiss = !!item.onClick(ev, item);\n    } else if (this.props.onItemClick) {\n      dismiss = !!this.props.onItemClick(ev, item);\n    }\n\n    (dismiss || !ev.defaultPrevented) && this.dismiss(ev, true);\n  };\n\n  private _onItemKeyDown = (item: any, ev: React.KeyboardEvent<HTMLElement>): void => {\n    const openKey = getRTL(this.props.theme) ? KeyCodes.left : KeyCodes.right;\n\n    if (\n      !item.disabled &&\n      (ev.which === openKey || ev.which === KeyCodes.enter || (ev.which === KeyCodes.down && (ev.altKey || ev.metaKey)))\n    ) {\n      this.setState({\n        expandedByMouseClick: false,\n      });\n      this._onItemSubMenuExpand(item, ev.currentTarget as HTMLElement);\n      ev.preventDefault();\n    }\n  };\n\n  // Cancel a async menu item hover timeout action from being taken and instead\n  // do new upcoming behavior\n  private _cancelSubMenuTimer = () => {\n    if (this._enterTimerId !== undefined) {\n      this._async.clearTimeout(this._enterTimerId);\n      this._enterTimerId = undefined;\n    }\n  };\n\n  private _onItemSubMenuExpand = (item: IContextualMenuItem, target: HTMLElement): void => {\n    if (this.state.expandedMenuItemKey !== item.key) {\n      if (this.state.expandedMenuItemKey) {\n        this._onSubMenuDismiss();\n      }\n\n      // Focus the target to ensure when we close it, we're focusing on the correct element.\n      target.focus();\n      this.setState({\n        expandedMenuItemKey: item.key,\n        submenuTarget: target,\n      });\n    }\n  };\n\n  private _getSubmenuProps() {\n    const { submenuTarget, expandedMenuItemKey } = this.state;\n    const item = this._findItemByKey(expandedMenuItemKey!);\n    let submenuProps: IContextualMenuProps | null = null;\n\n    if (item) {\n      submenuProps = {\n        items: getSubmenuItems(item)!,\n        target: submenuTarget,\n        onDismiss: this._onSubMenuDismiss,\n        isSubMenu: true,\n        id: this.state.subMenuId,\n        shouldFocusOnMount: true,\n        shouldFocusOnContainer: this.state.expandedByMouseClick,\n        directionalHint: getRTL(this.props.theme) ? DirectionalHint.leftTopEdge : DirectionalHint.rightTopEdge,\n        className: this.props.className,\n        gapSpace: 0,\n        isBeakVisible: false,\n      };\n\n      if (item.subMenuProps) {\n        assign(submenuProps, item.subMenuProps);\n      }\n    }\n    return submenuProps;\n  }\n\n  private _findItemByKey(key: string): IContextualMenuItem | undefined {\n    const { items } = this.props;\n    return this._findItemByKeyFromItems(key, items);\n  }\n\n  /**\n   * Returns the item that mathes a given key if any.\n   * @param key - The key of the item to match\n   * @param items - The items to look for the key\n   */\n  private _findItemByKeyFromItems(key: string, items: IContextualMenuItem[]): IContextualMenuItem | undefined {\n    for (const item of items) {\n      if (item.itemType === ContextualMenuItemType.Section && item.sectionProps) {\n        const match = this._findItemByKeyFromItems(key, item.sectionProps.items);\n        if (match) {\n          return match;\n        }\n      } else if (item.key && item.key === key) {\n        return item;\n      }\n    }\n  }\n\n  /**\n   * This function is called ASYNCHRONOUSLY, and so there is a chance it is called\n   * after the component is unmounted. The _mounted property is added to prevent\n   * from calling setState() after unmount. Do NOT copy this pattern in synchronous\n   * code.\n   */\n  private _onSubMenuDismiss = (ev?: any, dismissAll?: boolean): void => {\n    if (dismissAll) {\n      this.dismiss(ev, dismissAll);\n    } else if (this._mounted) {\n      this.setState({\n        dismissedMenuItemKey: this.state.expandedMenuItemKey,\n        expandedMenuItemKey: undefined,\n        submenuTarget: undefined,\n      });\n    }\n  };\n\n  private _setTargetWindowAndElement(target: Target): void {\n    const currentElement = this._host;\n\n    if (target) {\n      if (typeof target === 'string') {\n        const currentDoc: Document = getDocument(currentElement)!;\n        this._target = currentDoc ? (currentDoc.querySelector(target) as Element) : null;\n        this._targetWindow = getWindow(currentElement)!;\n      } else if (!!(target as MouseEvent).stopPropagation) {\n        this._targetWindow = getWindow((target as MouseEvent).target as HTMLElement)!;\n        this._target = target as MouseEvent;\n      } else if ((target as IPoint).x !== undefined && (target as IPoint).y !== undefined) {\n        this._targetWindow = getWindow(currentElement)!;\n        this._target = target as IPoint;\n      } else if ((target as React.RefObject<Element>).current !== undefined) {\n        this._target = (target as React.RefObject<Element>).current;\n        this._targetWindow = getWindow(this._target)!;\n      } else {\n        const targetElement: Element = target as Element;\n        this._targetWindow = getWindow(targetElement)!;\n        this._target = target as Element;\n      }\n    } else {\n      this._targetWindow = getWindow(currentElement)!;\n    }\n  }\n\n  private _getSubMenuId = (item: IContextualMenuItem): string | undefined => {\n    let { subMenuId } = this.state;\n\n    if (item.subMenuProps && item.subMenuProps.id) {\n      subMenuId = item.subMenuProps.id;\n    }\n\n    return subMenuId;\n  };\n\n  private _onPointerAndTouchEvent = (ev: React.TouchEvent<HTMLElement> | PointerEvent) => {\n    this._cancelSubMenuTimer();\n  };\n}\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { IContextualMenuProps, IContextualMenuStyleProps, IContextualMenuStyles } from './ContextualMenu.types';\nimport { ContextualMenuBase } from './ContextualMenu.base';\nimport { getStyles } from './ContextualMenu.styles';\n\n// This is to prevent cyclic import with ContextualMenu.base.tsx.\nlet LocalContextualMenu: React.FunctionComponent<IContextualMenuProps>;\n\nfunction onRenderSubMenu(subMenuProps: IContextualMenuProps) {\n  return <LocalContextualMenu {...subMenuProps} />;\n}\n\nLocalContextualMenu = styled<IContextualMenuProps, IContextualMenuStyleProps, IContextualMenuStyles>(\n  ContextualMenuBase,\n  getStyles,\n  () => {\n    return {\n      onRenderSubMenu,\n    };\n  },\n  { scope: 'ContextualMenu' },\n);\n\n/**\n * ContextualMenu description\n */\nexport const ContextualMenu: React.FunctionComponent<IContextualMenuProps> = LocalContextualMenu;\n","import { IContextualMenuStyleProps, IContextualMenuStyles } from './ContextualMenu.types';\nimport { getGlobalClassNames, FontWeights } from '../../Styling';\nimport { CONTEXTUAL_MENU_ITEM_HEIGHT } from './ContextualMenu.cnstyles';\n\nconst GlobalClassNames = {\n  root: 'ms-ContextualMenu',\n  container: 'ms-ContextualMenu-container',\n  list: 'ms-ContextualMenu-list',\n  header: 'ms-ContextualMenu-header',\n  title: 'ms-ContextualMenu-title',\n  isopen: 'is-open',\n};\n\nexport const getStyles = (props: IContextualMenuStyleProps): IContextualMenuStyles => {\n  const { className, theme } = props;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const { fonts, semanticColors, effects } = theme;\n\n  return {\n    root: [\n      theme.fonts.medium,\n      classNames.root,\n      classNames.isopen,\n      {\n        backgroundColor: semanticColors.menuBackground,\n        minWidth: '180px',\n      },\n      className,\n    ],\n    container: [\n      classNames.container,\n      {\n        selectors: {\n          ':focus': { outline: 0 },\n        },\n      },\n    ],\n    list: [\n      classNames.list,\n      classNames.isopen,\n      {\n        listStyleType: 'none',\n        margin: '0',\n        padding: '0',\n      },\n    ],\n    header: [\n      classNames.header,\n      fonts.small,\n      {\n        fontWeight: FontWeights.semibold,\n        color: semanticColors.menuHeader,\n        background: 'none',\n        backgroundColor: 'transparent',\n        border: 'none',\n        height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n        lineHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n        cursor: 'default',\n        padding: '0px 6px',\n        userSelect: 'none',\n        textAlign: 'left',\n      },\n    ],\n    title: [\n      classNames.title,\n      {\n        fontSize: fonts.mediumPlus.fontSize,\n        paddingRight: '14px',\n        paddingLeft: '14px',\n        paddingBottom: '5px',\n        paddingTop: '5px',\n        backgroundColor: semanticColors.menuItemBackgroundPressed,\n      },\n    ],\n    subComponentStyles: {\n      callout: {\n        root: {\n          boxShadow: effects.elevation8,\n        },\n      },\n      menuItem: {},\n    },\n  };\n};\n","import { memoizeFunction } from '../../Utilities';\nimport { ITheme, mergeStyleSets } from '../../Styling';\nimport { IButtonStyles } from './Button.types';\nimport { getGlobalClassNames } from '../../Styling';\n\nexport interface IButtonClassNames {\n  root?: string;\n  flexContainer?: string;\n  textContainer?: string;\n  icon?: string;\n  label?: string;\n  menuIcon?: string;\n  description?: string;\n  screenReaderText?: string;\n}\n\nexport const ButtonGlobalClassNames = {\n  msButton: 'ms-Button',\n  msButtonHasMenu: 'ms-Button--hasMenu',\n  msButtonIcon: 'ms-Button-icon',\n  msButtonMenuIcon: 'ms-Button-menuIcon',\n  msButtonLabel: 'ms-Button-label',\n  msButtonDescription: 'ms-Button-description',\n  msButtonScreenReaderText: 'ms-Button-screenReaderText',\n  msButtonFlexContainer: 'ms-Button-flexContainer',\n  msButtonTextContainer: 'ms-Button-textContainer',\n};\n\nexport const getBaseButtonClassNames = memoizeFunction(\n  (\n    theme: ITheme,\n    styles: IButtonStyles,\n    className: string,\n    variantClassName: string,\n    iconClassName: string | undefined,\n    menuIconClassName: string | undefined,\n    disabled: boolean,\n    hasMenu: boolean,\n    checked: boolean,\n    expanded: boolean,\n    isSplit: boolean | undefined,\n  ): IButtonClassNames => {\n    const classNames = getGlobalClassNames(ButtonGlobalClassNames, theme || {});\n\n    const isExpanded = expanded && !isSplit;\n    return mergeStyleSets({\n      root: [\n        classNames.msButton,\n        styles.root,\n        variantClassName,\n        checked && ['is-checked', styles.rootChecked],\n        isExpanded && [\n          'is-expanded',\n          styles.rootExpanded,\n          {\n            selectors: {\n              [`:hover .${classNames.msButtonIcon}`]: styles.iconExpandedHovered,\n              // menuIcon falls back to rootExpandedHovered to support original behavior\n              [`:hover .${classNames.msButtonMenuIcon}`]: styles.menuIconExpandedHovered || styles.rootExpandedHovered,\n              ':hover': styles.rootExpandedHovered,\n            },\n          },\n        ],\n        hasMenu && [ButtonGlobalClassNames.msButtonHasMenu, styles.rootHasMenu],\n        disabled && ['is-disabled', styles.rootDisabled],\n        !disabled &&\n          !isExpanded &&\n          !checked && {\n            selectors: {\n              ':hover': styles.rootHovered,\n              [`:hover .${classNames.msButtonLabel}`]: styles.labelHovered,\n              [`:hover .${classNames.msButtonIcon}`]: styles.iconHovered,\n              [`:hover .${classNames.msButtonDescription}`]: styles.descriptionHovered,\n              [`:hover .${classNames.msButtonMenuIcon}`]: styles.menuIconHovered,\n              ':focus': styles.rootFocused,\n              ':active': styles.rootPressed,\n              [`:active .${classNames.msButtonIcon}`]: styles.iconPressed,\n              [`:active .${classNames.msButtonDescription}`]: styles.descriptionPressed,\n              [`:active .${classNames.msButtonMenuIcon}`]: styles.menuIconPressed,\n            },\n          },\n        disabled && checked && [styles.rootCheckedDisabled],\n        !disabled &&\n          checked && {\n            selectors: {\n              ':hover': styles.rootCheckedHovered,\n              ':active': styles.rootCheckedPressed,\n            },\n          },\n        className,\n      ],\n      flexContainer: [classNames.msButtonFlexContainer, styles.flexContainer],\n      textContainer: [classNames.msButtonTextContainer, styles.textContainer],\n      icon: [\n        classNames.msButtonIcon,\n        iconClassName,\n        styles.icon,\n        isExpanded && styles.iconExpanded,\n        checked && styles.iconChecked,\n        disabled && styles.iconDisabled,\n      ],\n      label: [classNames.msButtonLabel, styles.label, checked && styles.labelChecked, disabled && styles.labelDisabled],\n      menuIcon: [\n        classNames.msButtonMenuIcon,\n        menuIconClassName,\n        styles.menuIcon,\n        checked && styles.menuIconChecked,\n        disabled && !isSplit && styles.menuIconDisabled,\n        !disabled &&\n          !isExpanded &&\n          !checked && {\n            selectors: {\n              ':hover': styles.menuIconHovered,\n              ':active': styles.menuIconPressed,\n            },\n          },\n        isExpanded && ['is-expanded', styles.menuIconExpanded],\n      ],\n      description: [\n        classNames.msButtonDescription,\n        styles.description,\n        checked && styles.descriptionChecked,\n        disabled && styles.descriptionDisabled,\n      ],\n      screenReaderText: [classNames.msButtonScreenReaderText, styles.screenReaderText],\n    });\n  },\n);\n","import { memoizeFunction } from '../../../Utilities';\nimport { mergeStyles } from '../../../Styling';\nimport { IButtonStyles } from '../Button.types';\n\nexport interface ISplitButtonClassNames {\n  root?: string;\n  icon?: string;\n  splitButtonContainer?: string;\n  flexContainer?: string;\n  divider?: string;\n}\nexport const getClassNames = memoizeFunction(\n  (\n    styles: IButtonStyles,\n    disabled: boolean,\n    expanded: boolean,\n    checked: boolean,\n    primaryDisabled?: boolean,\n  ): ISplitButtonClassNames => {\n    return {\n      root: mergeStyles(\n        styles.splitButtonMenuButton,\n        expanded && [styles.splitButtonMenuButtonExpanded],\n        disabled && [styles.splitButtonMenuButtonDisabled],\n        checked && !disabled && [styles.splitButtonMenuButtonChecked],\n      ),\n\n      splitButtonContainer: mergeStyles(\n        styles.splitButtonContainer,\n        !disabled &&\n          checked && [\n            styles.splitButtonContainerChecked,\n            {\n              selectors: {\n                ':hover': styles.splitButtonContainerCheckedHovered,\n              },\n            },\n          ],\n        !disabled &&\n          !checked && [\n            {\n              selectors: {\n                ':hover': styles.splitButtonContainerHovered,\n                ':focus': styles.splitButtonContainerFocused,\n              },\n            },\n          ],\n        disabled && styles.splitButtonContainerDisabled,\n      ),\n\n      icon: mergeStyles(\n        styles.splitButtonMenuIcon,\n        disabled && styles.splitButtonMenuIconDisabled,\n        !disabled && primaryDisabled && styles.splitButtonMenuIcon,\n      ),\n\n      flexContainer: mergeStyles(styles.splitButtonFlexContainer),\n\n      divider: mergeStyles(\n        styles.splitButtonDivider,\n        (primaryDisabled || disabled) && styles.splitButtonDividerDisabled,\n      ),\n    };\n  },\n);\n","import * as React from 'react';\nimport {\n  IRenderFunction,\n  anchorProperties,\n  assign,\n  buttonProperties,\n  getId,\n  getNativeProps,\n  KeyCodes,\n  css,\n  mergeAriaAttributeValues,\n  portalContainsElement,\n  memoizeFunction,\n  nullRender,\n  warnConditionallyRequiredProps,\n  warnDeprecations,\n  EventGroup,\n  initializeComponentRef,\n  Async,\n  FocusRects,\n} from '../../Utilities';\nimport { Icon, FontIcon, ImageIcon } from '../../Icon';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport { ContextualMenu, IContextualMenuProps } from '../../ContextualMenu';\nimport { IButtonProps, IButton } from './Button.types';\nimport { IButtonClassNames, getBaseButtonClassNames } from './BaseButton.classNames';\nimport {\n  getClassNames as getBaseSplitButtonClassNames,\n  ISplitButtonClassNames,\n} from './SplitButton/SplitButton.classNames';\nimport { KeytipData } from '../../KeytipData';\nimport { IKeytipProps } from '../Keytip/Keytip.types';\n\n/**\n * {@docCategory Button}\n */\nexport interface IBaseButtonProps extends IButtonProps {\n  baseClassName?: string;\n  variantClassName?: string;\n}\n\nexport interface IBaseButtonState {\n  menuHidden: boolean;\n}\n\nconst TouchIdleDelay = 500; /* ms */\nconst COMPONENT_NAME = 'BaseButton';\n\n/**\n * {@docCategory Button}\n */\nexport class BaseButton extends React.Component<IBaseButtonProps, IBaseButtonState> implements IButton {\n  private get _isSplitButton(): boolean {\n    return !!this.props.menuProps && !!this.props.onClick && this.props.split === true;\n  }\n\n  public static defaultProps: Partial<IBaseButtonProps> = {\n    baseClassName: 'ms-Button',\n    styles: {},\n    split: false,\n  };\n\n  private _async: Async;\n  private _events: EventGroup;\n  private _buttonElement = React.createRef<HTMLElement>();\n  private _splitButtonContainer = React.createRef<HTMLDivElement>();\n  private _labelId: string;\n  private _descriptionId: string;\n  private _ariaDescriptionId: string;\n  private _classNames: IButtonClassNames;\n  private _processingTouch: boolean;\n  private _lastTouchTimeoutId: number | undefined;\n  private _renderedVisibleMenu: boolean = false;\n\n  // These fields will be used to set corresponding props on the menu.\n  private _menuShouldFocusOnContainer: boolean | undefined;\n  private _menuShouldFocusOnMount: boolean | undefined;\n\n  private _getMemoizedMenuButtonKeytipProps = memoizeFunction((keytipProps: IKeytipProps) => {\n    return {\n      ...keytipProps,\n      hasMenu: true,\n    };\n  });\n\n  constructor(props: IBaseButtonProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    this._async = new Async(this);\n    this._events = new EventGroup(this);\n\n    warnConditionallyRequiredProps(COMPONENT_NAME, props, ['menuProps', 'onClick'], 'split', this.props.split!);\n\n    warnDeprecations(COMPONENT_NAME, props, {\n      rootProps: undefined,\n      description: 'secondaryText',\n      toggled: 'checked',\n    });\n    this._labelId = getId();\n    this._descriptionId = getId();\n    this._ariaDescriptionId = getId();\n\n    this.state = {\n      menuHidden: true,\n    };\n  }\n\n  public render(): JSX.Element {\n    const {\n      ariaDescription,\n      ariaLabel,\n      ariaHidden,\n      className,\n      disabled,\n      allowDisabledFocus,\n      primaryDisabled,\n      // tslint:disable-next-line:deprecation\n      secondaryText = this.props.description,\n      href,\n      iconProps,\n      menuIconProps,\n      styles,\n      checked,\n      variantClassName,\n      theme,\n      toggle,\n      getClassNames,\n      role,\n    } = this.props;\n\n    const { menuHidden } = this.state;\n\n    // Button is disabled if the whole button (in case of splitbutton is disabled) or if the primary action is disabled\n    const isPrimaryButtonDisabled = disabled || primaryDisabled;\n\n    this._classNames = getClassNames\n      ? getClassNames(\n          theme!,\n          className!,\n          variantClassName!,\n          iconProps && iconProps.className,\n          menuIconProps && menuIconProps.className,\n          isPrimaryButtonDisabled!,\n          checked!,\n          !menuHidden,\n          !!this.props.menuProps,\n          this.props.split,\n          !!allowDisabledFocus,\n        )\n      : getBaseButtonClassNames(\n          theme!,\n          styles!,\n          className!,\n          variantClassName!,\n          iconProps && iconProps.className,\n          menuIconProps && menuIconProps.className,\n          isPrimaryButtonDisabled!,\n          !!this.props.menuProps,\n          checked!,\n          !menuHidden,\n          this.props.split,\n        );\n\n    const { _ariaDescriptionId, _labelId, _descriptionId } = this;\n    // Anchor tag cannot be disabled hence in disabled state rendering\n    // anchor button as normal button\n    const renderAsAnchor: boolean = !isPrimaryButtonDisabled && !!href;\n    const tag = renderAsAnchor ? 'a' : 'button';\n\n    const nativeProps = getNativeProps(\n      // tslint:disable-next-line:deprecation\n      assign(renderAsAnchor ? {} : { type: 'button' }, this.props.rootProps, this.props),\n      renderAsAnchor ? anchorProperties : buttonProperties,\n      [\n        'disabled', // let disabled buttons be focused and styled as disabled.\n      ],\n    );\n\n    // Check for ariaLabel passed in via Button props, and fall back to aria-label passed in via native props\n    const resolvedAriaLabel = ariaLabel || (nativeProps as any)['aria-label'];\n\n    // Check for ariaDescription, secondaryText or aria-describedby in the native props to determine source of\n    // aria-describedby. Otherwise default to undefined so property does not appear in output.\n    let ariaDescribedBy = undefined;\n    if (ariaDescription) {\n      ariaDescribedBy = _ariaDescriptionId;\n    } else if (secondaryText && this.props.onRenderDescription !== nullRender) {\n      // for buttons like CompoundButton with a valid onRenderDescription, we need to set an ariaDescribedBy\n      // for buttons that do not render anything (via nullRender), we should not set an ariaDescribedBy\n      ariaDescribedBy = _descriptionId;\n    } else if ((nativeProps as any)['aria-describedby']) {\n      ariaDescribedBy = (nativeProps as any)['aria-describedby'];\n    }\n\n    // If an explicit ariaLabel is given, use that as the label and we're done.\n    // If an explicit aria-labelledby is given, use that and we're done.\n    // If any kind of description is given (which will end up as an aria-describedby attribute),\n    // set the labelledby element. Otherwise, the button is labeled implicitly by the descendent\n    // text on the button (if it exists). Never set both aria-label and aria-labelledby.\n    let ariaLabelledBy = undefined;\n    if (!resolvedAriaLabel) {\n      if ((nativeProps as any)['aria-labelledby']) {\n        ariaLabelledBy = (nativeProps as any)['aria-labelledby'];\n      } else if (ariaDescribedBy) {\n        ariaLabelledBy = this._hasText() ? _labelId : undefined;\n      }\n    }\n\n    const dataIsFocusable =\n      (this.props as any)['data-is-focusable'] === false || (disabled && !allowDisabledFocus) || this._isSplitButton\n        ? false\n        : true;\n\n    const isCheckboxTypeRole = role === 'menuitemcheckbox' || role === 'checkbox';\n    // if isCheckboxTypeRole, always return a checked value.\n    // Otherwise only return checked value if toggle is set to true.\n    // This is because role=\"checkbox\" always needs to have an aria-checked value\n    // but our checked prop only sets aria-pressed if we mark the button as a toggle=\"true\"\n    const checkedOrPressedValue = isCheckboxTypeRole ? !!checked : toggle === true ? !!checked : undefined;\n\n    const buttonProps = assign(nativeProps, {\n      className: this._classNames.root,\n      ref: this._buttonElement,\n      disabled: isPrimaryButtonDisabled && !allowDisabledFocus,\n      onKeyDown: this._onKeyDown,\n      onKeyPress: this._onKeyPress,\n      onKeyUp: this._onKeyUp,\n      onMouseDown: this._onMouseDown,\n      onMouseUp: this._onMouseUp,\n      onClick: this._onClick,\n      'aria-label': resolvedAriaLabel,\n      'aria-labelledby': ariaLabelledBy,\n      'aria-describedby': ariaDescribedBy,\n      'aria-disabled': isPrimaryButtonDisabled,\n      'data-is-focusable': dataIsFocusable,\n      // aria-pressed attribute should only be present for toggle buttons\n      // aria-checked attribute should only be present for toggle buttons with checkbox type role\n      [isCheckboxTypeRole ? 'aria-checked' : 'aria-pressed']: checkedOrPressedValue,\n    });\n\n    if (ariaHidden) {\n      buttonProps['aria-hidden'] = true;\n    }\n\n    if (this._isSplitButton) {\n      return this._onRenderSplitButtonContent(tag, buttonProps);\n    } else if (this.props.menuProps) {\n      assign(buttonProps, {\n        'aria-expanded': !menuHidden,\n        'aria-owns': !menuHidden ? this._labelId + '-menu' : null,\n        'aria-haspopup': true,\n      });\n    }\n\n    return this._onRenderContent(tag, buttonProps);\n  }\n\n  public componentDidMount() {\n    // For split buttons, touching anywhere in the button should drop the dropdown, which should contain the\n    // primary action. This gives more hit target space for touch environments. We're setting the onpointerdown here,\n    // because React does not support Pointer events yet.\n    if (this._isSplitButton && this._splitButtonContainer.current) {\n      if ('onpointerdown' in this._splitButtonContainer.current) {\n        this._events.on(this._splitButtonContainer.current, 'pointerdown', this._onPointerDown, true);\n      }\n      if ('onpointerup' in this._splitButtonContainer.current && this.props.onPointerUp) {\n        this._events.on(this._splitButtonContainer.current, 'pointerup', this.props.onPointerUp, true);\n      }\n    }\n  }\n\n  public componentDidUpdate(prevProps: IBaseButtonProps, prevState: IBaseButtonState) {\n    // If Button's menu was closed, run onAfterMenuDismiss.\n    if (this.props.onAfterMenuDismiss && !prevState.menuHidden && this.state.menuHidden) {\n      this.props.onAfterMenuDismiss();\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this._async.dispose();\n    this._events.dispose();\n  }\n\n  public focus(): void {\n    if (this._isSplitButton && this._splitButtonContainer.current) {\n      this._splitButtonContainer.current.focus();\n    } else if (this._buttonElement.current) {\n      this._buttonElement.current.focus();\n    }\n  }\n\n  public dismissMenu(): void {\n    this._dismissMenu();\n  }\n\n  public openMenu(shouldFocusOnContainer?: boolean, shouldFocusOnMount?: boolean): void {\n    this._openMenu(shouldFocusOnContainer, shouldFocusOnMount);\n  }\n\n  private _onRenderContent(tag: any, buttonProps: IButtonProps): JSX.Element {\n    const props = this.props;\n    const Tag = tag;\n    const {\n      menuIconProps,\n      menuProps,\n      onRenderIcon = this._onRenderIcon,\n      onRenderAriaDescription = this._onRenderAriaDescription,\n      onRenderChildren = this._onRenderChildren,\n      // tslint:disable-next-line:deprecation\n      onRenderMenu = this._onRenderMenu,\n      onRenderMenuIcon = this._onRenderMenuIcon,\n      disabled,\n    } = props;\n    let { keytipProps } = props;\n    if (keytipProps && menuProps) {\n      keytipProps = this._getMemoizedMenuButtonKeytipProps(keytipProps);\n    }\n\n    const Button = (keytipAttributes?: any): JSX.Element => (\n      <Tag {...buttonProps} {...keytipAttributes}>\n        <span className={this._classNames.flexContainer} data-automationid=\"splitbuttonprimary\">\n          {onRenderIcon(props, this._onRenderIcon)}\n          {this._onRenderTextContents()}\n          {onRenderAriaDescription(props, this._onRenderAriaDescription)}\n          {onRenderChildren(props, this._onRenderChildren)}\n          {!this._isSplitButton &&\n            (menuProps || menuIconProps || this.props.onRenderMenuIcon) &&\n            onRenderMenuIcon(this.props, this._onRenderMenuIcon)}\n          {menuProps &&\n            !menuProps.doNotLayer &&\n            this._shouldRenderMenu() &&\n            onRenderMenu(menuProps, this._onRenderMenu)}\n        </span>\n      </Tag>\n    );\n\n    const Content = keytipProps ? (\n      // If we're making a split button, we won't put the keytip here\n      <KeytipData\n        keytipProps={!this._isSplitButton ? keytipProps : undefined}\n        ariaDescribedBy={(buttonProps as any)['aria-describedby']}\n        disabled={disabled}\n      >\n        {(keytipAttributes: any): JSX.Element => Button(keytipAttributes)}\n      </KeytipData>\n    ) : (\n      Button()\n    );\n\n    if (menuProps && menuProps.doNotLayer) {\n      return (\n        <span style={{ display: 'inline-block' }}>\n          {Content}\n          {this._shouldRenderMenu() && onRenderMenu(menuProps, this._onRenderMenu)}\n        </span>\n      );\n    }\n\n    return (\n      <>\n        {Content}\n        <FocusRects />\n      </>\n    );\n  }\n\n  /**\n   * Method to help determine if the menu's component tree should\n   * be rendered. It takes into account whether the menu is expanded,\n   * whether it is a persisted menu and whether it has been shown to the user.\n   */\n  private _shouldRenderMenu() {\n    const { menuHidden } = this.state;\n    // tslint:disable-next-line:deprecation\n    const { persistMenu, renderPersistedMenuHiddenOnMount } = this.props;\n\n    if (!menuHidden) {\n      // Always should render a menu when it is expanded\n      return true;\n    } else if (persistMenu && (this._renderedVisibleMenu || renderPersistedMenuHiddenOnMount)) {\n      // _renderedVisibleMenu ensures that the first rendering of\n      // the menu happens on-screen, as edge's scrollbar calculations are off if done while hidden.\n      return true;\n    }\n\n    return false;\n  }\n\n  private _onRenderIcon = (\n    buttonProps?: IButtonProps,\n    defaultRender?: IRenderFunction<IButtonProps>,\n  ): JSX.Element | null => {\n    const { iconProps } = this.props;\n\n    if (iconProps && (iconProps.iconName !== undefined || iconProps.imageProps)) {\n      const { className, imageProps, ...rest } = iconProps;\n\n      // If the styles prop is specified as part of iconProps, fall back to regular Icon as FontIcon and ImageIcon\n      // do not have this prop.\n      if (iconProps.styles) {\n        return <Icon className={css(this._classNames.icon, className)} imageProps={imageProps} {...rest} />;\n      }\n      if (iconProps.iconName) {\n        return <FontIcon className={css(this._classNames.icon, className)} {...rest} />;\n      }\n      if (imageProps) {\n        return <ImageIcon className={css(this._classNames.icon, className)} imageProps={imageProps} {...rest} />;\n      }\n    }\n    return null;\n  };\n\n  private _onRenderTextContents = (): JSX.Element | (JSX.Element | null)[] => {\n    const {\n      text,\n      children,\n      // tslint:disable-next-line:deprecation\n      secondaryText = this.props.description,\n      onRenderText = this._onRenderText,\n      onRenderDescription = this._onRenderDescription,\n    } = this.props;\n\n    if (text || typeof children === 'string' || secondaryText) {\n      return (\n        <span className={this._classNames.textContainer}>\n          {onRenderText(this.props, this._onRenderText)}\n          {onRenderDescription(this.props, this._onRenderDescription)}\n        </span>\n      );\n    }\n    return [onRenderText(this.props, this._onRenderText), onRenderDescription(this.props, this._onRenderDescription)];\n  };\n\n  private _onRenderText = (): JSX.Element | null => {\n    let { text } = this.props;\n    const { children } = this.props;\n\n    // For backwards compat, we should continue to take in the text content from children.\n    if (text === undefined && typeof children === 'string') {\n      text = children;\n    }\n\n    if (this._hasText()) {\n      return (\n        <span key={this._labelId} className={this._classNames.label} id={this._labelId}>\n          {text}\n        </span>\n      );\n    }\n\n    return null;\n  };\n\n  private _hasText(): boolean {\n    // _onRenderTextContents and _onRenderText do not perform the same checks. Below is parity with what _onRenderText\n    // used to have before the refactor that introduced this function. _onRenderTextContents does not require props.\n    // text to be undefined in order for props.children to be used as a fallback.\n    // Purely a code maintainability/reuse issue, but logged as Issue #4979.\n    return this.props.text !== null && (this.props.text !== undefined || typeof this.props.children === 'string');\n  }\n\n  private _onRenderChildren = (): JSX.Element | null => {\n    const { children } = this.props;\n\n    // If children is just a string, either it or the text will be rendered via onRenderLabel\n    // If children is another component, it will be rendered after text\n    if (typeof children === 'string') {\n      return null;\n    }\n\n    return children as any;\n  };\n\n  private _onRenderDescription = (props: IButtonProps) => {\n    // tslint:disable-next-line:deprecation\n    const { secondaryText = this.props.description } = props;\n\n    // ms-Button-description is only shown when the button type is compound.\n    // In other cases it will not be displayed.\n    return secondaryText ? (\n      <span key={this._descriptionId} className={this._classNames.description} id={this._descriptionId}>\n        {secondaryText}\n      </span>\n    ) : null;\n  };\n\n  private _onRenderAriaDescription = () => {\n    const { ariaDescription } = this.props;\n\n    // If ariaDescription is given, descriptionId will be assigned to ariaDescriptionSpan,\n    // otherwise it will be assigned to descriptionSpan.\n    return ariaDescription ? (\n      <span className={this._classNames.screenReaderText} id={this._ariaDescriptionId}>\n        {ariaDescription}\n      </span>\n    ) : null;\n  };\n\n  private _onRenderMenuIcon = (props: IButtonProps): JSX.Element | null => {\n    const { menuIconProps } = this.props;\n\n    return <FontIcon iconName=\"ChevronDown\" {...menuIconProps} className={this._classNames.menuIcon} />;\n  };\n\n  private _onRenderMenu = (menuProps: IContextualMenuProps): JSX.Element => {\n    const { persistMenu } = this.props;\n    const { menuHidden } = this.state;\n    const MenuType = this.props.menuAs || (ContextualMenu as React.ElementType<IContextualMenuProps>);\n\n    // the accessible menu label (accessible name) has a relationship to the button.\n    // If the menu props do not specify an explicit value for aria-label or aria-labelledBy,\n    // AND the button has text, we'll set the menu aria-labelledBy to the text element id.\n    if (!menuProps.ariaLabel && !menuProps.labelElementId && this._hasText()) {\n      menuProps = { ...menuProps, labelElementId: this._labelId };\n    }\n\n    return (\n      <MenuType\n        id={this._labelId + '-menu'}\n        directionalHint={DirectionalHint.bottomLeftEdge}\n        {...menuProps}\n        shouldFocusOnContainer={this._menuShouldFocusOnContainer}\n        shouldFocusOnMount={this._menuShouldFocusOnMount}\n        hidden={persistMenu ? menuHidden : undefined}\n        className={css('ms-BaseButton-menuhost', menuProps.className)}\n        target={this._isSplitButton ? this._splitButtonContainer.current : this._buttonElement.current}\n        onDismiss={this._onDismissMenu}\n      />\n    );\n  };\n\n  private _onDismissMenu: IContextualMenuProps['onDismiss'] = ev => {\n    const { menuProps } = this.props;\n\n    if (menuProps && menuProps.onDismiss) {\n      menuProps.onDismiss(ev);\n    }\n    if (!ev || !ev.defaultPrevented) {\n      this._dismissMenu();\n    }\n  };\n\n  private _dismissMenu = (): void => {\n    this._menuShouldFocusOnMount = undefined;\n    this._menuShouldFocusOnContainer = undefined;\n    this.setState({ menuHidden: true });\n  };\n\n  private _openMenu = (shouldFocusOnContainer?: boolean, shouldFocusOnMount: boolean = true): void => {\n    if (this.props.menuProps) {\n      this._menuShouldFocusOnContainer = shouldFocusOnContainer;\n      this._menuShouldFocusOnMount = shouldFocusOnMount;\n      this._renderedVisibleMenu = true;\n      this.setState({ menuHidden: false });\n    }\n  };\n\n  private _onToggleMenu = (shouldFocusOnContainer: boolean): void => {\n    let shouldFocusOnMount = true;\n    if (this.props.menuProps && this.props.menuProps.shouldFocusOnMount === false) {\n      shouldFocusOnMount = false;\n    }\n\n    this.state.menuHidden ? this._openMenu(shouldFocusOnContainer, shouldFocusOnMount) : this._dismissMenu();\n  };\n\n  private _onRenderSplitButtonContent(tag: any, buttonProps: IButtonProps): JSX.Element {\n    const {\n      styles = {},\n      disabled,\n      allowDisabledFocus,\n      checked,\n      getSplitButtonClassNames,\n      primaryDisabled,\n      menuProps,\n      toggle,\n      role,\n      primaryActionButtonProps,\n    } = this.props;\n    let { keytipProps } = this.props;\n    const { menuHidden } = this.state;\n\n    const classNames = getSplitButtonClassNames\n      ? getSplitButtonClassNames(!!disabled, !menuHidden, !!checked, !!allowDisabledFocus)\n      : styles && getBaseSplitButtonClassNames(styles!, !!disabled, !menuHidden, !!checked, !!primaryDisabled);\n\n    assign(buttonProps, {\n      onClick: undefined,\n      onPointerDown: undefined,\n      onPointerUp: undefined,\n      tabIndex: -1,\n      'data-is-focusable': false,\n    });\n\n    const ariaDescribedBy = buttonProps.ariaDescription;\n\n    if (keytipProps && menuProps) {\n      keytipProps = this._getMemoizedMenuButtonKeytipProps(keytipProps);\n    }\n\n    const containerProps = getNativeProps<React.HTMLAttributes<HTMLSpanElement>>(buttonProps, [], ['disabled']);\n\n    // Add additional props to apply on primary action button\n    if (primaryActionButtonProps) {\n      assign(buttonProps, primaryActionButtonProps);\n    }\n\n    const SplitButton = (keytipAttributes?: any): JSX.Element => (\n      <div\n        {...containerProps}\n        data-ktp-target={keytipAttributes ? keytipAttributes['data-ktp-target'] : undefined}\n        role={role ? role : 'button'}\n        aria-disabled={disabled}\n        aria-haspopup={true}\n        aria-expanded={!menuHidden}\n        aria-pressed={toggle ? !!checked : undefined} // should only be present for toggle buttons\n        aria-describedby={mergeAriaAttributeValues(\n          ariaDescribedBy,\n          keytipAttributes ? keytipAttributes['aria-describedby'] : undefined,\n        )}\n        className={classNames && classNames.splitButtonContainer}\n        onKeyDown={this._onSplitButtonContainerKeyDown}\n        onTouchStart={this._onTouchStart}\n        ref={this._splitButtonContainer}\n        data-is-focusable={true}\n        onClick={!disabled && !primaryDisabled ? this._onSplitButtonPrimaryClick : undefined}\n        tabIndex={!disabled || allowDisabledFocus ? 0 : undefined}\n        aria-roledescription={buttonProps['aria-roledescription']}\n        onFocusCapture={this._onSplitContainerFocusCapture}\n      >\n        <span style={{ display: 'flex' }}>\n          {this._onRenderContent(tag, buttonProps)}\n          {this._onRenderSplitButtonMenuButton(classNames, keytipAttributes)}\n          {this._onRenderSplitButtonDivider(classNames)}\n        </span>\n      </div>\n    );\n\n    return keytipProps ? (\n      <KeytipData keytipProps={keytipProps} disabled={disabled}>\n        {(keytipAttributes: any): JSX.Element => SplitButton(keytipAttributes)}\n      </KeytipData>\n    ) : (\n      SplitButton()\n    );\n  }\n\n  private _onSplitContainerFocusCapture = (ev: React.FocusEvent<HTMLDivElement>) => {\n    const container = this._splitButtonContainer.current;\n\n    // If the target is coming from the portal we do not need to set focus on the container.\n    if (!container || (ev.target && portalContainsElement(ev.target, container))) {\n      return;\n    }\n\n    // We should never be able to focus the individual buttons in a split button. Focus\n    // should always remain on the container.\n    container.focus();\n  };\n\n  private _onSplitButtonPrimaryClick = (ev: React.MouseEvent<HTMLDivElement>) => {\n    if (!this.state.menuHidden) {\n      this._dismissMenu();\n    }\n\n    if (!this._processingTouch && this.props.onClick) {\n      this.props.onClick(ev);\n    } else if (this._processingTouch) {\n      this._onMenuClick(ev);\n    }\n  };\n\n  private _onRenderSplitButtonDivider(classNames: ISplitButtonClassNames | undefined): JSX.Element | null {\n    if (classNames && classNames.divider) {\n      const onClick = (ev: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        ev.stopPropagation();\n      };\n      return <span className={classNames.divider} aria-hidden={true} onClick={onClick} />;\n    }\n    return null;\n  }\n\n  private _onRenderSplitButtonMenuButton(\n    classNames: ISplitButtonClassNames | undefined,\n    keytipAttributes: any,\n  ): JSX.Element {\n    const { allowDisabledFocus, checked, disabled, splitButtonMenuProps, splitButtonAriaLabel } = this.props;\n    const { menuHidden } = this.state;\n    let menuIconProps = this.props.menuIconProps;\n\n    if (menuIconProps === undefined) {\n      menuIconProps = {\n        iconName: 'ChevronDown',\n      };\n    }\n\n    const splitButtonProps = {\n      ...splitButtonMenuProps,\n      styles: classNames,\n      checked: checked,\n      disabled: disabled,\n      allowDisabledFocus: allowDisabledFocus,\n      onClick: this._onMenuClick,\n      menuProps: undefined,\n      iconProps: { ...menuIconProps, className: this._classNames.menuIcon },\n      ariaLabel: splitButtonAriaLabel,\n      'aria-haspopup': true,\n      'aria-expanded': !menuHidden,\n      'data-is-focusable': false,\n    };\n\n    // Add data-ktp-execute-target to the split button if the keytip is defined\n    return (\n      <BaseButton\n        {...splitButtonProps}\n        data-ktp-execute-target={keytipAttributes ? keytipAttributes['data-ktp-execute-target'] : keytipAttributes}\n        onMouseDown={this._onMouseDown}\n        tabIndex={-1}\n      />\n    );\n  }\n\n  private _onKeyDown = (ev: React.KeyboardEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement>) => {\n    // explicity cancelling event so click won't fire after this\n    if (this.props.disabled && (ev.which === KeyCodes.enter || ev.which === KeyCodes.space)) {\n      ev.preventDefault();\n      ev.stopPropagation();\n    } else if (!this.props.disabled) {\n      if (this.props.menuProps) {\n        this._onMenuKeyDown(ev);\n      } else if (this.props.onKeyDown !== undefined) {\n        this.props.onKeyDown(ev); // not cancelling event because it's not disabled\n      }\n    }\n  };\n\n  private _onKeyUp = (\n    ev: React.KeyboardEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | HTMLSpanElement>,\n  ) => {\n    if (!this.props.disabled && this.props.onKeyUp !== undefined) {\n      this.props.onKeyUp(ev); // not cancelling event because it's not disabled\n    }\n  };\n\n  private _onKeyPress = (\n    ev: React.KeyboardEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | HTMLSpanElement>,\n  ) => {\n    if (!this.props.disabled && this.props.onKeyPress !== undefined) {\n      this.props.onKeyPress(ev); // not cancelling event because it's not disabled\n    }\n  };\n\n  private _onMouseUp = (\n    ev: React.MouseEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | HTMLSpanElement>,\n  ) => {\n    if (!this.props.disabled && this.props.onMouseUp !== undefined) {\n      this.props.onMouseUp(ev); // not cancelling event because it's not disabled\n    }\n  };\n\n  private _onMouseDown = (\n    ev: React.MouseEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | HTMLSpanElement>,\n  ) => {\n    if (!this.props.disabled && this.props.onMouseDown !== undefined) {\n      this.props.onMouseDown(ev); // not cancelling event because it's not disabled\n    }\n  };\n\n  private _onClick = (\n    ev: React.MouseEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | HTMLSpanElement>,\n  ) => {\n    if (!this.props.disabled) {\n      if (this.props.menuProps) {\n        this._onMenuClick(ev);\n      } else if (this.props.onClick !== undefined) {\n        this.props.onClick(ev); // not cancelling event because it's not disabled\n      }\n    }\n  };\n\n  private _onSplitButtonContainerKeyDown = (ev: React.KeyboardEvent<HTMLDivElement>) => {\n    if (ev.which === KeyCodes.enter || ev.which === KeyCodes.space) {\n      if (this._buttonElement.current) {\n        this._buttonElement.current.click();\n        ev.preventDefault();\n        ev.stopPropagation();\n      }\n    } else {\n      this._onMenuKeyDown(ev);\n    }\n  };\n\n  private _onMenuKeyDown = (ev: React.KeyboardEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement>) => {\n    if (this.props.disabled) {\n      return;\n    }\n\n    if (this.props.onKeyDown) {\n      this.props.onKeyDown(ev);\n    }\n\n    const isUp = ev.which === KeyCodes.up;\n    const isDown = ev.which === KeyCodes.down;\n\n    if (!ev.defaultPrevented && this._isValidMenuOpenKey(ev)) {\n      const { onMenuClick } = this.props;\n      if (onMenuClick) {\n        onMenuClick(ev, this.props);\n      }\n\n      this._onToggleMenu(false);\n      ev.preventDefault();\n      ev.stopPropagation();\n    }\n\n    if (!(ev.altKey || ev.metaKey) && (isUp || isDown)) {\n      // Suppose a menu, with shouldFocusOnMount: false, is open, and user wants to keyboard to the menu items\n      // We need to re-render the menu with shouldFocusOnMount as true.\n\n      if (!this.state.menuHidden && this.props.menuProps) {\n        const currentShouldFocusOnMount =\n          this._menuShouldFocusOnMount !== undefined\n            ? this._menuShouldFocusOnMount\n            : this.props.menuProps.shouldFocusOnMount;\n        if (!currentShouldFocusOnMount) {\n          ev.preventDefault();\n          ev.stopPropagation();\n          this._menuShouldFocusOnMount = true;\n          this.forceUpdate();\n        }\n      }\n    }\n  };\n\n  private _onTouchStart: () => void = () => {\n    if (\n      this._isSplitButton &&\n      this._splitButtonContainer.current &&\n      !('onpointerdown' in this._splitButtonContainer.current)\n    ) {\n      this._handleTouchAndPointerEvent();\n    }\n  };\n\n  private _onPointerDown(\n    ev: PointerEvent &\n      React.PointerEvent<HTMLAnchorElement | HTMLButtonElement | HTMLDivElement | BaseButton | HTMLSpanElement>,\n  ) {\n    const { onPointerDown } = this.props;\n    if (onPointerDown) {\n      onPointerDown(ev);\n    }\n\n    if (ev.pointerType === 'touch') {\n      this._handleTouchAndPointerEvent();\n\n      ev.preventDefault();\n      ev.stopImmediatePropagation();\n    }\n  }\n\n  private _handleTouchAndPointerEvent() {\n    // If we already have an existing timeeout from a previous touch and pointer event\n    // cancel that timeout so we can set a nwe one.\n    if (this._lastTouchTimeoutId !== undefined) {\n      this._async.clearTimeout(this._lastTouchTimeoutId);\n      this._lastTouchTimeoutId = undefined;\n    }\n    this._processingTouch = true;\n\n    this._lastTouchTimeoutId = this._async.setTimeout(() => {\n      this._processingTouch = false;\n      this._lastTouchTimeoutId = undefined;\n    }, TouchIdleDelay);\n  }\n\n  /**\n   * Returns if the user hits a valid keyboard key to open the menu\n   * @param ev - the keyboard event\n   * @returns True if user clicks on custom trigger key if enabled or alt + down arrow if not. False otherwise.\n   */\n  private _isValidMenuOpenKey(\n    ev: React.KeyboardEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement>,\n  ): boolean {\n    if (this.props.menuTriggerKeyCode) {\n      return ev.which === this.props.menuTriggerKeyCode;\n    } else if (this.props.menuProps) {\n      return ev.which === KeyCodes.down && (ev.altKey || ev.metaKey);\n    }\n\n    // Note: When enter is pressed, we will let the event continue to propagate\n    // to trigger the onClick event on the button\n    return false;\n  }\n\n  private _onMenuClick = (\n    ev: React.MouseEvent<HTMLDivElement | HTMLButtonElement | HTMLAnchorElement | HTMLSpanElement>,\n  ) => {\n    const { onMenuClick } = this.props;\n    if (onMenuClick) {\n      onMenuClick(ev, this.props);\n    }\n\n    if (!ev.defaultPrevented) {\n      // When Edge + Narrator are used together (regardless of if the button is in a form or not), pressing\n      // \"Enter\" fires this method and not _onMenuKeyDown. Checking ev.nativeEvent.detail differentiates\n      // between a real click event and a keypress event (detail should be the number of mouse clicks).\n      // ...Plot twist! For a real click event in IE 11, detail is always 0 (Edge sets it properly to 1).\n      // So we also check the pointerType property, which both Edge and IE set to \"mouse\" for real clicks\n      // and \"\" for pressing \"Enter\" with Narrator on.\n      const shouldFocusOnContainer =\n        ev.nativeEvent.detail !== 0 || (ev.nativeEvent as PointerEvent).pointerType === 'mouse';\n      this._onToggleMenu(shouldFocusOnContainer);\n      ev.preventDefault();\n      ev.stopPropagation();\n    }\n  };\n}\n","export interface IVendorSettings {\n  isWebkit?: boolean;\n  isMoz?: boolean;\n  isMs?: boolean;\n  isOpera?: boolean;\n}\n\nlet _vendorSettings: IVendorSettings | undefined;\n\nexport function getVendorSettings(): IVendorSettings {\n  if (!_vendorSettings) {\n    const doc = typeof document !== 'undefined' ? document : undefined;\n    const nav = typeof navigator !== 'undefined' ? navigator : undefined;\n    const userAgent = nav ? nav.userAgent.toLowerCase() : undefined;\n\n    if (!doc) {\n      _vendorSettings = {\n        isWebkit: true,\n        isMoz: true,\n        isOpera: true,\n        isMs: true,\n      };\n    } else {\n      _vendorSettings = {\n        isWebkit: !!(doc && 'WebkitAppearance' in doc.documentElement.style),\n        isMoz: !!(userAgent && userAgent.indexOf('firefox') > -1),\n        isOpera: !!(userAgent && userAgent.indexOf('opera') > -1),\n        isMs: !!(nav && (/rv:11.0/i.test(nav.userAgent) || /Edge\\/\\d./i.test(navigator.userAgent))),\n      };\n    }\n  }\n\n  return _vendorSettings;\n}\n\n/**\n * Sets the vendor settings for prefixing and vendor specific operations.\n */\nexport function setVendorSettings(vendorSettings?: IVendorSettings): void {\n  _vendorSettings = vendorSettings;\n}\n","const rules: { [key: string]: string } = {};\n\nexport function kebabRules(rulePairs: (string | number)[], index: number): void {\n  const rule: string = rulePairs[index] as string;\n\n  rulePairs[index] = rules[rule] = rules[rule] || rule.replace(/([A-Z])/g, '-$1').toLowerCase();\n}\n","import { getVendorSettings } from '../getVendorSettings';\n\nconst autoPrefixNames: { [key: string]: number } = {\n  'user-select': 1,\n};\n\nexport function prefixRules(rulePairs: (string | number)[], index: number): void {\n  const vendorSettings = getVendorSettings();\n\n  const name = rulePairs[index];\n\n  if (autoPrefixNames[name]) {\n    const value = rulePairs[index + 1];\n\n    if (autoPrefixNames[name]) {\n      if (vendorSettings.isWebkit) {\n        rulePairs.push('-webkit-' + name, value);\n      }\n      if (vendorSettings.isMoz) {\n        rulePairs.push('-moz-' + name, value);\n      }\n      if (vendorSettings.isMs) {\n        rulePairs.push('-ms-' + name, value);\n      }\n      if (vendorSettings.isOpera) {\n        rulePairs.push('-o-' + name, value);\n      }\n    }\n  }\n}\n","const NON_PIXEL_NUMBER_PROPS = [\n  'column-count',\n  'font-weight',\n  'flex',\n  'flex-grow',\n  'flex-shrink',\n  'fill-opacity',\n  'opacity',\n  'order',\n  'z-index',\n  'zoom',\n];\n\nexport function provideUnits(rulePairs: (string | number)[], index: number): void {\n  const name = rulePairs[index];\n  const value = rulePairs[index + 1];\n\n  if (typeof value === 'number') {\n    const unit = NON_PIXEL_NUMBER_PROPS.indexOf(name as string) === -1 ? 'px' : '';\n\n    rulePairs[index + 1] = `${value}${unit}`;\n  }\n}\n","import { IStyleOptions } from '../IStyleOptions';\n\nconst LEFT = 'left';\nconst RIGHT = 'right';\nconst NO_FLIP = '@noflip';\nconst NAME_REPLACEMENTS: { [key: string]: string } = {\n  [LEFT]: RIGHT,\n  [RIGHT]: LEFT,\n};\nconst VALUE_REPLACEMENTS: { [key: string]: string } = {\n  'w-resize': 'e-resize',\n  'sw-resize': 'se-resize',\n  'nw-resize': 'ne-resize',\n};\n\n/**\n * RTLifies the rulePair in the array at the current index. This mutates the array for performance\n * reasons.\n */\nexport function rtlifyRules(options: IStyleOptions, rulePairs: (string | number)[], index: number): void {\n  if (options.rtl) {\n    const name = rulePairs[index] as string;\n\n    if (!name) {\n      return;\n    }\n\n    const value = rulePairs[index + 1] as string;\n\n    if (typeof value === 'string' && value.indexOf(NO_FLIP) >= 0) {\n      rulePairs[index + 1] = value.replace(/\\s*(?:\\/\\*\\s*)?\\@noflip\\b(?:\\s*\\*\\/)?\\s*?/g, '');\n    } else if (name.indexOf(LEFT) >= 0) {\n      rulePairs[index] = name.replace(LEFT, RIGHT);\n    } else if (name.indexOf(RIGHT) >= 0) {\n      rulePairs[index] = name.replace(RIGHT, LEFT);\n    } else if (String(value).indexOf(LEFT) >= 0) {\n      rulePairs[index + 1] = value.replace(LEFT, RIGHT);\n    } else if (String(value).indexOf(RIGHT) >= 0) {\n      rulePairs[index + 1] = value.replace(RIGHT, LEFT);\n    } else if (NAME_REPLACEMENTS[name]) {\n      rulePairs[index] = NAME_REPLACEMENTS[name];\n    } else if (VALUE_REPLACEMENTS[value]) {\n      rulePairs[index + 1] = VALUE_REPLACEMENTS[value];\n    } else {\n      switch (name) {\n        case 'margin':\n        case 'padding':\n          rulePairs[index + 1] = flipQuad(value);\n          break;\n        case 'box-shadow':\n          rulePairs[index + 1] = negateNum(value, 0);\n          break;\n      }\n    }\n  }\n}\n\n/**\n * Given a string value in a space delimited format (e.g. \"1 2 3 4\"), negates a particular value.\n */\nfunction negateNum(value: string, partIndex: number): string {\n  const parts = value.split(' ');\n  const numberVal = parseInt(parts[partIndex], 10);\n\n  parts[0] = parts[0].replace(String(numberVal), String(numberVal * -1));\n\n  return parts.join(' ');\n}\n\n/**\n * Given a string quad, flips the left and right values.\n */\nfunction flipQuad(value: string): string {\n  if (typeof value === 'string') {\n    const parts = value.split(' ');\n\n    if (parts.length === 4) {\n      return `${parts[0]} ${parts[3]} ${parts[2]} ${parts[1]}`;\n    }\n  }\n\n  return value;\n}\n","import { IRawStyle, IStyle } from './IStyle';\n\nimport { Stylesheet } from './Stylesheet';\nimport { kebabRules } from './transforms/kebabRules';\nimport { prefixRules } from './transforms/prefixRules';\nimport { provideUnits } from './transforms/provideUnits';\nimport { rtlifyRules } from './transforms/rtlifyRules';\nimport { IStyleOptions } from './IStyleOptions';\n\nconst DISPLAY_NAME = 'displayName';\n\n// tslint:disable-next-line:no-any\ntype IDictionary = { [key: string]: any };\n\ninterface IRuleSet {\n  __order: string[];\n  [key: string]: IDictionary;\n}\n\nfunction getDisplayName(rules?: { [key: string]: IRawStyle }): string | undefined {\n  const rootStyle: IStyle = rules && rules['&'];\n\n  return rootStyle ? (rootStyle as IRawStyle).displayName : undefined;\n}\n\nconst globalSelectorRegExp = /\\:global\\((.+?)\\)/g;\n\ntype ReplacementInfo = [number, number, string];\n\n/**\n * Finds comma separated selectors in a :global() e.g. \":global(.class1, .class2, .class3)\"\n * and wraps them each in their own global \":global(.class1), :global(.class2), :global(.class3)\"\n *\n * @param selectorWithGlobals The selector to process\n * @returns The updated selector\n */\nfunction expandCommaSeparatedGlobals(selectorWithGlobals: string): string {\n  // We the selector does not have a :global() we can shortcut\n  if (!globalSelectorRegExp.test(selectorWithGlobals)) {\n    return selectorWithGlobals;\n  }\n\n  const replacementInfo: ReplacementInfo[] = [];\n\n  const findGlobal = /\\:global\\((.+?)\\)/g;\n  let match = null;\n  // Create a result list for global selectors so we can replace them.\n  while ((match = findGlobal.exec(selectorWithGlobals))) {\n    // Only if the found selector is a comma separated list we'll process it.\n    if (match[1].indexOf(',') > -1) {\n      replacementInfo.push([\n        match.index,\n        match.index + match[0].length,\n        // Wrap each of the found selectors in :global()\n        match[1]\n          .split(',')\n          .map((v: string) => `:global(${v.trim()})`)\n          .join(', '),\n      ]);\n    }\n  }\n\n  // Replace the found selectors with their wrapped variants in reverse order\n  return replacementInfo\n    .reverse()\n    .reduce((selector: string, [matchIndex, matchEndIndex, replacement]: ReplacementInfo) => {\n      const prefix = selector.slice(0, matchIndex);\n      const suffix = selector.slice(matchEndIndex);\n\n      return prefix + replacement + suffix;\n    }, selectorWithGlobals);\n}\n\nfunction expandSelector(newSelector: string, currentSelector: string): string {\n  if (newSelector.indexOf(':global(') >= 0) {\n    return newSelector.replace(globalSelectorRegExp, '$1');\n  } else if (newSelector.indexOf(':') === 0) {\n    return currentSelector + newSelector;\n  } else if (newSelector.indexOf('&') < 0) {\n    return currentSelector + ' ' + newSelector;\n  }\n\n  return newSelector;\n}\n\nfunction extractRules(args: IStyle[], rules: IRuleSet = { __order: [] }, currentSelector: string = '&'): IRuleSet {\n  const stylesheet = Stylesheet.getInstance();\n  let currentRules: IDictionary | undefined = rules[currentSelector] as IDictionary;\n\n  if (!currentRules) {\n    currentRules = {};\n    rules[currentSelector] = currentRules;\n    rules.__order.push(currentSelector);\n  }\n\n  for (const arg of args) {\n    // If the arg is a string, we need to look up the class map and merge.\n    if (typeof arg === 'string') {\n      const expandedRules = stylesheet.argsFromClassName(arg);\n\n      if (expandedRules) {\n        extractRules(expandedRules, rules, currentSelector);\n      }\n      // Else if the arg is an array, we need to recurse in.\n    } else if (Array.isArray(arg)) {\n      extractRules(arg, rules, currentSelector);\n    } else {\n      // tslint:disable-next-line:no-any\n      for (const prop in arg as any) {\n        if (prop === 'selectors') {\n          // tslint:disable-next-line:no-any\n          const selectors: { [key: string]: IStyle } = (arg as any).selectors;\n\n          for (let newSelector in selectors) {\n            if (selectors.hasOwnProperty(newSelector)) {\n              const selectorValue = selectors[newSelector];\n\n              if (newSelector.indexOf('@') === 0) {\n                newSelector = newSelector + '{' + currentSelector;\n                extractRules([selectorValue], rules, newSelector);\n              } else if (newSelector.indexOf(',') > -1) {\n                expandCommaSeparatedGlobals(newSelector)\n                  .split(',')\n                  .map((s: string) => s.trim())\n                  .forEach((separatedSelector: string) =>\n                    extractRules([selectorValue], rules, expandSelector(separatedSelector, currentSelector)),\n                  );\n              } else {\n                extractRules([selectorValue], rules, expandSelector(newSelector, currentSelector));\n              }\n            }\n          }\n        } else {\n          if ((arg as any)[prop] !== undefined) {\n            // Else, add the rule to the currentSelector.\n            if (prop === 'margin' || prop === 'padding') {\n              // tslint:disable-next-line:no-any\n              expandQuads(currentRules, prop, (arg as any)[prop]);\n            } else {\n              // tslint:disable-next-line:no-any\n              (currentRules as any)[prop] = (arg as any)[prop] as any;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  return rules;\n}\n\nfunction expandQuads(currentRules: IDictionary, name: string, value: string): void {\n  const parts = typeof value === 'string' ? value.split(' ') : [value];\n\n  currentRules[name + 'Top'] = parts[0];\n  currentRules[name + 'Right'] = parts[1] || parts[0];\n  currentRules[name + 'Bottom'] = parts[2] || parts[0];\n  currentRules[name + 'Left'] = parts[3] || parts[1] || parts[0];\n}\n\nfunction getKeyForRules(options: IStyleOptions, rules: IRuleSet): string | undefined {\n  const serialized: string[] = [options.rtl ? 'rtl' : 'ltr'];\n  let hasProps = false;\n\n  for (const selector of rules.__order) {\n    serialized.push(selector);\n    const rulesForSelector = rules[selector];\n\n    for (const propName in rulesForSelector) {\n      if (rulesForSelector.hasOwnProperty(propName) && rulesForSelector[propName] !== undefined) {\n        hasProps = true;\n        serialized.push(propName, rulesForSelector[propName]);\n      }\n    }\n  }\n\n  return hasProps ? serialized.join('') : undefined;\n}\n\nexport function serializeRuleEntries(options: IStyleOptions, ruleEntries: { [key: string]: string | number }): string {\n  if (!ruleEntries) {\n    return '';\n  }\n\n  const allEntries: (string | number)[] = [];\n\n  for (const entry in ruleEntries) {\n    if (ruleEntries.hasOwnProperty(entry) && entry !== DISPLAY_NAME && ruleEntries[entry] !== undefined) {\n      allEntries.push(entry, ruleEntries[entry]);\n    }\n  }\n\n  // Apply transforms.\n  for (let i = 0; i < allEntries.length; i += 2) {\n    kebabRules(allEntries, i);\n    provideUnits(allEntries, i);\n    rtlifyRules(options, allEntries, i);\n    prefixRules(allEntries, i);\n  }\n\n  // Apply punctuation.\n  for (let i = 1; i < allEntries.length; i += 4) {\n    allEntries.splice(i, 1, ':', allEntries[i], ';');\n  }\n\n  return allEntries.join('');\n}\n\nexport interface IRegistration {\n  className: string;\n  key: string;\n  args: IStyle[];\n  rulesToInsert: string[];\n}\n\nexport function styleToRegistration(options: IStyleOptions, ...args: IStyle[]): IRegistration | undefined {\n  const rules: IRuleSet = extractRules(args);\n  const key = getKeyForRules(options, rules);\n\n  if (key) {\n    const stylesheet = Stylesheet.getInstance();\n    const registration: Partial<IRegistration> = {\n      className: stylesheet.classNameFromKey(key),\n      key,\n      args,\n    };\n\n    if (!registration.className) {\n      registration.className = stylesheet.getClassName(getDisplayName(rules));\n      const rulesToInsert: string[] = [];\n\n      for (const selector of rules.__order) {\n        rulesToInsert.push(selector, serializeRuleEntries(options, rules[selector]));\n      }\n      registration.rulesToInsert = rulesToInsert;\n    }\n\n    return registration as IRegistration;\n  }\n\n  return undefined;\n}\n\nexport function applyRegistration(registration: IRegistration): void {\n  const stylesheet = Stylesheet.getInstance();\n  const { className, key, args, rulesToInsert } = registration;\n\n  if (rulesToInsert) {\n    // rulesToInsert is an ordered array of selector/rule pairs.\n    for (let i = 0; i < rulesToInsert.length; i += 2) {\n      const rules = rulesToInsert[i + 1];\n      if (rules) {\n        let selector = rulesToInsert[i];\n\n        selector = selector.replace(/&/g, '.' + registration.className);\n\n        // Insert. Note if a media query, we must close the query with a final bracket.\n        const processedRule = `${selector}{${rules}}${selector.indexOf('@') === 0 ? '}' : ''}`;\n\n        stylesheet.insertRule(processedRule);\n      }\n    }\n    stylesheet.cacheClassName(className!, key!, args!, rulesToInsert);\n  }\n}\n\nexport function styleToClassName(options: IStyleOptions, ...args: IStyle[]): string {\n  const registration = styleToRegistration(options, ...args);\n  if (registration) {\n    applyRegistration(registration);\n\n    return registration.className;\n  }\n\n  return '';\n}\n","import { GlobalSettings } from '../GlobalSettings';\n\n// tslint:disable-next-line:no-any\nexport type ISettings = { [key: string]: any };\nexport type ISettingsFunction = (settings: ISettings) => ISettings;\n\n/**\n * @deprecated Use ISettings.\n */\nexport type Settings = ISettings;\n\n/**\n * @deprecated Use ISettingsFunction.\n */\nexport type SettingsFunction = ISettingsFunction;\n\nexport interface ICustomizations {\n  settings: ISettings;\n  scopedSettings: { [key: string]: ISettings };\n  inCustomizerContext?: boolean;\n}\n\nconst CustomizationsGlobalKey = 'customizations';\nconst NO_CUSTOMIZATIONS = { settings: {}, scopedSettings: {}, inCustomizerContext: false };\n\nlet _allSettings = GlobalSettings.getValue<ICustomizations>(CustomizationsGlobalKey, {\n  settings: {},\n  scopedSettings: {},\n  inCustomizerContext: false,\n});\n\nlet _events: (() => void)[] = [];\n\nexport class Customizations {\n  private static _suppressUpdates: boolean;\n\n  public static reset(): void {\n    _allSettings.settings = {};\n    _allSettings.scopedSettings = {};\n  }\n\n  /** Apply global Customization settings.\n   * @example Customizations.applySettings(\\{ theme: \\{...\\} \\});\n   */\n  public static applySettings(settings: ISettings): void {\n    _allSettings.settings = { ..._allSettings.settings, ...settings };\n    Customizations._raiseChange();\n  }\n\n  /** Apply Customizations to a particular named scope, like a component.\n   * @example Customizations.applyScopedSettings('Nav', \\{ styles: () =\\> \\{\\} \\});\n   */\n  public static applyScopedSettings(scopeName: string, settings: ISettings): void {\n    _allSettings.scopedSettings[scopeName] = { ..._allSettings.scopedSettings[scopeName], ...settings };\n    Customizations._raiseChange();\n  }\n\n  public static getSettings(\n    properties: string[],\n    scopeName?: string,\n    localSettings: ICustomizations = NO_CUSTOMIZATIONS,\n    // tslint:disable-next-line:no-any\n  ): any {\n    const settings: ISettings = {};\n    const localScopedSettings = (scopeName && localSettings.scopedSettings[scopeName]) || {};\n    const globalScopedSettings = (scopeName && _allSettings.scopedSettings[scopeName]) || {};\n\n    for (let property of properties) {\n      settings[property] =\n        localScopedSettings[property] ||\n        localSettings.settings[property] ||\n        globalScopedSettings[property] ||\n        _allSettings.settings[property];\n    }\n\n    return settings;\n  }\n\n  /** Used to run some code that sets Customizations without triggering an update until the end.\n   * Useful for applying Customizations that don't affect anything currently rendered, or for\n   * applying many customizations at once.\n   * @param suppressUpdate - Do not raise the change event at the end, preventing all updates\n   */\n  public static applyBatchedUpdates(code: () => void, suppressUpdate?: boolean): void {\n    Customizations._suppressUpdates = true;\n    try {\n      code();\n    } catch {\n      /* do nothing */\n    }\n    Customizations._suppressUpdates = false;\n    if (!suppressUpdate) {\n      Customizations._raiseChange();\n    }\n  }\n\n  public static observe(onChange: () => void): void {\n    _events.push(onChange);\n  }\n\n  public static unobserve(onChange: () => void): void {\n    _events = _events.filter((cb: () => void) => cb !== onChange);\n  }\n\n  private static _raiseChange(): void {\n    if (!Customizations._suppressUpdates) {\n      _events.forEach((cb: () => void) => cb());\n    }\n  }\n}\n","import * as React from 'react';\nimport { ICustomizations } from './Customizations';\n\nexport interface ICustomizerContext {\n  customizations: ICustomizations;\n}\n\nexport const CustomizerContext = React.createContext<ICustomizerContext>({\n  customizations: {\n    inCustomizerContext: false,\n    settings: {},\n    scopedSettings: {},\n  },\n});\n","import { getWindow } from './dom/getWindow';\n\n// Initialize global window id.\nconst CURRENT_ID_PROPERTY = '__currentId__';\nconst DEFAULT_ID_STRING = 'id__';\n\n// tslint:disable-next-line:no-any\nlet _global: any = getWindow() || {};\n\nif (_global[CURRENT_ID_PROPERTY] === undefined) {\n  _global[CURRENT_ID_PROPERTY] = 0;\n}\n\n/**\n * Generates a unique id in the global scope (this spans across duplicate copies of the same library.)\n *\n * @public\n */\nexport function getId(prefix?: string): string {\n  let index = _global[CURRENT_ID_PROPERTY]++;\n\n  return (prefix || DEFAULT_ID_STRING) + index;\n}\n\n/**\n * Resets id counter to an (optional) number.\n *\n * @public\n */\nexport function resetIds(counter: number = 0): void {\n  _global[CURRENT_ID_PROPERTY] = counter;\n}\n","import { IIconStyleProps, IIconStyles } from './Icon.types';\nimport { mergeStyleSets } from '../../Styling';\n\n/** Class names used in themeable and non-themeable Icon components */\nexport const classNames = mergeStyleSets({\n  root: {\n    display: 'inline-block',\n  },\n  placeholder: [\n    'ms-Icon-placeHolder',\n    {\n      width: '1em',\n    },\n  ],\n  image: [\n    'ms-Icon-imageContainer',\n    {\n      overflow: 'hidden',\n    },\n  ],\n});\n/** Class name used only in non-themeable Icon components */\nexport const MS_ICON = 'ms-Icon';\n\nexport const getStyles = (props: IIconStyleProps): IIconStyles => {\n  const { className, iconClassName, isPlaceholder, isImage, styles } = props;\n\n  return {\n    root: [\n      isPlaceholder && classNames.placeholder,\n      classNames.root,\n      isImage && classNames.image,\n      iconClassName,\n      className,\n      styles && styles.root,\n      // tslint:disable-next-line:deprecation\n      styles && styles.imageContainer,\n    ],\n  };\n};\n","/* tslint:disable:no-string-literal */\nimport { assign } from './object';\n\n/**\n * EventRecord interface.\n *\n * @internal\n */\n// tslint:disable:no-any\nexport interface IEventRecord {\n  target: any;\n  eventName: string;\n  parent: any;\n  callback: (args?: any) => void;\n  elementCallback?: (...args: any[]) => void;\n  objectCallback?: (args?: any) => void;\n  options?: boolean | AddEventListenerOptions;\n}\n// tslint:enable:no-any\n\n/**\n * EventRecordsByName interface.\n *\n * @internal\n */\nexport interface IEventRecordsByName {\n  [eventName: string]: IEventRecordList;\n}\n\n/**\n * EventRecordList interface.\n *\n * @internal\n */\nexport interface IEventRecordList {\n  [id: string]: IEventRecord[] | number;\n  count: number;\n}\n\n/**\n * DeclaredEventsByName interface.\n *\n * @internal\n */\nexport interface IDeclaredEventsByName {\n  [eventName: string]: boolean;\n}\n\n/** An instance of EventGroup allows anything with a handle to it to trigger events on it.\n *  If the target is an HTMLElement, the event will be attached to the element and can be\n *  triggered as usual (like clicking for onClick).\n *  The event can be triggered by calling EventGroup.raise() here. If the target is an\n *  HTMLElement, the event gets raised and is handled by the browser. Otherwise, it gets\n *  handled here in EventGroup, and the handler is called in the context of the parent\n *  (which is passed in in the constructor).\n *\n * @public\n * {@docCategory EventGroup}\n */\nexport class EventGroup {\n  private static _uniqueId: number = 0;\n  // tslint:disable-next-line:no-any\n  private _parent: any;\n  private _eventRecords: IEventRecord[];\n  private _id: number = EventGroup._uniqueId++;\n  private _isDisposed: boolean;\n\n  /** For IE8, bubbleEvent is ignored here and must be dealt with by the handler.\n   *  Events raised here by default have bubbling set to false and cancelable set to true.\n   *  This applies also to built-in events being raised manually here on HTMLElements,\n   *  which may lead to unexpected behavior if it differs from the defaults.\n   *\n   */\n  public static raise(\n    // tslint:disable-next-line:no-any\n    target: any,\n    eventName: string,\n    // tslint:disable-next-line:no-any\n    eventArgs?: any,\n    bubbleEvent?: boolean,\n  ): boolean | undefined {\n    let retVal;\n\n    if (EventGroup._isElement(target)) {\n      if (typeof document !== 'undefined' && document.createEvent) {\n        let ev = document.createEvent('HTMLEvents');\n\n        ev.initEvent(eventName, bubbleEvent || false, true);\n\n        assign(ev, eventArgs);\n\n        retVal = target.dispatchEvent(ev);\n        // tslint:disable-next-line:no-any\n      } else if (typeof document !== 'undefined' && (document as any)['createEventObject']) {\n        // IE8\n        // tslint:disable-next-line:no-any\n        let evObj = (document as any)['createEventObject'](eventArgs);\n        // cannot set cancelBubble on evObj, fireEvent will overwrite it\n        target.fireEvent('on' + eventName, evObj);\n      }\n    } else {\n      while (target && retVal !== false) {\n        let events = <IEventRecordsByName>target.__events__;\n        let eventRecords = events ? events[eventName] : null;\n\n        if (eventRecords) {\n          for (let id in eventRecords) {\n            if (eventRecords.hasOwnProperty(id)) {\n              let eventRecordList = <IEventRecord[]>eventRecords[id];\n\n              for (let listIndex = 0; retVal !== false && listIndex < eventRecordList.length; listIndex++) {\n                let record = eventRecordList[listIndex];\n\n                if (record.objectCallback) {\n                  retVal = record.objectCallback.call(record.parent, eventArgs);\n                }\n              }\n            }\n          }\n        }\n\n        // If the target has a parent, bubble the event up.\n        target = bubbleEvent ? target.parent : null;\n      }\n    }\n\n    return retVal;\n  }\n\n  // tslint:disable-next-line:no-any\n  public static isObserved(target: any, eventName: string): boolean {\n    let events = target && <IEventRecordsByName>target.__events__;\n\n    return !!events && !!events[eventName];\n  }\n\n  /** Check to see if the target has declared support of the given event. */\n  // tslint:disable-next-line:no-any\n  public static isDeclared(target: any, eventName: string): boolean {\n    let declaredEvents = target && <IDeclaredEventsByName>target.__declaredEvents;\n\n    return !!declaredEvents && !!declaredEvents[eventName];\n  }\n\n  // tslint:disable-next-line:no-any\n  public static stopPropagation(event: any): void {\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    } else {\n      // IE8\n      event.cancelBubble = true;\n    }\n  }\n\n  private static _isElement(target: HTMLElement): boolean {\n    return (\n      !!target && (!!target.addEventListener || (typeof HTMLElement !== 'undefined' && target instanceof HTMLElement))\n    );\n  }\n\n  /** parent: the context in which events attached to non-HTMLElements are called */\n  // tslint:disable-next-line:no-any\n  public constructor(parent: any) {\n    this._parent = parent;\n    this._eventRecords = [];\n  }\n\n  public dispose(): void {\n    if (!this._isDisposed) {\n      this._isDisposed = true;\n\n      this.off();\n      this._parent = null;\n    }\n  }\n\n  /** On the target, attach a set of events, where the events object is a name to function mapping. */\n  // tslint:disable-next-line:no-any\n  public onAll(target: any, events: { [key: string]: (args?: any) => void }, useCapture?: boolean): void {\n    for (let eventName in events) {\n      if (events.hasOwnProperty(eventName)) {\n        this.on(target, eventName, events[eventName], useCapture);\n      }\n    }\n  }\n\n  /**\n   * On the target, attach an event whose handler will be called in the context of the parent\n   * of this instance of EventGroup.\n   */\n  public on(\n    target: any, // tslint:disable-line:no-any\n    eventName: string,\n    callback: (args?: any) => void, // tslint:disable-line:no-any\n    options?: boolean | AddEventListenerOptions,\n  ): void {\n    if (eventName.indexOf(',') > -1) {\n      let events = eventName.split(/[ ,]+/);\n\n      for (let i = 0; i < events.length; i++) {\n        this.on(target, events[i], callback, options);\n      }\n    } else {\n      let parent = this._parent;\n      let eventRecord: IEventRecord = {\n        target: target,\n        eventName: eventName,\n        parent: parent,\n        callback: callback,\n        options,\n      };\n\n      // Initialize and wire up the record on the target, so that it can call the callback if the event fires.\n      let events = <IEventRecordsByName>(target.__events__ = target.__events__ || {});\n      events[eventName] =\n        events[eventName] ||\n        <IEventRecordList>{\n          count: 0,\n        };\n      events[eventName][this._id] = events[eventName][this._id] || [];\n      (<IEventRecord[]>events[eventName][this._id]).push(eventRecord);\n      events[eventName].count++;\n\n      if (EventGroup._isElement(target)) {\n        // tslint:disable-next-line:no-any\n        let processElementEvent = (...args: any[]) => {\n          if (this._isDisposed) {\n            return;\n          }\n\n          let result;\n          try {\n            result = callback.apply(parent, args);\n            if (result === false && args[0]) {\n              let e = args[0];\n\n              if (e.preventDefault) {\n                e.preventDefault();\n              }\n\n              if (e.stopPropagation) {\n                e.stopPropagation();\n              }\n\n              e.cancelBubble = true;\n            }\n          } catch (e) {\n            /* ErrorHelper.log(e); */\n          }\n\n          return result;\n        };\n\n        eventRecord.elementCallback = processElementEvent;\n\n        if (target.addEventListener) {\n          /* tslint:disable:ban-native-functions */\n          (<EventTarget>target).addEventListener(eventName, processElementEvent, options);\n          /* tslint:enable:ban-native-functions */\n        } else if (target.attachEvent) {\n          // IE8\n          target.attachEvent('on' + eventName, processElementEvent);\n        }\n      } else {\n        // tslint:disable-next-line:no-any\n        let processObjectEvent = (...args: any[]) => {\n          if (this._isDisposed) {\n            return;\n          }\n\n          return callback.apply(parent, args);\n        };\n\n        eventRecord.objectCallback = processObjectEvent;\n      }\n\n      // Remember the record locally, so that it can be removed.\n      this._eventRecords.push(eventRecord);\n    }\n  }\n\n  public off(\n    target?: any, // tslint:disable-line:no-any\n    eventName?: string,\n    callback?: (args?: any) => void, // tslint:disable-line:no-any\n    options?: boolean | AddEventListenerOptions,\n  ): void {\n    for (let i = 0; i < this._eventRecords.length; i++) {\n      let eventRecord = this._eventRecords[i];\n      if (\n        (!target || target === eventRecord.target) &&\n        (!eventName || eventName === eventRecord.eventName) &&\n        (!callback || callback === eventRecord.callback) &&\n        (typeof options !== 'boolean' || options === eventRecord.options)\n      ) {\n        let events = <IEventRecordsByName>eventRecord.target.__events__;\n        let targetArrayLookup = events[eventRecord.eventName];\n        let targetArray = targetArrayLookup ? <IEventRecord[]>targetArrayLookup[this._id] : null;\n\n        // We may have already target's entries, so check for null.\n        if (targetArray) {\n          if (targetArray.length === 1 || !callback) {\n            targetArrayLookup.count -= targetArray.length;\n            delete events[eventRecord.eventName][this._id];\n          } else {\n            targetArrayLookup.count--;\n            targetArray.splice(targetArray.indexOf(eventRecord), 1);\n          }\n\n          if (!targetArrayLookup.count) {\n            delete events[eventRecord.eventName];\n          }\n        }\n\n        if (eventRecord.elementCallback) {\n          if (eventRecord.target.removeEventListener) {\n            eventRecord.target.removeEventListener(\n              eventRecord.eventName,\n              eventRecord.elementCallback,\n              eventRecord.options,\n            );\n          } else if (eventRecord.target.detachEvent) {\n            // IE8\n            eventRecord.target.detachEvent('on' + eventRecord.eventName, eventRecord.elementCallback);\n          }\n        }\n\n        this._eventRecords.splice(i--, 1);\n      }\n    }\n  }\n\n  /** Trigger the given event in the context of this instance of EventGroup. */\n  // tslint:disable-next-line:no-any\n  public raise(eventName: string, eventArgs?: any, bubbleEvent?: boolean): boolean | undefined {\n    return EventGroup.raise(this._parent, eventName, eventArgs, bubbleEvent);\n  }\n\n  /** Declare an event as being supported by this instance of EventGroup. */\n  public declare(event: string | string[]): void {\n    let declaredEvents = (this._parent.__declaredEvents = this._parent.__declaredEvents || {});\n\n    if (typeof event === 'string') {\n      declaredEvents[event] = true;\n    } else {\n      for (let i = 0; i < event.length; i++) {\n        declaredEvents[event[i]] = true;\n      }\n    }\n  }\n}\n","import * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport { BaseDecorator } from './BaseDecorator';\nimport { getWindow, hoistStatics, EventGroup } from '../../Utilities';\n\nexport interface IWithResponsiveModeState {\n  responsiveMode?: ResponsiveMode;\n}\n\nexport enum ResponsiveMode {\n  small = 0,\n  medium = 1,\n  large = 2,\n  xLarge = 3,\n  xxLarge = 4,\n  xxxLarge = 5,\n  unknown = 999,\n}\n\nconst RESPONSIVE_MAX_CONSTRAINT = [479, 639, 1023, 1365, 1919, 99999999];\n\n/**\n * User specified mode to default to, useful for server side rendering scenarios.\n */\nlet _defaultMode: ResponsiveMode | undefined;\n\n/**\n * Tracking the last mode we successfully rendered, which allows us to\n * paint initial renders with the correct size.\n */\nlet _lastMode: ResponsiveMode | undefined;\n\n/**\n * Allows a server rendered scenario to provide a default responsive mode.\n */\nexport function setResponsiveMode(responsiveMode: ResponsiveMode | undefined): void {\n  _defaultMode = responsiveMode;\n}\n\n/**\n * Initializes the responsive mode to the current window size. This can be used to avoid\n * a re-render during first component mount since the window would otherwise not be measured\n * until after mounting.\n */\nexport function initializeResponsiveMode(element?: HTMLElement): void {\n  if (typeof window !== 'undefined') {\n    const currentWindow = (element && getWindow(element)) || window;\n\n    getResponsiveMode(currentWindow);\n  }\n}\n\nexport function withResponsiveMode<TProps extends { responsiveMode?: ResponsiveMode }, TState>(\n  ComposedComponent: new (props: TProps, ...args: any[]) => React.Component<TProps, TState>,\n): any {\n  const resultClass = class WithResponsiveMode extends BaseDecorator<TProps, IWithResponsiveModeState> {\n    private _events: EventGroup;\n\n    constructor(props: TProps) {\n      super(props);\n      this._events = new EventGroup(this);\n      this._updateComposedComponentRef = this._updateComposedComponentRef.bind(this);\n\n      this.state = {\n        responsiveMode: _defaultMode || _lastMode || ResponsiveMode.large,\n      };\n    }\n\n    public componentDidMount(): void {\n      this._events.on(window, 'resize', this._onResize);\n      this._onResize();\n    }\n\n    public componentWillUnmount(): void {\n      this._events.dispose();\n    }\n\n    public render(): JSX.Element | null {\n      const { responsiveMode } = this.state;\n\n      return responsiveMode === ResponsiveMode.unknown ? null : (\n        <ComposedComponent\n          ref={this._updateComposedComponentRef}\n          responsiveMode={responsiveMode}\n          {...(this.props as any)}\n        />\n      );\n    }\n\n    private _onResize = () => {\n      const element = findDOMNode(this) as Element;\n      const currentWindow = (element && getWindow(element)) || window;\n      const responsiveMode = getResponsiveMode(currentWindow);\n\n      if (responsiveMode !== this.state.responsiveMode) {\n        this.setState({\n          responsiveMode,\n        });\n      }\n    };\n  };\n  return hoistStatics(ComposedComponent, resultClass);\n}\n\nfunction getResponsiveMode(currentWindow: Window | undefined): ResponsiveMode {\n  let responsiveMode = ResponsiveMode.small;\n\n  if (currentWindow) {\n    try {\n      while (currentWindow.innerWidth > RESPONSIVE_MAX_CONSTRAINT[responsiveMode]) {\n        responsiveMode++;\n      }\n    } catch (e) {\n      // Return a best effort result in cases where we're in the browser but it throws on getting innerWidth.\n      responsiveMode = _defaultMode || _lastMode || ResponsiveMode.large;\n    }\n\n    // Tracking last mode just gives us a better default in future renders,\n    // which avoids starting with the wrong value if we've measured once.\n    _lastMode = responsiveMode;\n  } else {\n    if (_defaultMode !== undefined) {\n      responsiveMode = _defaultMode;\n    } else {\n      throw new Error(\n        'Content was rendered in a server environment without providing a default responsive mode. ' +\n          'Call setResponsiveMode to define what the responsive mode is.',\n      );\n    }\n  }\n\n  return responsiveMode;\n}\n"],"sourceRoot":""}