{"version":3,"sources":["components/Credentials/SignIn.tsx","utils/api.ts","actions/userAction.ts"],"names":["connect","state","user","dispatch","setUser","payload","props","useState","form","setForm","_onSubmit","e","a","preventDefault","api","signIn","username","password","res","signed_token","console","log","localStorage","setItem","getSession","then","success","data","history","push","updateForm","type","target","value","className","onSubmit","styles","root","width","margin","onChange","label","required","marginBottom","text","baseURL","request","url","axios","get","method","headers","getItem","body","post","delete","patch","Promise","resolve","getBooking","id","book","updateUser","changePassword","searchBooking","query","getUser","getDoctors","getGroups","createGroup","deleteGroup","createUser","deleteUser","getAllUsers","getMyBookings","updateTimeBlock","generateSignedUrl","uploadImage","config","imageLabel"],"mappings":"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","file":"static/js/12.6750637a.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { TextField } from 'office-ui-fabric-react/lib/TextField'\nimport { PrimaryButton } from 'office-ui-fabric-react/lib/Button'\nimport { setUser } from '../../actions/userAction'\nimport { connect } from 'react-redux'\nimport { Stack, IStackStyles } from 'office-ui-fabric-react/lib/Stack';\n\nimport api from '../../utils/api'\nimport history from '../../utils/history'\n\nconst SignIn: React.FC = (props: any) => {\n\n  let [form, setForm] = useState([{}, {}])\n  \n  const _onSubmit = async (e: any) => {\n    e.preventDefault();\n    let res: any = await api.signIn({ username: form[0], password: form[1] })\n    if (res.signed_token) {\n      console.log(res);\n      localStorage.setItem('token', res.signed_token);\n      api.getSession().then((res: any) => {\n        if (res.success) {\n          props.setUser(res.data);\n          history.push('/');\n        }\n      })\n    }\n    else {\n      // error\n    }\n  }\n\n  const updateForm = (e: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, type: number) => {\n    if (e.target == null) return;\n    let value = (e.target as HTMLTextAreaElement).value;\n    form[type] = value;\n    setForm(form);\n  }\n\n  const stackStyles: Partial<IStackStyles> = { root: { width: 900, margin: 'auto' } };\n\n  return (\n    <div className=\"signin\">\n      <form onSubmit={_onSubmit}>\n        <Stack styles={stackStyles}>\n          <TextField onChange={(e) => updateForm(e, 0)} label=\"Tên tài khoản\" required/>\n          <TextField onChange={(e) => updateForm(e, 1)} type=\"password\" label=\"Mật khẩu\" styles={{ root: { marginBottom: 20 } }} required/>\n          <PrimaryButton text=\"Đăng nhập\" type=\"submit\"/>\n        </Stack>\n      </form>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  user: state.user\n})\n\nconst mapDispatchtoProps = dispatch => ({\n  setUser: payload => dispatch(setUser(payload))\n})\n\nexport default connect(mapStateToProps, mapDispatchtoProps)(SignIn);","import axios from 'axios'\n\nconst baseURL = 'http://35.240.224.152:8081/api/'\nconst request = {\n  get: (url) => axios.get(baseURL + url, {\n    method: 'GET',\n    headers: {\n      \"Authorization\": localStorage.getItem('token')\n    }\n  }),\n  post: (url, body) => axios.post(baseURL + url, { ...body }, {\n    method: 'POST',\n    headers: {\n      \"Authorization\": localStorage.getItem('token')\n    },\n  }),\n  delete: (url) => axios.delete(baseURL + url, {\n    method: 'DELETE',\n    headers: {\n      \"Authorization\": localStorage.getItem('token')\n    }\n  }),\n  patch: (url, body) => axios.patch(baseURL + url, { ...body }, {\n    method: 'PATCH',\n    headers: {\n      \"Authorization\": localStorage.getItem('token')\n    },\n  }),\n}\n\nconst api = {\n  getSession: () => new Promise(resolve => request.get(\"user/me\").then((res: any) => resolve(res.data))),\n  getBooking: (id: any) => new Promise(resolve => request.get(\"booking/\" + id).then((res: any) => resolve(res.data))),\n  signIn: (body: any) => new Promise(resolve => request.post(\"auth/sign-in\", { ...body }).then((res: any) => resolve(res.data))),\n  book: (body: any) => new Promise(resolve => request.post(\"booking/new\", { ...body }).then((res: any) => resolve(res.data))),\n  updateUser: (body: any) => new Promise(resolve => request.post(\"\", { ...body }).then((res: any) => resolve(res.data))),\n  changePassword: (body: any) => new Promise(resolve => request.patch(\"user/me/password\", { ...body }).then((res: any) => resolve(res.data))),\n  searchBooking: (query: any) => new Promise(resolve => request.get(\"booking/phone/\" + query).then((res: any) => resolve(res.data))),\n  getUser: (query: any) => new Promise(resolve => request.get(\"user/\" + query).then((res: any) => resolve(res.data))),\n  getDoctors: (query: any) => new Promise(resolve => request.get(\"user/group/\" + query).then((res: any) => resolve(res.data))),\n  getGroups: () => new Promise(resolve => request.get(\"groups\").then((res: any) => resolve(res.data))),\n  createGroup: (body: any) => new Promise(resolve => request.post(\"group/new\", { ...body }).then((res: any) => resolve(res.data))),\n  deleteGroup: (query: any) => new Promise(resolve => request.delete(\"group/delete/\" + query).then((res: any) => resolve(res.data))),\n  createUser: (body: any) => new Promise(resolve => request.post(\"user/new\", { ...body }).then((res: any) => resolve(res.data))),\n  deleteUser: (query: any) => new Promise(resolve => request.delete(\"user/delete/\" + query).then((res: any) => resolve(res.data))),\n  getAllUsers: () => new Promise(resolve => request.get(\"users\").then((res: any) => resolve(res.data))),\n  getMyBookings: () => new Promise(resolve => request.get(\"booking/me\").then((res: any) => resolve(res.data))),\n  updateTimeBlock: (body: any) => new Promise(resolve => request.patch(\"user/me/available-time\", { ...body }).then((res: any) => resolve(res.data))),\n  generateSignedUrl: (body: any) => new Promise(resolve => request.post(\"aws/generate-signed-url\", { ...body }).then((res: any) => resolve(res.data))),\n  uploadImage: (config: any) => new Promise(resolve => axios(config). then((res: any) => resolve(res))),\n  imageLabel: (body: any) => new Promise(resolve => request.post(\"attachment\", { ...body }).then((res: any) => resolve(res.data))),\n  // getGroups: () => new Promise(resolve => resolve({\n  //   success: true,\n  //   data: [\n  //     { key: '1', value: 1, text: 'Khoa Nhi' },\n  //     { key: '2', value: 2, text: 'Khoa Ngoại tổng hợp' },\n  //     { key: '3', value: 3, text: 'Khoa Tim mạch' },\n  //     { key: '4', value: 4, text: 'Khoa Tai mũi họng' },\n  //     { key: '5', value: 5, text: 'Khoa gì đó' },\n  //   ]\n  // })),\n  // getDoctors: (query: any) => new Promise(resolve => resolve({\n  //   success: true,\n  //   data: [\n  //     { key: '1', value: 1, text: 'Hải đẹp trai' },\n  //     { key: '2', value: 2, text: 'Lê Đình Hải' },\n  //     { key: '3', value: 3, text: 'Hải' },\n  //     { key: '4', value: 4, text: 'Minh Thư :<' },\n  //     { key: '5', value: 5, text: 'Ai đó' },\n  //   ]\n  // })),\n  // searchBooking: (query: any) => new Promise(resolve => {\n  //   setTimeout(() => resolve(\n  //     {\n  //       success: true,\n  //       data: [\n  //         {  \n  //           _id: \"5ea2ec9710a79c6ec8a0e4ef\",\n  //           name: \"Nguyễn Minh Huy\",\n  //           description: \"Em bị đau bụng bác sĩ ạ\",\n  //           symptom: [\"đau bụng\", \"tiêu chảy\", \"ho\"],\n  //           gender: \"male\",\n  //           dob: \"12/12/2001\",\n  //           address: \"186/5 Hùng Vương, Nha Trang\",\n  //           phoneNumber: \"0397612666\",\n  //           passportNumber: \"225923301\",\n  //           healthCareId: \"ABCABC00011\",\n  //           doctorId: \"5ea2ec9710a79c6ec8a0e4ef\",\n  //           bookingDateTimestamp: 1587772800000,\n  //           startBlockTimeIndex: 7,\n  //           endBlockTimeIndex: 8\n  //         }\n  //       ]\n  //     }\n  //   ), 1000);\n  // }),\n}\n\nexport default api;","export const setUser = (payload: any) => ({ type: \"SET_USER\", payload: payload });"],"sourceRoot":""}