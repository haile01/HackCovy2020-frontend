{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/regenerator-runtime/runtime.js","../../src/controlled.ts","../../src/DelayedRender.tsx","../../src/utilities.ts","../../src/slots.tsx","../../src/createComponent.tsx","../../src/components/Stack/StackUtils.ts","../../src/components/Stack/Stack.styles.ts","../../src/components/Stack/StackItem/StackItem.styles.ts","../../src/components/Stack/StackItem/StackItem.tsx","../../src/components/Stack/Stack.tsx","../../src/components/TextField/TextField.base.tsx","../../src/components/TextField/TextField.styles.tsx","../../src/components/TextField/TextField.ts","../../src/components/Label/Label.base.tsx","../../src/components/Label/Label.tsx","../../src/components/Label/Label.styles.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"names":["_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","_arrayLikeToArray","arr","len","length","i","arr2","runtime","exports","Op","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","value","makeInvokeMethod","fn","obj","err","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","key","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","isControlled","props","valueProp","isRendered","componentDidMount","delay","_timeoutId","window","setTimeout","setState","componentWillUnmount","clearTimeout","render","only","children","defaultProps","withSlots","slotType","isSlot","numChildren","count","toArray","createFactory","DefaultComponent","options","defaultProp","componentProps","userProps","userSlotOptions","defaultStyles","theme","finalProps","classNames","allProps","className","rtl","_constructFinalProps","slotProps","transformedProps","_translateShorthand","component","UserComponent","defaultFactory","memoize","getSlots","slots","mixedProps","slot","args","_renderSlot","_defaultStyles","ComponentType","slotOptions","createComponent","view","factoryOptions","fields","settings","CustomizerContext","Customizations","getSettings","customizations","useState","tokens","_resolveTokens","allTokens","currentTokens","isArray","styles","allStyles","map","_resolveStyles","viewProps","statics","_getThemedSpacing","space","spacing","_getValueUnitGap","gap","numericalPart","parseFloat","numericalValue","numericalString","unit","substring","parsePadding","padding","paddingValues","split","reduce","padding1","padding2","nameMap","start","end","GlobalClassNames","root","inner","alignMap","StackItem","grow","shrink","disableShrink","align","verticalFill","order","fonts","medium","margin","height","width","flexGrow","flexShrink","alignSelf","Stack","as","warnDeprecations","maxHeight","maxWidth","stackChildren","child","index","item","defaultItemProps","nativeProps","rest","Slots","RootType","horizontal","reversed","horizontalAlign","verticalAlign","childrenGap","rowGap","columnGap","splitGap","calculatedGap","horizontalMargin","verticalMargin","childStyles","textOverflow","commonSelectors","flexWrap","overflow","display","marginLeft","marginRight","marginTop","marginBottom","boxSizing","selectors","flexDirection","Item","getClassNames","classNamesFunction","_textElement","_onFocus","ev","onFocus","isFocused","validateOnFocusIn","_validate","_onBlur","onBlur","validateOnFocusOut","_onRenderLabel","label","required","labelStyles","_classNames","subComponentStyles","Label","htmlFor","_id","disabled","id","_labelId","_onRenderDescription","description","_onInputChange","event","isSameValue","target","_lastChangeValue","persist","prevState","prevValue","_getValue","_isControlled","uncontrolledValue","onChange","initializeComponentRef","_async","Async","_fallbackId","getId","_descriptionId","COMPONENT_NAME","_warnControlledUsage","defaultValue","String","errorMessage","_delayedValidate","debounce","deferredValidationTime","_lastValidation","_adjustInputHeight","validateOnLoad","dispose","getSnapshotBeforeUpdate","prevProps","selection","selectionStart","selectionEnd","componentDidUpdate","snapshot","multiline","focus","setSelectionRange","_shouldValidateAllChanges","borderless","iconProps","inputClassName","underlined","prefix","resizable","suffix","autoAdjustHeight","onRenderPrefix","onRenderSuffix","onRenderLabel","onRenderDescription","_errorMessage","focused","hasLabel","hasErrorMessage","hasIcon","wrapper","fieldGroup","_onRenderPrefix","_renderTextArea","_renderInput","Icon","icon","_onRenderSuffix","_isDescriptionAvailable","role","DelayedRender","current","blur","select","setSelectionStart","setSelectionEnd","_hasWarnedNullValue","warn","style","paddingBottom","textAreaProps","ariaLabelledBy","ref","onInput","field","ariaLabel","readOnly","inputProps","_latestValidateValue","onGetErrorMessage","_notifyAfterValidate","onNotifyValidationResult","textField","scrollHeight","globalClassNames","unresizable","active","getLabelStyles","palette","color","neutralTertiary","fontSize","paddingLeft","paddingRight","lineHeight","TextField","styled","semanticColors","effects","fieldPrefixSuffix","background","disabledBackground","disabledText","inputPlaceholderText","alignItems","whiteSpace","placeholderStyles","opacity","disabledPlaceholderStyles","position","borderBottom","errorText","inputBorder","borderBottomColor","borderColor","inputBorderHovered","inputFocusBorderAlt","border","borderRadius","roundedCorner2","inputBackground","cursor","minHeight","flex","textAlign","backgroundColor","content","top","right","inputText","minWidth","outline","resize","paddingTop","pointerEvents","bottom","bodySubtext","xSmall","slideDownIn20","small","scope","cacheSize","labelFontWeight","semibold","labelColor","bodyText","labelDisabledColor","disabledBodyText","labelRequiredStarColor","fontWeight","boxShadow","wordWrap","overflowWrap","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","arguments","apply","_slicedToArray","_arr","_n","_d","_e","_s","_i","unsupportedIterableToArray"],"mappings":"sGAAA,+CACe,SAASA,EAA4BC,EAAGC,GACrD,GAAKD,EAAL,CACA,GAAiB,kBAANA,EAAgB,OAAO,YAAiBA,EAAGC,GACtD,IAAIC,EAAIC,OAAOC,UAAUC,SAASC,KAAKN,GAAGO,MAAM,GAAI,GAEpD,MADU,WAANL,GAAkBF,EAAEQ,cAAaN,EAAIF,EAAEQ,YAAYC,MAC7C,QAANP,GAAqB,QAANA,EAAoBQ,MAAMC,KAAKT,GACxC,cAANA,GAAqB,2CAA2CU,KAAKV,GAAW,YAAiBF,EAAGC,QAAxG,K,iCCPa,SAASY,EAAkBC,EAAKC,IAClC,MAAPA,GAAeA,EAAMD,EAAIE,UAAQD,EAAMD,EAAIE,QAE/C,IAAK,IAAIC,EAAI,EAAGC,EAAO,IAAIR,MAAMK,GAAME,EAAIF,EAAKE,IAC9CC,EAAKD,GAAKH,EAAIG,GAGhB,OAAOC,EAPT,mC,oBCOA,IAAIC,EAAW,SAAUC,GACvB,aAEA,IAAIC,EAAKlB,OAAOC,UACZkB,EAASD,EAAGE,eAEZC,EAA4B,oBAAXC,OAAwBA,OAAS,GAClDC,EAAiBF,EAAQG,UAAY,aACrCC,EAAsBJ,EAAQK,eAAiB,kBAC/CC,EAAoBN,EAAQO,aAAe,gBAE/C,SAASC,EAAKC,EAASC,EAASC,EAAMC,GAEpC,IAAIC,EAAiBH,GAAWA,EAAQ9B,qBAAqBkC,EAAYJ,EAAUI,EAC/EC,EAAYpC,OAAOqC,OAAOH,EAAejC,WACzCqC,EAAU,IAAIC,EAAQN,GAAe,IAMzC,OAFAG,EAAUI,QAqMZ,SAA0BV,EAASE,EAAMM,GACvC,IAAIG,EA9KuB,iBAgL3B,OAAO,SAAgBC,EAAQC,GAC7B,GA/KoB,cA+KhBF,EACF,MAAM,IAAIG,MAAM,gCAGlB,GAlLoB,cAkLhBH,EAA6B,CAC/B,GAAe,UAAXC,EACF,MAAMC,EAKR,OAAOE,IAMT,IAHAP,EAAQI,OAASA,EACjBJ,EAAQK,IAAMA,IAED,CACX,IAAIG,EAAWR,EAAQQ,SACvB,GAAIA,EAAU,CACZ,IAAIC,EAAiBC,EAAoBF,EAAUR,GACnD,GAAIS,EAAgB,CAClB,GAAIA,IAAmBE,EAAkB,SACzC,OAAOF,GAIX,GAAuB,SAAnBT,EAAQI,OAGVJ,EAAQY,KAAOZ,EAAQa,MAAQb,EAAQK,SAElC,GAAuB,UAAnBL,EAAQI,OAAoB,CACrC,GAlNqB,mBAkNjBD,EAEF,MADAA,EAhNc,YAiNRH,EAAQK,IAGhBL,EAAQc,kBAAkBd,EAAQK,SAEN,WAAnBL,EAAQI,QACjBJ,EAAQe,OAAO,SAAUf,EAAQK,KAGnCF,EA3NkB,YA6NlB,IAAIa,EAASC,EAASzB,EAASE,EAAMM,GACrC,GAAoB,WAAhBgB,EAAOE,KAAmB,CAO5B,GAJAf,EAAQH,EAAQmB,KAhOA,YAFK,iBAsOjBH,EAAOX,MAAQM,EACjB,SAGF,MAAO,CACLS,MAAOJ,EAAOX,IACdc,KAAMnB,EAAQmB,MAGS,UAAhBH,EAAOE,OAChBf,EA9OgB,YAiPhBH,EAAQI,OAAS,QACjBJ,EAAQK,IAAMW,EAAOX,OA7QPgB,CAAiB7B,EAASE,EAAMM,GAE7CF,EAcT,SAASmB,EAASK,EAAIC,EAAKlB,GACzB,IACE,MAAO,CAAEa,KAAM,SAAUb,IAAKiB,EAAGzD,KAAK0D,EAAKlB,IAC3C,MAAOmB,GACP,MAAO,CAAEN,KAAM,QAASb,IAAKmB,IAhBjC7C,EAAQY,KAAOA,EAoBf,IAOIoB,EAAmB,GAMvB,SAASd,KACT,SAAS4B,KACT,SAASC,KAIT,IAAIC,EAAoB,GACxBA,EAAkB1C,GAAkB,WAClC,OAAO2C,MAGT,IAAIC,EAAWnE,OAAOoE,eAClBC,EAA0BF,GAAYA,EAASA,EAASG,EAAO,MAC/DD,GACAA,IAA4BnD,GAC5BC,EAAOhB,KAAKkE,EAAyB9C,KAGvC0C,EAAoBI,GAGtB,IAAIE,EAAKP,EAA2B/D,UAClCkC,EAAUlC,UAAYD,OAAOqC,OAAO4B,GAQtC,SAASO,EAAsBvE,GAC7B,CAAC,OAAQ,QAAS,UAAUwE,SAAQ,SAAS/B,GAC3CzC,EAAUyC,GAAU,SAASC,GAC3B,OAAOuB,KAAK1B,QAAQE,EAAQC,OAoClC,SAAS+B,EAActC,EAAWuC,GAgChC,IAAIC,EAgCJV,KAAK1B,QA9BL,SAAiBE,EAAQC,GACvB,SAASkC,IACP,OAAO,IAAIF,GAAY,SAASG,EAASC,IAnC7C,SAASC,EAAOtC,EAAQC,EAAKmC,EAASC,GACpC,IAAIzB,EAASC,EAASnB,EAAUM,GAASN,EAAWO,GACpD,GAAoB,UAAhBW,EAAOE,KAEJ,CACL,IAAIyB,EAAS3B,EAAOX,IAChBe,EAAQuB,EAAOvB,MACnB,OAAIA,GACiB,kBAAVA,GACPvC,EAAOhB,KAAKuD,EAAO,WACdiB,EAAYG,QAAQpB,EAAMwB,SAASC,MAAK,SAASzB,GACtDsB,EAAO,OAAQtB,EAAOoB,EAASC,MAC9B,SAASjB,GACVkB,EAAO,QAASlB,EAAKgB,EAASC,MAI3BJ,EAAYG,QAAQpB,GAAOyB,MAAK,SAASC,GAI9CH,EAAOvB,MAAQ0B,EACfN,EAAQG,MACP,SAASI,GAGV,OAAOL,EAAO,QAASK,EAAOP,EAASC,MAvBzCA,EAAOzB,EAAOX,KAiCZqC,CAAOtC,EAAQC,EAAKmC,EAASC,MAIjC,OAAOH,EAaLA,EAAkBA,EAAgBO,KAChCN,EAGAA,GACEA,KAkHV,SAAS7B,EAAoBF,EAAUR,GACrC,IAAII,EAASI,EAAStB,SAASc,EAAQI,QACvC,QAvSE4C,IAuSE5C,EAAsB,CAKxB,GAFAJ,EAAQQ,SAAW,KAEI,UAAnBR,EAAQI,OAAoB,CAE9B,GAAII,EAAStB,SAAT,SAGFc,EAAQI,OAAS,SACjBJ,EAAQK,SAlTZ2C,EAmTItC,EAAoBF,EAAUR,GAEP,UAAnBA,EAAQI,QAGV,OAAOO,EAIXX,EAAQI,OAAS,QACjBJ,EAAQK,IAAM,IAAI4C,UAChB,kDAGJ,OAAOtC,EAGT,IAAIK,EAASC,EAASb,EAAQI,EAAStB,SAAUc,EAAQK,KAEzD,GAAoB,UAAhBW,EAAOE,KAIT,OAHAlB,EAAQI,OAAS,QACjBJ,EAAQK,IAAMW,EAAOX,IACrBL,EAAQQ,SAAW,KACZG,EAGT,IAAIuC,EAAOlC,EAAOX,IAElB,OAAM6C,EAOFA,EAAK/B,MAGPnB,EAAQQ,EAAS2C,YAAcD,EAAK9B,MAGpCpB,EAAQoD,KAAO5C,EAAS6C,QAQD,WAAnBrD,EAAQI,SACVJ,EAAQI,OAAS,OACjBJ,EAAQK,SAtWV2C,GAgXFhD,EAAQQ,SAAW,KACZG,GANEuC,GA3BPlD,EAAQI,OAAS,QACjBJ,EAAQK,IAAM,IAAI4C,UAAU,oCAC5BjD,EAAQQ,SAAW,KACZG,GAoDX,SAAS2C,EAAaC,GACpB,IAAIC,EAAQ,CAAEC,OAAQF,EAAK,IAEvB,KAAKA,IACPC,EAAME,SAAWH,EAAK,IAGpB,KAAKA,IACPC,EAAMG,WAAaJ,EAAK,GACxBC,EAAMI,SAAWL,EAAK,IAGxB3B,KAAKiC,WAAWC,KAAKN,GAGvB,SAASO,EAAcP,GACrB,IAAIxC,EAASwC,EAAMQ,YAAc,GACjChD,EAAOE,KAAO,gBACPF,EAAOX,IACdmD,EAAMQ,WAAahD,EAGrB,SAASf,EAAQN,GAIfiC,KAAKiC,WAAa,CAAC,CAAEJ,OAAQ,SAC7B9D,EAAYwC,QAAQmB,EAAc1B,MAClCA,KAAKqC,OAAM,GA8Bb,SAASjC,EAAOkC,GACd,GAAIA,EAAU,CACZ,IAAIC,EAAiBD,EAASjF,GAC9B,GAAIkF,EACF,OAAOA,EAAetG,KAAKqG,GAG7B,GAA6B,oBAAlBA,EAASd,KAClB,OAAOc,EAGT,IAAKE,MAAMF,EAAS3F,QAAS,CAC3B,IAAIC,GAAK,EAAG4E,EAAO,SAASA,IAC1B,OAAS5E,EAAI0F,EAAS3F,QACpB,GAAIM,EAAOhB,KAAKqG,EAAU1F,GAGxB,OAFA4E,EAAKhC,MAAQ8C,EAAS1F,GACtB4E,EAAKjC,MAAO,EACLiC,EAOX,OAHAA,EAAKhC,WAtdT4B,EAudII,EAAKjC,MAAO,EAELiC,GAGT,OAAOA,EAAKA,KAAOA,GAKvB,MAAO,CAAEA,KAAM7C,GAIjB,SAASA,IACP,MAAO,CAAEa,WAteP4B,EAseyB7B,MAAM,GA+MnC,OA3mBAM,EAAkB9D,UAAYsE,EAAGlE,YAAc2D,EAC/CA,EAA2B3D,YAAc0D,EACzCC,EAA2BrC,GACzBoC,EAAkB4C,YAAc,oBAYlC1F,EAAQ2F,oBAAsB,SAASC,GACrC,IAAIC,EAAyB,oBAAXD,GAAyBA,EAAOxG,YAClD,QAAOyG,IACHA,IAAS/C,GAG2B,uBAAnC+C,EAAKH,aAAeG,EAAKxG,QAIhCW,EAAQ8F,KAAO,SAASF,GAUtB,OATI7G,OAAOgH,eACThH,OAAOgH,eAAeH,EAAQ7C,IAE9B6C,EAAOI,UAAYjD,EACbrC,KAAqBkF,IACzBA,EAAOlF,GAAqB,sBAGhCkF,EAAO5G,UAAYD,OAAOqC,OAAOkC,GAC1BsC,GAOT5F,EAAQiG,MAAQ,SAASvE,GACvB,MAAO,CAAEuC,QAASvC,IAsEpB6B,EAAsBE,EAAczE,WACpCyE,EAAczE,UAAUwB,GAAuB,WAC7C,OAAOyC,MAETjD,EAAQyD,cAAgBA,EAKxBzD,EAAQkG,MAAQ,SAASrF,EAASC,EAASC,EAAMC,EAAa0C,QACxC,IAAhBA,IAAwBA,EAAcyC,SAE1C,IAAIC,EAAO,IAAI3C,EACb7C,EAAKC,EAASC,EAASC,EAAMC,GAC7B0C,GAGF,OAAO1D,EAAQ2F,oBAAoB7E,GAC/BsF,EACAA,EAAK3B,OAAOP,MAAK,SAASF,GACxB,OAAOA,EAAOxB,KAAOwB,EAAOvB,MAAQ2D,EAAK3B,WAuKjDlB,EAAsBD,GAEtBA,EAAG5C,GAAqB,YAOxB4C,EAAGhD,GAAkB,WACnB,OAAO2C,MAGTK,EAAGrE,SAAW,WACZ,MAAO,sBAkCTe,EAAQqG,KAAO,SAASC,GACtB,IAAID,EAAO,GACX,IAAK,IAAIE,KAAOD,EACdD,EAAKlB,KAAKoB,GAMZ,OAJAF,EAAKG,UAIE,SAAS/B,IACd,KAAO4B,EAAKzG,QAAQ,CAClB,IAAI2G,EAAMF,EAAKI,MACf,GAAIF,KAAOD,EAGT,OAFA7B,EAAKhC,MAAQ8D,EACb9B,EAAKjC,MAAO,EACLiC,EAQX,OADAA,EAAKjC,MAAO,EACLiC,IAsCXzE,EAAQqD,OAASA,EAMjB/B,EAAQtC,UAAY,CAClBI,YAAakC,EAEbgE,MAAO,SAASoB,GAcd,GAbAzD,KAAK0D,KAAO,EACZ1D,KAAKwB,KAAO,EAGZxB,KAAKhB,KAAOgB,KAAKf,WAjfjBmC,EAkfApB,KAAKT,MAAO,EACZS,KAAKpB,SAAW,KAEhBoB,KAAKxB,OAAS,OACdwB,KAAKvB,SAtfL2C,EAwfApB,KAAKiC,WAAW1B,QAAQ4B,IAEnBsB,EACH,IAAK,IAAIrH,KAAQ4D,KAEQ,MAAnB5D,EAAKuH,OAAO,IACZ1G,EAAOhB,KAAK+D,KAAM5D,KACjBoG,OAAOpG,EAAKF,MAAM,MACrB8D,KAAK5D,QAhgBXgF,IAsgBFwC,KAAM,WACJ5D,KAAKT,MAAO,EAEZ,IACIsE,EADY7D,KAAKiC,WAAW,GACLG,WAC3B,GAAwB,UAApByB,EAAWvE,KACb,MAAMuE,EAAWpF,IAGnB,OAAOuB,KAAK8D,MAGd5E,kBAAmB,SAAS6E,GAC1B,GAAI/D,KAAKT,KACP,MAAMwE,EAGR,IAAI3F,EAAU4B,KACd,SAASgE,EAAOC,EAAKC,GAYnB,OAXA9E,EAAOE,KAAO,QACdF,EAAOX,IAAMsF,EACb3F,EAAQoD,KAAOyC,EAEXC,IAGF9F,EAAQI,OAAS,OACjBJ,EAAQK,SAjiBZ2C,KAoiBY8C,EAGZ,IAAK,IAAItH,EAAIoD,KAAKiC,WAAWtF,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAIgF,EAAQ5B,KAAKiC,WAAWrF,GACxBwC,EAASwC,EAAMQ,WAEnB,GAAqB,SAAjBR,EAAMC,OAIR,OAAOmC,EAAO,OAGhB,GAAIpC,EAAMC,QAAU7B,KAAK0D,KAAM,CAC7B,IAAIS,EAAWlH,EAAOhB,KAAK2F,EAAO,YAC9BwC,EAAanH,EAAOhB,KAAK2F,EAAO,cAEpC,GAAIuC,GAAYC,EAAY,CAC1B,GAAIpE,KAAK0D,KAAO9B,EAAME,SACpB,OAAOkC,EAAOpC,EAAME,UAAU,GACzB,GAAI9B,KAAK0D,KAAO9B,EAAMG,WAC3B,OAAOiC,EAAOpC,EAAMG,iBAGjB,GAAIoC,GACT,GAAInE,KAAK0D,KAAO9B,EAAME,SACpB,OAAOkC,EAAOpC,EAAME,UAAU,OAG3B,KAAIsC,EAMT,MAAM,IAAI1F,MAAM,0CALhB,GAAIsB,KAAK0D,KAAO9B,EAAMG,WACpB,OAAOiC,EAAOpC,EAAMG,gBAU9B5C,OAAQ,SAASG,EAAMb,GACrB,IAAK,IAAI7B,EAAIoD,KAAKiC,WAAWtF,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAIgF,EAAQ5B,KAAKiC,WAAWrF,GAC5B,GAAIgF,EAAMC,QAAU7B,KAAK0D,MACrBzG,EAAOhB,KAAK2F,EAAO,eACnB5B,KAAK0D,KAAO9B,EAAMG,WAAY,CAChC,IAAIsC,EAAezC,EACnB,OAIAyC,IACU,UAAT/E,GACS,aAATA,IACD+E,EAAaxC,QAAUpD,GACvBA,GAAO4F,EAAatC,aAGtBsC,EAAe,MAGjB,IAAIjF,EAASiF,EAAeA,EAAajC,WAAa,GAItD,OAHAhD,EAAOE,KAAOA,EACdF,EAAOX,IAAMA,EAET4F,GACFrE,KAAKxB,OAAS,OACdwB,KAAKwB,KAAO6C,EAAatC,WAClBhD,GAGFiB,KAAKsE,SAASlF,IAGvBkF,SAAU,SAASlF,EAAQ4C,GACzB,GAAoB,UAAhB5C,EAAOE,KACT,MAAMF,EAAOX,IAcf,MAXoB,UAAhBW,EAAOE,MACS,aAAhBF,EAAOE,KACTU,KAAKwB,KAAOpC,EAAOX,IACM,WAAhBW,EAAOE,MAChBU,KAAK8D,KAAO9D,KAAKvB,IAAMW,EAAOX,IAC9BuB,KAAKxB,OAAS,SACdwB,KAAKwB,KAAO,OACa,WAAhBpC,EAAOE,MAAqB0C,IACrChC,KAAKwB,KAAOQ,GAGPjD,GAGTwF,OAAQ,SAASxC,GACf,IAAK,IAAInF,EAAIoD,KAAKiC,WAAWtF,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAIgF,EAAQ5B,KAAKiC,WAAWrF,GAC5B,GAAIgF,EAAMG,aAAeA,EAGvB,OAFA/B,KAAKsE,SAAS1C,EAAMQ,WAAYR,EAAMI,UACtCG,EAAcP,GACP7C,IAKb,MAAS,SAAS8C,GAChB,IAAK,IAAIjF,EAAIoD,KAAKiC,WAAWtF,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAIgF,EAAQ5B,KAAKiC,WAAWrF,GAC5B,GAAIgF,EAAMC,SAAWA,EAAQ,CAC3B,IAAIzC,EAASwC,EAAMQ,WACnB,GAAoB,UAAhBhD,EAAOE,KAAkB,CAC3B,IAAIkF,EAASpF,EAAOX,IACpB0D,EAAcP,GAEhB,OAAO4C,GAMX,MAAM,IAAI9F,MAAM,0BAGlB+F,cAAe,SAASnC,EAAUf,EAAYE,GAa5C,OAZAzB,KAAKpB,SAAW,CACdtB,SAAU8C,EAAOkC,GACjBf,WAAYA,EACZE,QAASA,GAGS,SAAhBzB,KAAKxB,SAGPwB,KAAKvB,SA1qBP2C,GA6qBOrC,IAQJhC,EA1rBM,CAisBgB2H,EAAO3H,SAGtC,IACE4H,mBAAqB7H,EACrB,MAAO8H,GAUPC,SAAS,IAAK,yBAAdA,CAAwC/H,K,iCCjtBpC,SAAUgI,EAAgBC,EAAUC,GAGxC,YAA4B5D,IAArB2D,EAAMC,IAAiD,OAArBD,EAAMC,GATjD,mC,sFCmCA,cAOE,WAAYD,GAAZ,MACE,YAAMA,IAAM,K,OACZ,EAAKxG,MAAQ,CACX0G,YAAY,G,EAsBlB,OAhCmC,iBAc1B,YAAAC,kBAAP,sBACQC,EAAA,WAAAA,MACNnF,KAAKoF,WAAaC,OAAOC,YAAW,WAClC,EAAKC,SAAS,CACZN,YAAY,MAEbE,IAGE,YAAAK,qBAAP,WACMxF,KAAKoF,YACPK,aAAazF,KAAKoF,aAIf,YAAAM,OAAP,WACE,OAAO1F,KAAKzB,MAAM0G,WAAc,WAAeU,KAAK3F,KAAK+E,MAAMa,UAAuC,MA7B1F,EAAAC,aAAe,CAC3BV,MAAO,GA8BX,EAhCA,CAAmC,c,iHClCtB,EAAS,ICkChB,SAAUW,EACdxG,EACAyF,G,IAEA,wDAEA,IAAMgB,EAAWzG,EACjB,GAAIyG,EAASC,OAAQ,CAGnB,IAAMC,EAAc,WAAeC,MAAMN,GACzC,OAAoB,IAAhBK,EACKF,EAAShB,IAUlBa,EAAW,WAAeO,QAAQP,GAE3BG,EAAS,OAAD,IAAC,CAAD,eAAOhB,GAAa,CAAEa,SAAQ,MAQ7C,OAAO,gBAAmB,MAAnB,EAAK,aAAetG,EAAMyF,GAAUa,IAUzC,SAAUQ,EACdC,EACAC,QAAA,IAAAA,MAAA,IAEQ,QAAAC,mBAAA,mBAiCR,OA/BqD,SACnDC,EACAC,EACAC,EACAC,EACAC,GAGA,GAAI,iBAAqBH,GACvB,OAAOA,EAGT,IACMI,EAsGV,SACEF,EACAC,G,IAEA,wDAKA,IAHA,IAAMC,EAAqB,GACrBC,EAAqC,GAEvB,MAAAC,EAAA,eAAU,CAAzB,IAAMhC,EAAK,KACd+B,EAAW5E,KAAK6C,GAASA,EAAMiC,WAC/B,EAAOH,EAAY9B,GAKrB,OAFA8B,EAAWG,UAAY,YAAS,CAACL,EAAeG,GAAa,CAAEG,IAAK,YAAOL,KAEpEC,EAtHcK,CAAqBP,EAAeC,EAAOJ,EAkFlE,SACED,EACAY,G,MAEIC,EAEqB,kBAAdD,GAA+C,kBAAdA,GAA+C,mBAAdA,IACxD,MAChBZ,GAAcY,EADjBC,EAEW,GAEXA,EAAmBD,EAGrB,OAAOC,EAjG0CC,CAAoBd,EAAuBE,IAG1F,GAAIC,EAAiB,CACnB,GAAIA,EAAgBY,UAAW,CAG7B,IAAMC,EAAgBb,EAAgBY,UACtC,OAAO,gBAACC,EAAa,eAAKV,IAG5B,GAAIH,EAAgBhB,OAClB,OAAOgB,EAAgBhB,OAAOmB,EAAYR,GAI9C,OAAO,gBAACA,EAAgB,eAAKQ,KASjC,IAAMW,EAAiB,OAAAC,EAAA,IAAgB,SAAAnI,GAAQ,OAAA8G,EAAA,MAQzC,SAAUsB,EACdjB,EACAkB,GAEA,IAAM5G,EAA4C,GAG5C6G,EAAanB,E,WAER,GACT,GAAIkB,EAAMzK,eAAe,GAAO,CAK9B,IAAM2K,EAAiE,SAACrB,G,IAAgB,wDACtF,GAAIsB,EAAKnL,OAAS,EAGhB,MAAM,IAAI+B,MAAM,6FAMlB,OAAOqJ,EACLJ,EAAM,GAENnB,EACAoB,EAAW,GACXA,EAAWD,OAASC,EAAWD,MAAM,GAGrCC,EAAWI,gBAAkBJ,EAAWI,eAAe,GACtDJ,EAAmBhB,QAGxBiB,EAAK7B,QAAS,EACdjF,EAAO,GAAQ8G,IA7BnB,IAAK,IAAM,KAAQF,E,EAAR,GAiCX,OAAO5G,EAsDT,SAASgH,EAKPE,EACAzB,EACAC,EACAyB,EACAvB,EACAC,GAEA,YAA6BxF,IAAzB6G,EAAc9J,OACT8J,EAAc9J,OAAOqI,EAAgBC,EAAWyB,EAAavB,GAG3Da,EAAeS,EAAfT,CACPhB,EACAC,EACAyB,EACAvB,EACAC,G,6BCjNA,SAAUuB,EAOdC,EACA9B,QAAA,IAAAA,MAAA,IAEQ,QAAA+B,eACA9B,QADA,YACAA,YAEFxF,EAAmD,SACvDyF,GAEA,IA2GF/D,EACArE,EACAkK,EA7GQC,GA2GR9F,EA1GI6D,EAAQ7D,YA2GZrE,EA1GI,aAAiBoK,EAAA,GA2GrBF,EA1GIhC,EAAQgC,OAgHLG,EAAA,EAAeC,YAAYJ,GADZ,CAAC,QAAS,SAAU,UACiB7F,EAAarE,EAAQuK,iBA7GxEC,EAAWtC,EAAQ/H,MAErBqK,IAEFpC,EAAiB,OAAH,IAAG,CAAH,eACTA,GACAoC,EAASpC,KAIhB,IAAMI,EAAQJ,EAAeI,OAAS2B,EAAS3B,MAEzCiC,EAuDV,SAASC,EACP/D,EACA6B,G,IACA,wDAIA,IAFA,IAAMiC,EAAS,GAEW,MAAAE,EAAA,eAAW,CAAhC,IAAIC,EAAa,KAChBA,IAEFA,EAC2B,oBAAlBA,EACFA,EAAsDjE,EAAO6B,GAC9DoC,EAEF3M,MAAM4M,QAAQD,KAChBA,EAAgBF,EAAc,0BAAC/D,EAAO6B,GAAUoC,KAGlD,EAAOH,EAAQG,IAInB,OAAOH,EA9EUC,CAAetC,EAAgBI,EAAON,EAAQuC,OAAQN,EAASM,OAAQrC,EAAeqC,QAC/FK,EAsCV,SACEnE,EACA6B,EACAiC,G,IACA,wDAEA,OAAO,IAAe,aACjBM,EAAUC,KAAI,SAACF,GAChB,MAAkB,oBAAXA,EAAwBA,EAAOnE,EAAO6B,EAAOiC,GAAUK,MA9CjDG,CACb7C,EACAI,EACAiC,EACAvC,EAAQ4C,OACRX,EAASW,OACT1C,EAAe0C,QAGXI,EAAY,2BACb9C,GAAc,CACjB0C,OAAM,EACNL,OAAM,EACNb,eAAgBkB,EAChBtC,MAAK,IAGP,OAAOwB,EAAKkB,IAed,OAZAvI,EAAO0B,YAAc6D,EAAQ7D,aAAe2F,EAAKhM,KAK7CmK,IACDxF,EAA8C5C,OAASiI,EAAcrF,EAAQ,CAAEwF,YAAW,KAG7F,EAAOxF,EAAQuF,EAAQiD,SAGhBxI,E,sBC/FHyI,EAAoB,SAACC,EAAe7C,GACxC,OAAIA,EAAM8C,QAAQxM,eAAeuM,GACxB7C,EAAM8C,QAAQD,GAEhBA,GAIHE,EAAmB,SAACC,GACxB,IAAMC,EAAgBC,WAAWF,GAC3BG,EAAiBvH,MAAMqH,GAAiB,EAAIA,EAC5CG,EAAkBxH,MAAMqH,GAAiB,GAAKA,EAAc7N,WAIlE,MAAO,CACLwD,MAAOuK,EACPE,KAJeL,EAAIM,UAAUF,EAAgBhO,WAAWW,SAItC,OA+ETwN,EAAe,SAACC,EAAsCxD,GACjE,QAAgBxF,IAAZgJ,GAA4C,kBAAZA,GAAoC,KAAZA,EAC1D,OAAOA,EAGT,IAAMC,EAAgBD,EAAQE,MAAM,KACpC,OAAID,EAAc1N,OAAS,EAClB6M,EAAkBY,EAASxD,GAG7ByD,EAAcE,QAAO,SAACC,EAAkBC,GAC7C,OAAOjB,EAAkBgB,EAAU5D,GAAS,IAAM4C,EAAkBiB,EAAU7D,OC/G5E8D,EAAqC,CACzCC,MAAO,aACPC,IAAK,YAGDC,EAAmB,CACvBC,KAAM,WACNC,MAAO,kBCRH,EAAmB,CACvBD,KAAM,gBAGFE,EAAsC,CAC1CL,MAAO,aACPC,IAAK,YCUMK,EAAsD9C,GAbhB,SAAApD,GACzC,IAAAa,EAAA,EAAAA,SACR,OAAI,WAAeM,MAAMN,GAAY,EAC5B,KAOF,EAJO8B,EAA2C3C,EAAO,CAC9D+F,KAAM,QAGMA,KAAI,KAAElF,KAG4E,CAChGnD,YAAa,YACbyG,ODT4D,SAACnE,EAAO6B,EAAOiC,GACnE,IAAAqC,EAAA,EAAAA,KAAMC,EAAA,EAAAA,OAAQC,EAAA,EAAAA,cAAeC,EAAA,EAAAA,MAAOC,EAAA,EAAAA,aAAcC,EAAA,EAAAA,MAAOvE,EAAA,EAAAA,UAE3DF,EAAa,YAAoB,EAAkBF,GAEzD,MAAO,CACLkE,KAAM,CACJlE,EAAM4E,MAAMC,OACZ3E,EAAWgE,KACX,CACEY,OAAQ7C,EAAO6C,OACfC,OAAQL,EAAe,OAAS,OAChCM,MAAO,QAETV,GAAQ,CAAEW,UAAmB,IAATX,EAAgB,EAAIA,IACvCE,IAAmBF,IAASC,IAAY,CACvCW,WAAY,GAEdX,IACGC,GAAiB,CAChBU,WAAY,GAEhBT,GAAS,CACPU,UAAWf,EAASK,IAAUA,GAEhCE,GAAS,CACPA,MAAOA,GAETvE,OEgCN,IAIagF,EAET7D,GArEuC,SAAApD,GACjC,QAAAkH,GAAA,qBAAsBb,EAAA,EAAAA,cAAezN,EAAA,EAAAA,KAAM,+CAEnD,OAAAuO,EAAA,GAAiB,QAASnH,EAAO,CAC/B6E,IAAK,qBACLuC,UAAW,mBACXC,SAAU,kBACVhC,QAAS,mBAGX,IAAMiC,EAAgE,WAAejD,IACnFrE,EAAMa,UACN,SAAC0G,EAA4CC,GAC3C,IAAKD,EACH,OAAO,KAGT,IAiCgBE,EAjCCF,IAuCH,kBAATE,GACJA,EAA4BlN,MAE7BkN,EAA4BlN,KAA6BmD,cAAgBwI,EAAUxI,YA1C1D,CACvB,IAAMgK,EAAoC,CACxCtB,QAASC,GAGX,OAAO,eAAmBkB,EAAK,2BAC1BG,GACAH,EAAMvH,QA0BnB,IAAsByH,EAtBhB,OAAOF,KAILI,EAAc,YAAqDC,EAAM,KAEzEC,EAAQlF,EAAmC3C,EAAO,CACtD+F,KAAM+B,EACN9B,MAAO,QAGT,OAEI,EAAC6B,EAAM9B,KAAI,eAAK4B,GAFhB/O,EAGE,EAACiP,EAAM7B,MAAK,KAAEsB,GAKiBA,KAsBR,CAC7B5J,YAAa,QACbyG,OHlE+C,SAACnE,EAAO6B,EAAOiC,G,kBAE5DyC,EAAA,EAAAA,aACAwB,EAAA,EAAAA,WACAC,EAAA,EAAAA,SACA7B,EAAA,EAAAA,KACAvN,EAAA,EAAAA,KACAqP,EAAA,EAAAA,gBACAC,EAAA,EAAAA,cACA7B,EAAA,EAAAA,cACApE,EAAA,EAAAA,UAGIF,EAAa,YAAoB+D,EAAkBjE,GAGnDsG,EAAcrE,GAAUA,EAAOqE,YAAcrE,EAAOqE,YAAcnI,EAAM6E,IACxEuC,EAAYtD,GAAUA,EAAOsD,UAAYtD,EAAOsD,UAAYpH,EAAMoH,UAClEC,EAAWvD,GAAUA,EAAOuD,SAAWvD,EAAOuD,SAAWrH,EAAMqH,SAC/DhC,EAAUvB,GAAUA,EAAOuB,QAAUvB,EAAOuB,QAAUrF,EAAMqF,QAG5D,EDDgB,SACtBR,EACAhD,GAEA,QAAYxF,IAARwI,GAA6B,KAARA,EACvB,MAAO,CACLuD,OAAQ,CACN3N,MAAO,EACPyK,KAAM,MAERmD,UAAW,CACT5N,MAAO,EACPyK,KAAM,OAKZ,GAAmB,kBAARL,EACT,MAAO,CACLuD,OAAQ,CACN3N,MAAOoK,EACPK,KAAM,MAERmD,UAAW,CACT5N,MAAOoK,EACPK,KAAM,OAKZ,IAAMoD,EAAWzD,EAAIU,MAAM,KAG3B,GAAI+C,EAAS1Q,OAAS,EACpB,MAAO,CACLwQ,OAAQ,CACN3N,MAAO,EACPyK,KAAM,MAERmD,UAAW,CACT5N,MAAO,EACPyK,KAAM,OAMZ,GAAwB,IAApBoD,EAAS1Q,OACX,MAAO,CACLwQ,OAAQxD,EAAiBH,EAAkB6D,EAAS,GAAIzG,IACxDwG,UAAWzD,EAAiBH,EAAkB6D,EAAS,GAAIzG,KAK/D,IAAM0G,EAAgB3D,EAAiBH,EAAkBI,EAAKhD,IAE9D,MAAO,CACLuG,OAAQG,EACRF,UAAWE,GC1DP,MAAEH,EAAA,EAAAA,OAAQC,EAAA,EAAAA,UAEVG,EAAmB,IAAI,GAAMH,EAAU5N,MAAQ4N,EAAUnD,KACzDuD,EAAiB,IAAI,GAAML,EAAO3N,MAAQ2N,EAAOlD,KAGjDwD,EAAc,CAClBC,aAAc,YAIVC,EAAkB,CAEtB,yBAA0B,CACxB7B,WAAYV,EAAgB,EAAI,IAIpC,OAAIzN,EACK,CACLmN,KAAM,CACJhE,EAAWgE,KACX,CACE8C,SAAU,OACVxB,SAAQ,EACRD,UAAS,EACTP,MAAO,OACPiC,SAAU,UACVlC,OAAQ,QAEVqB,IAAe,KACb,EAACF,EAAa,iBAAmB,cAAepC,EAAQsC,IAAoBA,EAC7E,GACDC,IAAa,KACX,EAACH,EAAa,aAAe,kBAAmBpC,EAAQuC,IAAkBA,EAC3E,GACDjG,EACA,CAGE8G,QAAS,QAEXhB,GAAc,CACZnB,OAAQL,EAAe,OAAS,SAIpCP,MAAO,CACLjE,EAAWiE,MACX,CACE+C,QAAS,OACTF,SAAU,OACVG,WAAYR,EACZS,YAAaT,EACbU,UAAWT,EACXU,aAAcV,EACdK,SAAU,UACVM,UAAW,aACX/D,QAASD,EAAaC,EAASxD,GAE/BgF,MAA2B,IAApBwB,EAAU5N,MAAc,OAAS,eAAe4N,EAAU5N,MAAQ4N,EAAUnD,KAAI,IACvFmC,SAAU,QAEVgC,UAAW,OAAF,IAAE,CAAF,CACP,MAAK,aACH1C,OAAQ,GAAG,GAAMyB,EAAO3N,MAAQ2N,EAAOlD,KAAI,IAAI,GAAMmD,EAAU5N,MAAQ4N,EAAUnD,MAE9EwD,IAEFE,IAGPX,IAAe,KACb,EAACF,EAAa,iBAAmB,cAAepC,EAAQsC,IAAoBA,EAC7E,GACDC,IAAa,KACX,EAACH,EAAa,aAAe,kBAAmBpC,EAAQuC,IAAkBA,EAC3E,GACDH,GAAc,CACZuB,cAAetB,EAAW,cAAgB,MAG1CpB,OAAyB,IAAjBwB,EAAO3N,MAAc,OAAS,eAAe2N,EAAO3N,MAAQ2N,EAAOlD,KAAI,IAE/EmE,UAAW,CACT,MAAO,CACLhC,SAA8B,IAApBgB,EAAU5N,MAAc,OAAS,eAAe4N,EAAU5N,MAAQ4N,EAAUnD,KAAI,QAI/F6C,GAAc,CACbuB,cAAetB,EAAW,iBAAmB,SAC7CpB,OAAQ,eAAewB,EAAO3N,MAAQ2N,EAAOlD,KAAI,IAEjDmE,UAAW,CACT,MAAO,CACLjC,UAA4B,IAAjBgB,EAAO3N,MAAc,OAAS,eAAe2N,EAAO3N,MAAQ2N,EAAOlD,KAAI,SAQvF,CACLa,KAAM,CACJhE,EAAWgE,KACX,CACEgD,QAAS,OACTO,cAAevB,EAAcC,EAAW,cAAgB,MAASA,EAAW,iBAAmB,SAC/Fa,SAAU,SACVhC,MAAO,OACPD,OAAQL,EAAe,OAAS,OAChCc,SAAQ,EACRD,UAAS,EACT/B,QAASD,EAAaC,EAASxD,GAC/BuH,UAAW,aAEXC,UAAW,OAAF,IAAE,EAAF,GACP,MAAOX,GAAW,EAIjBV,EAAW,uBAAyB,yBAA0B,CAC7DD,GAAc,CACZiB,WAAY,GAAGX,EAAU5N,MAAQ4N,EAAUnD,OAE5C6C,GAAc,CACbmB,UAAW,GAAGd,EAAO3N,MAAQ2N,EAAOlD,OAEvC,GAEE0D,IAGPzC,GAAQ,CACNW,UAAmB,IAATX,EAAgB,EAAIA,GAEhC8B,IAAe,KACb,EAACF,EAAa,iBAAmB,cAAepC,EAAQsC,IAAoBA,EAC7E,GACDC,IAAa,KACX,EAACH,EAAa,aAAe,kBAAmBpC,EAAQuC,IAAkBA,EAC3E,GACDjG,KGnGJuC,QATmB,CACnB+E,KAAMrD,M,2LCpDFsD,EAAgB,OAAAC,EAAA,KA6BtB,cAsBE,WAAmBzJ,GAAnB,MACE,YAAMA,IAAM,KAPN,EAAA0J,aAAe,cA6Rf,EAAAC,SAAW,SAACC,GACd,EAAK5J,MAAM6J,SACb,EAAK7J,MAAM6J,QAAQD,GAGrB,EAAKpJ,SAAS,CAAEsJ,WAAW,IAAQ,WAC7B,EAAK9J,MAAM+J,mBACb,EAAKC,UAAU,EAAKvP,WAKlB,EAAAwP,QAAU,SAACL,GACb,EAAK5J,MAAMkK,QACb,EAAKlK,MAAMkK,OAAON,GAGpB,EAAKpJ,SAAS,CAAEsJ,WAAW,IAAS,WAC9B,EAAK9J,MAAMmK,oBACb,EAAKH,UAAU,EAAKvP,WAKlB,EAAA2P,eAAiB,SAACpK,GAChB,IAAAqK,EAAA,EAAAA,MAAOC,EAAA,EAAAA,SAETC,EAAc,EAAKC,YAAYC,mBAChC,EAAKD,YAAYC,mBAAmBJ,WACrChO,EAEJ,OAAIgO,EAEA,gBAACK,EAAA,EAAK,CAACJ,SAAUA,EAAUK,QAAS,EAAKC,IAAKzG,OAAQoG,EAAaM,SAAU7K,EAAM6K,SAAUC,GAAI,EAAKC,UACnG/K,EAAMqK,OAIN,MAGD,EAAAW,qBAAuB,SAAChL,GAC9B,OAAIA,EAAMiL,YACD,wBAAMhJ,UAAW,EAAKuI,YAAYS,aAAcjL,EAAMiL,aAExD,MAsFD,EAAAC,eAAiB,SAACC,GASxB,IAYIC,EAXE3Q,EADU0Q,EAAME,OACA5Q,WAER4B,IAAV5B,GAAuBA,IAAU,EAAK6Q,mBAG1C,EAAKA,iBAAmB7Q,EAIxB0Q,EAAMI,UAGN,EAAK/K,UACH,SAACgL,EAA4BxL,GAC3B,IAAMyL,EAAYC,EAAU1L,EAAOwL,IAAc,GAGjD,OAFAJ,EAAc3Q,IAAUgR,IAQjB,EAAKE,cALH,KAK0B,CAAEC,kBAAmBnR,MAE1D,WAEU,IAAAoR,EAAA,QAAAA,UACHT,GAAeS,GAClBA,EAASV,EAAO1Q,QA9btB,OAAAqR,EAAA,GAAuB,GACvB,EAAKC,OAAS,IAAIC,EAAA,EAAM,GAQxB,EAAKC,YAAc,OAAAC,EAAA,GApCA,aAqCnB,EAAKC,eAAiB,OAAAD,EAAA,GAAME,wBAC5B,EAAKrB,SAAW,OAAAmB,EAAA,GAAME,kBAEtB,EAAKC,uBAEC,QAAAC,oBAAA,MA3CkB,GA2ClB,E,MACsB,kBAAjBA,IAETA,EAAeC,OAAOD,IAExB,EAAK9S,MAAQ,CACXoS,kBAAmB,EAAKD,mBAAgBtP,EAAYiQ,EACpDxC,WAAW,EACX0C,aAAc,IAGhB,EAAKC,iBAAmB,EAAKV,OAAOW,SAAS,EAAK1C,UAAW,EAAKhK,MAAM2M,wBACxE,EAAKC,gBAAkB,E,EAmd3B,OAvgBmC,iBA0DjC,sBAAW,oBAAK,C,IAAhB,WACE,OAAOlB,EAAUzQ,KAAK+E,MAAO/E,KAAKzB,Q,gCAG7B,YAAA2G,kBAAP,WACElF,KAAK4R,qBAED5R,KAAK+E,MAAM8M,gBACb7R,KAAK+O,UAAU/O,KAAKR,QAIjB,YAAAgG,qBAAP,WACExF,KAAK8Q,OAAOgB,WAGP,YAAAC,wBAAP,SAA+BC,EAA4BzB,GACzD,MAAO,CACL0B,UAAW,CAACjS,KAAKkS,eAAgBlS,KAAKmS,gBAInC,YAAAC,mBAAP,SACEJ,EACAzB,EACA8B,GAEA,IAAMtN,EAAQ/E,KAAK+E,MACX,UAAAkN,iBAAA,oBACDtH,EAAA,KAAOC,EAAA,OAERoH,EAAUM,cAAgBvN,EAAMuN,WAAa/B,EAAU1B,YAG3D7O,KAAKuS,QACS,OAAV5H,GAA0B,OAARC,GAAgBD,GAAS,GAAKC,GAAO,GACzD5K,KAAKwS,kBAAkB7H,EAAOC,IAIlC,IAAM4F,EAAYC,EAAUuB,EAAWzB,GACjC/Q,EAAQQ,KAAKR,MACfgR,IAAchR,IAEhBQ,KAAKoR,qBAAqBY,GAItBhS,KAAKzB,MAAMgT,eAAiBxM,EAAMwM,cACpCvR,KAAKuF,SAAS,CAAEgM,aAAc,KAIhCvR,KAAK4R,qBAGL5R,KAAKqQ,sBAAmBjP,EAKpBqR,EAA0B1N,IAC5B/E,KAAKwR,iBAAiBhS,KAKrB,YAAAkG,OAAP,WACQ,iBACJgN,EAAA,EAAAA,WACA1L,EAAA,EAAAA,UACA4I,EAAA,EAAAA,SACA+C,EAAA,EAAAA,UACAC,EAAA,EAAAA,eACAxD,EAAA,EAAAA,MACAkD,EAAA,EAAAA,UACAjD,EAAA,EAAAA,SACAwD,EAAA,EAAAA,WACAC,EAAA,EAAAA,OACAC,EAAA,EAAAA,UACAC,EAAA,EAAAA,OACApM,EAAA,EAAAA,MACAsC,EAAA,EAAAA,OACA+J,EAAA,EAAAA,iBACA,IAAAC,sBAAA,IAAiB,EAAjB,uBACA,IAAAC,sBAAA,IAAiB,EAAjB,uBACA,IAAAC,qBAAA,IAAgB,EAAhB,sBACA,IAAAC,2BAAA,IAAsB,EAAtB,4BAEMxE,EAAA,WAAAA,UACF0C,EAAevR,KAAKsT,cAmB1B,OAjBAtT,KAAKuP,YAAchB,EAAcrF,EAAS,CACxCtC,MAAOA,EACPI,UAAS,EACT4I,SAAQ,EACR2D,QAAS1E,EACTQ,SAAQ,EACRiD,UAAS,EACTkB,WAAYpE,EACZqE,kBAAmBlC,EACnBmB,WAAU,EACVK,UAAS,EACTW,UAAWf,EACXE,WAAU,EACVD,eAAc,EACdK,iBAAgB,IAIhB,uBAAKjM,UAAWhH,KAAKuP,YAAYzE,MAC/B,uBAAK9D,UAAWhH,KAAKuP,YAAYoE,SAC9BP,EAAcpT,KAAK+E,MAAO/E,KAAKmP,gBAChC,uBAAKnI,UAAWhH,KAAKuP,YAAYqE,kBAClBxS,IAAX0R,GAAwB9S,KAAK+E,MAAMmO,iBACnC,uBAAKlM,UAAWhH,KAAKuP,YAAYuD,QAASI,EAAelT,KAAK+E,MAAO/E,KAAK6T,kBAE3EvB,EAAYtS,KAAK8T,kBAAoB9T,KAAK+T,eAC1CpB,GAAa,gBAACqB,EAAA,EAAI,aAAChN,UAAWhH,KAAKuP,YAAY0E,MAAUtB,UAC7CvR,IAAX4R,GAAwBhT,KAAK+E,MAAMoO,iBACnC,uBAAKnM,UAAWhH,KAAKuP,YAAYyD,QAASG,EAAenT,KAAK+E,MAAO/E,KAAKkU,oBAI/ElU,KAAKmU,yBACJ,wBAAMtE,GAAI7P,KAAKkR,gBACZmC,EAAoBrT,KAAK+E,MAAO/E,KAAK+P,sBACrCwB,GACC,uBAAK6C,KAAK,SACR,gBAACC,EAAA,EAAa,KACZ,qBAAGrN,UAAWhH,KAAKuP,YAAYgC,cAC7B,6CAAyB,iBAAiBA,SAcrD,YAAAgB,MAAP,WACMvS,KAAKyO,aAAa6F,SACpBtU,KAAKyO,aAAa6F,QAAQ/B,SAOvB,YAAAgC,KAAP,WACMvU,KAAKyO,aAAa6F,SACpBtU,KAAKyO,aAAa6F,QAAQC,QAOvB,YAAAC,OAAP,WACMxU,KAAKyO,aAAa6F,SACpBtU,KAAKyO,aAAa6F,QAAQE,UAOvB,YAAAC,kBAAP,SAAyBjV,GACnBQ,KAAKyO,aAAa6F,UACpBtU,KAAKyO,aAAa6F,QAAQpC,eAAiB1S,IAOxC,YAAAkV,gBAAP,SAAuBlV,GACjBQ,KAAKyO,aAAa6F,UACpBtU,KAAKyO,aAAa6F,QAAQnC,aAAe3S,IAO7C,sBAAW,6BAAc,C,IAAzB,WACE,OAAOQ,KAAKyO,aAAa6F,QAAUtU,KAAKyO,aAAa6F,QAAQpC,gBAAkB,G,gCAMjF,sBAAW,2BAAY,C,IAAvB,WACE,OAAOlS,KAAKyO,aAAa6F,QAAUtU,KAAKyO,aAAa6F,QAAQnC,cAAgB,G,gCAQxE,YAAAK,kBAAP,SAAyB7H,EAAeC,GAClC5K,KAAKyO,aAAa6F,SACnBtU,KAAKyO,aAAa6F,QAA6B9B,kBAAkB7H,EAAOC,IAIrE,YAAAwG,qBAAR,SAA6BY,GAGZhS,KAAK2P,IAEX3P,KAAK+E,MAQW,OAArB/E,KAAK+E,MAAMvF,OAAmBQ,KAAK2U,sBACrC3U,KAAK2U,qBAAsB,EAC3B,OAAAC,EAAA,GACE,wKAON,sBAAY,kBAAG,C,IAAf,WACE,OAAO5U,KAAK+E,MAAM8K,IAAM7P,KAAKgR,a,gCAG/B,sBAAY,4BAAa,C,IAAzB,WACE,OAAO,YAAahR,KAAK+E,MAAO,U,gCAmD1B,YAAA8O,gBAAR,SAAwB9O,GACd,IAAA+N,EAAA,EAAAA,OACR,OAAO,wBAAM+B,MAAO,CAAEC,cAAe,QAAUhC,IAGzC,YAAAoB,gBAAR,SAAwBnP,GACd,IAAAiO,EAAA,EAAAA,OACR,OAAO,wBAAM6B,MAAO,CAAEC,cAAe,QAAU9B,IASjD,sBAAY,4BAAa,C,IAAzB,WACU,iBAAAzB,aACR,YADQ,iBAAAA,aAAA,IACe,I,gCAOzB,sBAAY,sCAAuB,C,IAAnC,WACE,IAAMxM,EAAQ/E,KAAK+E,MACnB,SAAUA,EAAMsO,qBAAuBtO,EAAMiL,aAAehQ,KAAKsT,gB,gCAG3D,YAAAQ,gBAAR,WACE,IAAMiB,EAAgB,YACpB/U,KAAK+E,MACL,IACA,CAAC,iBAEGiQ,EAAiBhV,KAAK+E,MAAM,qBAAuB/E,KAAK+E,MAAMqK,MAAQpP,KAAK8P,cAAW1O,GAC5F,OACE,wCACEyO,GAAI7P,KAAK2P,KACLoF,EAAa,CACjBE,IAAKjV,KAAKyO,aACVjP,MAAOQ,KAAKR,OAAS,GACrB0V,QAASlV,KAAKiQ,eACdW,SAAU5Q,KAAKiQ,eACfjJ,UAAWhH,KAAKuP,YAAY4F,MAAK,kBAChBH,EAAc,mBACbhV,KAAKmU,wBAA0BnU,KAAKkR,eAAiBlR,KAAK+E,MAAM,oBAAmB,iBACrF/E,KAAKsT,cAAa,aACtBtT,KAAK+E,MAAMqQ,UACvBC,SAAUrV,KAAK+E,MAAMsQ,SACrBzG,QAAS5O,KAAK0O,SACdO,OAAQjP,KAAKgP,YAKX,YAAA+E,aAAR,WACE,IAAMuB,EAAa,YAAuDtV,KAAK+E,MAAO,IAAiB,CACrG,iBAEIiQ,EAAiBhV,KAAK+E,MAAM,qBAAuB/E,KAAK+E,MAAMqK,MAAQpP,KAAK8P,cAAW1O,GAC5F,OACE,qCACE9B,KAAM,OACNuQ,GAAI7P,KAAK2P,IAAG,kBACKqF,GACbM,EAAU,CACdL,IAAKjV,KAAKyO,aACVjP,MAAOQ,KAAKR,OAAS,GACrB0V,QAASlV,KAAKiQ,eACdW,SAAU5Q,KAAKiQ,eACfjJ,UAAWhH,KAAKuP,YAAY4F,MAAK,aACrBnV,KAAK+E,MAAMqQ,UAAS,mBACdpV,KAAKmU,wBAA0BnU,KAAKkR,eAAiBlR,KAAK+E,MAAM,oBAAmB,iBACrF/E,KAAKsT,cACrB+B,SAAUrV,KAAK+E,MAAMsQ,SACrBzG,QAAS5O,KAAK0O,SACdO,OAAQjP,KAAKgP,YAkDX,YAAAD,UAAR,SAAkBvP,GAAlB,WAEE,GAAIQ,KAAKuV,uBAAyB/V,IAASiT,EAA0BzS,KAAK+E,OAA1E,CAIA/E,KAAKuV,qBAAuB/V,EAC5B,IAAMgW,EAAoBxV,KAAK+E,MAAMyQ,kBAC/BzU,EAASyU,GAAqBA,EAAkBhW,GAAS,IAE/D,QAAe4B,IAAXL,EACF,GAAsB,kBAAXA,GAAyB,SAAUA,EAGvC,CACL,IAAM,IAA8Bf,KAAK2R,gBAEzC5Q,EAAOE,MAAK,SAACsQ,GACP,IAAsB,EAAKI,iBAC7B,EAAKpM,SAAS,CAAEgM,aAAY,IAE9B,EAAKkE,qBAAqBjW,EAAO+R,WATnCvR,KAAKuF,SAAS,CAAEgM,aAAcxQ,IAC9Bf,KAAKyV,qBAAqBjW,EAAOuB,QAYnCf,KAAKyV,qBAAqBjW,EAAO,MAI7B,YAAAiW,qBAAR,SAA6BjW,EAA2B+R,GAClD/R,IAAUQ,KAAKR,OAASQ,KAAK+E,MAAM2Q,0BACrC1V,KAAK+E,MAAM2Q,yBAAyBnE,EAAc/R,IAI9C,YAAAoS,mBAAR,WACE,GAAI5R,KAAKyO,aAAa6F,SAAWtU,KAAK+E,MAAMkO,kBAAoBjT,KAAK+E,MAAMuN,UAAW,CACpF,IAAMqD,EAAY3V,KAAKyO,aAAa6F,QACpCqB,EAAUd,MAAMlJ,OAAS,GACzBgK,EAAUd,MAAMlJ,OAASgK,EAAUC,aAAe,OAlgBxC,EAAA/P,aAAgC,CAC5CkN,WAAW,EACXrB,uBAAwB,IACxBG,gBAAgB,GAkgBpB,EAvgBA,CAAmC,aA0gBnC,SAASpB,EAAU1L,EAAwBxG,GACjC,QAAAiB,aAAA,4BACR,MAAqB,kBAAVA,EAEF8R,OAAO9R,GAETA,EAOT,SAASiT,EAA0B1N,GACjC,QAASA,EAAM+J,mBAAqB/J,EAAMmK,oB,aC5jBtC2G,EAAmB,CACvB/K,KAAM,eACNkF,YAAa,2BACbuB,aAAc,4BACd4D,MAAO,qBACPvB,WAAY,0BACZd,OAAQ,sBACRE,OAAQ,sBACRW,QAAS,uBAETrB,UAAW,0BACXI,WAAY,2BACZG,WAAY,2BACZiD,YAAa,4BAEbzG,SAAU,cACVO,SAAU,cACVmG,OAAQ,aAGV,SAASC,EAAejR,GACd,IAAA8N,EAAA,EAAAA,WAAYjD,EAAA,EAAAA,SAAU2D,EAAA,EAAAA,QAAS3M,EAAA,EAAAA,MAC/BqP,EAAA,EAAAA,QAASzK,EAAA,EAAAA,MAEjB,OAAO,W,MAAM,MAAC,CACZV,KAAM,CACJ+H,GACEjD,GAAY,CACVsG,MAAOD,EAAQE,iBAEnBtD,GAAc,CACZuD,SAAU5K,EAAMC,OAAO2K,SACvBpI,YAAa,EACbqI,YAAa,GACbC,aAAc,EACdC,WAAY,OACZ5K,OAAQ,IAEVkH,GACEU,GAAW,CACTnF,WAAS,KACP,EAAC,KAAuB,CACtBzC,OAAQ,IAEX,OCnDJ,IAAM6K,EAAsD,OAAAC,EAAA,GAIjE,GDqDI,SAAoB1R,G,kBAEtB6B,EAAA,EAAAA,MACAI,EAAA,EAAAA,UACA4I,EAAA,EAAAA,SACA2D,EAAA,EAAAA,QACAlE,EAAA,EAAAA,SACAiD,EAAA,EAAAA,UACAkB,EAAA,EAAAA,SACAd,EAAA,EAAAA,WACAG,EAAA,EAAAA,WACAa,EAAA,EAAAA,QACAX,EAAA,EAAAA,UACAU,EAAA,EAAAA,gBACAb,EAAA,EAAAA,eACAK,EAAA,EAAAA,iBAGMyD,EAAA,EAAAA,eAAgBC,EAAA,EAAAA,QAASnL,EAAA,EAAAA,MAE3B1E,EAAa,YAAoB+O,EAAkBjP,GAEnDgQ,EAA4B,CAEhCC,WAAYH,EAAeI,mBAC3BZ,MAAQtG,EAAiD8G,EAAeK,aAArDL,EAAeM,qBAClClJ,QAAS,OACTmJ,WAAY,SACZ7M,QAAS,SACTmM,WAAY,EACZW,WAAY,SACZpL,WAAY,GAIRqL,EAA4B,CAChC3L,EAAMC,OACN,CACEyK,MAAOQ,EAAeM,qBACtBI,QAAS,IAIPC,EAAoC,CACxCnB,MAAOQ,EAAeK,cAGxB,MAAO,CACLjM,KAAM,CACJhE,EAAWgE,KACXU,EAAMC,OACN4D,GAAYvI,EAAWuI,SACvBO,GAAY9I,EAAW8I,SACvB2D,GAAWzM,EAAWiP,OACtBzD,GAAaxL,EAAWwL,UACxBI,GAAc5L,EAAW4L,WACzBG,GAAc/L,EAAW+L,WACzB,IACA,CACEyE,SAAU,YAEZtQ,GAEF2M,QAAS,CACP7M,EAAW6M,QAEXd,GAAc,CACZ,CACE/E,QAAS,OACTyJ,aAAc,cAAc9D,EAA+CiD,EAAec,UAA5Cd,EAAee,aAC7D7L,MAAO,QAETgE,GAAY,CACV8H,kBAAmBhB,EAAeI,mBAClC1I,WAAS,KACP,EAAC,KAAuB,CACtBuJ,YAAa,YAEhB,KAEF/H,GAAY,CACXxB,UAAW,CACT,SAAU,CACRsJ,kBAAoBjE,EAAsDiD,EAAec,UAAnDd,EAAekB,mBACrDxJ,WAAS,KACP,EAAC,KAAuB,CACtBsJ,kBAAmB,aAEtB,MAIPnE,GAAW,CACT,CACE+D,SAAU,YAEZ,YACG7D,EAAuDiD,EAAec,UAApDd,EAAemB,oBAClC,EACA,mBAKRjE,WAAY,CACV9M,EAAW8M,WACX,IACA,CACEkE,OAAQ,aAAapB,EAAee,YACpCM,aAAcpB,EAAQqB,eACtBnB,WAAYH,EAAeuB,gBAC3BC,OAAQ,OACRvM,OAAQ,GACRmC,QAAS,OACTO,cAAe,MACf4I,WAAY,UACZK,SAAU,YAEZhF,GAAa,CACX6F,UAAW,OACXxM,OAAQ,OACRmC,QAAS,SAGVyF,IACE3D,GAAY,CACXxB,UAAW,CACT,SAAU,CACRuJ,YAAajB,EAAekB,mBAC5BxJ,WAAS,KACP,EAAC,KAAuB,CACtBuJ,YAAa,aAEhB,MAKTpE,IACGV,GACD,YACGY,EAAuDiD,EAAec,UAApDd,EAAemB,oBAClClB,EAAQqB,gBAEZpI,GAAY,CACV+H,YAAajB,EAAeI,mBAC5B1I,WAAS,KACP,EAAC,KAAuB,CACtBuJ,YAAa,YAEhB,GAEDO,OAAQ,WAEVxF,GAAc,CACZoF,OAAQ,QAEVpF,GACEa,GAAW,CACTuE,OAAQ,OACR1J,UAAW,CACT,SAAU,CACR0J,OAAQ,UAIhBjF,GAAc,CACZuF,KAAM,UACNN,OAAQ,OACRO,UAAW,QAEbxF,GACEjD,GAAY,CACV0I,gBAAiB,eAGrB7E,IACGZ,GAAc,CACb8E,YAAajB,EAAec,UAC5BpJ,UAAW,CACT,UAAW,CACTuJ,YAAajB,EAAec,cAInChE,GACCnE,GAAY,CACVjB,WAAS,GACP,UAAW,CACTmK,QAAS,MACTrC,MAAOQ,EAAec,UACtBF,SAAU,WACVkB,KAAM,EACNC,OAAQ,KAEV,EAAC,KAAuB,CACtBrK,UAAW,CACT,UAAW,CACTqK,OAAQ,MAIf,KAGPtD,MAAO,CACL3J,EAAMC,OACN3E,EAAWqO,MACX,IACA,CACE4C,aAAc,EACdD,OAAQ,OACRjB,WAAY,OACZyB,gBAAiB,cACjBpC,MAAOQ,EAAegC,UACtBtO,QAAS,QACTwB,MAAO,OACP+M,SAAU,EACVjL,aAAc,WACdkL,QAAS,EACTxK,UAAW,CACT,6BAA8B,CAAEwK,QAAS,GACzC,cAAe,CACb9K,QAAS,UAIf,YAAqBqJ,GACrB7E,IACGS,GAAa,CACZjM,EAAWgP,YACX,CACE+C,OAAQ,SAGdvG,GAAa,CACX6F,UAAW,UACX5B,WAAY,GACZ1K,SAAU,EACViN,WAAY,EACZhE,cAAe,EACfjH,SAAU,OACVjC,MAAO,QAET0G,GACEW,GAAoB,CAClBpF,SAAU,UAEd6F,GAAW,CACT4C,aAAc,IAEhBhE,GACEoB,GAAW,CACT4C,aAAc,IAElB1G,GAAY,CACV,CACE0I,gBAAiB5B,EAAeI,mBAChCZ,MAAOQ,EAAeK,aACtBY,YAAajB,EAAeI,oBAE9B,YAAqBO,IAEvBxE,GAAc,CACZwF,UAAW,QAEb9E,IACGb,GAAc,CACbtE,WAAS,KACP,EAAC,KAAuB,CACtBiI,YAAa,GACbC,aAAc,IAEjB,IAEL/C,GACEjB,IACCI,GAAc,CACbtE,WAAS,KACP,EAAC,KAAuB,CACtB0K,WAAY,GAEf,IAELlG,GAEFqB,KAAM,CACJ3B,GAAa,CACXgE,aAAc,GACdW,WAAY,YAEd,CACE8B,cAAe,OACfzB,SAAU,WACV0B,OAAQ,EACRP,MAAO,EACPD,IAAK,OACLpC,SAAU,IAAc3K,OACxB8K,WAAY,IAEd3G,GAAY,CACVsG,MAAOQ,EAAeK,eAG1B/G,YAAa,CACXlJ,EAAWkJ,YACX,CACEkG,MAAOQ,EAAeuC,YACtB7C,SAAU5K,EAAM0N,OAAO9C,WAG3B7E,aAAc,CACZzK,EAAWyK,aACX,IAAoB4H,cACpB3N,EAAM4N,MACN,CACElD,MAAOQ,EAAec,UACtB9L,OAAQ,EACRoN,WAAY,EACZhL,QAAS,OACTmJ,WAAY,WAGhBnE,OAAQ,CAAChM,EAAWgM,OAAQ8D,GAC5B5D,OAAQ,CAAClM,EAAWkM,OAAQ4D,GAC5BpH,mBAAoB,CAClBJ,MAAO4G,EAAejR,YC3XA3D,EAAW,CACrCiY,MAAO,e,iHCPH9K,EAAgB,OAAAC,EAAA,GAAmD,CAIvE8K,UAAW,MAGb,2B,+CAeA,OAf+B,iBACtB,YAAA5T,OAAP,WACQ,iBAAE,IAAAuG,GAAA,uBAAwBrG,EAAA,EAAAA,SAAUoB,EAAA,EAAAA,UAAW4I,EAAA,EAAAA,SAAU1G,EAAA,EAAAA,OAAQmG,EAAA,EAAAA,SAAUzI,EAAA,EAAAA,MAC3EE,EAAayH,EAAcrF,EAAQ,CACvClC,UAAS,EACT4I,SAAQ,EACRP,SAAQ,EACRzI,MAAOA,IAET,OACE,gBAACiG,EAAQ,eAAK,YAAe7M,KAAK+E,MAAO,KAAc,CAAEiC,UAAWF,EAAWgE,OAC5ElF,IAIT,EAfA,CAA+B,a,SCNlB6J,EAA8C,OAAAgH,EAAA,GACzD,GCJuB,SAAC1R,G,MAChB6B,EAAA,EAAAA,MAAOI,EAAA,EAAAA,UAAW4I,EAAA,EAAAA,SAAUP,EAAA,EAAAA,SAC5BqH,EAAA,EAAAA,eAGF6C,EAAkB,IAAYC,SAC9BC,EAAa/C,EAAegD,SAC5BC,EAAqBjD,EAAekD,iBACpCC,EAAyBnD,EAAec,UAE9C,MAAO,CACL1M,KAAM,CACJ,WACAlE,EAAM4E,MAAMC,OACZ,CACEqO,WAAYP,EACZrD,MAAOuD,EACPtL,UAAW,aACX4L,UAAW,OACXrO,OAAQ,EACRoC,QAAS,QACT1D,QAAS,QACT4P,SAAU,aACVC,aAAc,cAEhBrK,GAAY,CACVsG,MAAOyD,EACPvL,WAAS,KACP,EAAC,KAAuB,CACtB8H,MAAO,YAEV,IAEH7G,GAAY,CACVjB,UAAW,CACT,UAAW,CACTmK,QAAS,OACTrC,MAAO2D,EACPvD,aAAc,MAIpBtP,WDpCJ5F,EACA,CACEiY,MAAO,W,mBEXX3U,EAAO3H,QAAU,EAAQ,M,gCCAzB,SAASmd,EAAmBC,EAAKvZ,EAASC,EAAQuZ,EAAOC,EAAQ/W,EAAK7E,GACpE,IACE,IAAI6C,EAAO6Y,EAAI7W,GAAK7E,GAChBe,EAAQ8B,EAAK9B,MACjB,MAAO2B,GAEP,YADAN,EAAOM,GAILG,EAAK/B,KACPqB,EAAQpB,GAER0D,QAAQtC,QAAQpB,GAAOyB,KAAKmZ,EAAOC,GAIxB,SAASC,EAAkB5a,GACxC,OAAO,WACL,IAAI5B,EAAOkC,KACP8H,EAAOyS,UACX,OAAO,IAAIrX,SAAQ,SAAUtC,EAASC,GACpC,IAAIsZ,EAAMza,EAAG8a,MAAM1c,EAAMgK,GAEzB,SAASsS,EAAM5a,GACb0a,EAAmBC,EAAKvZ,EAASC,EAAQuZ,EAAOC,EAAQ,OAAQ7a,GAGlE,SAAS6a,EAAOza,GACdsa,EAAmBC,EAAKvZ,EAASC,EAAQuZ,EAAOC,EAAQ,QAASza,GAGnEwa,OAAMhZ,OA/BZ,mC,+ECIe,SAASqZ,EAAehe,EAAKG,GAC1C,OCLa,SAAyBH,GACtC,GAAIJ,MAAM4M,QAAQxM,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKG,GACjD,GAAsB,qBAAXQ,QAA4BA,OAAOE,YAAYxB,OAAOW,GAAjE,CACA,IAAIie,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKzZ,EAET,IACE,IAAK,IAAiC0Z,EAA7BC,EAAKte,EAAIW,OAAOE,cAAmBqd,GAAMG,EAAKC,EAAGvZ,QAAQjC,QAChEmb,EAAKxY,KAAK4Y,EAAGtb,QAET5C,GAAK8d,EAAK/d,SAAWC,GAH8C+d,GAAK,IAK9E,MAAO/a,GACPgb,GAAK,EACLC,EAAKjb,EACL,QACA,IACO+a,GAAsB,MAAhBI,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIH,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBje,EAAKG,IAAM,OAAAoe,EAAA,GAA2Bve,EAAKG,IGLjF,WACb,MAAM,IAAIyE,UAAU,6IHIgF","file":"static/js/2.cfa7623d.chunk.js","sourcesContent":["import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","/**\n * Determines whether a component is controlled.\n * @param props - Component props\n * @param valueProp - Prop containing the controlled value\n * @returns true if controlled, false if uncontrolled\n */\nexport function isControlled<P>(props: P, valueProp: keyof P): boolean {\n  // React's built-in <input> considers a prop to be provided if its value is non-null/undefined.\n  // Mirror that behavior here (rather than checking for just undefined).\n  return props[valueProp] !== undefined && props[valueProp] !== null;\n}\n","import * as React from 'react';\n\n/**\n * DelayedRender component props.\n *\n * @public\n */\n// tslint:disable-next-line:deprecation\nexport interface IDelayedRenderProps extends React.Props<{}> {\n  /**\n   * Number of milliseconds to delay rendering children.\n   */\n  delay?: number;\n}\n\n/**\n * DelayedRender component state.\n *\n * @internal\n */\nexport interface IDelayedRenderState {\n  /**\n   * Whether the component is rendered or not.\n   */\n  isRendered: boolean;\n}\n\n/**\n * Utility component for delaying the render of a child component after a given delay. This component\n * requires a single child component; don't pass in many components. Wrap multiple components in a DIV\n * if necessary.\n *\n * @public\n * {@docCategory DelayedRender}\n */\nexport class DelayedRender extends React.Component<IDelayedRenderProps, IDelayedRenderState> {\n  public static defaultProps = {\n    delay: 0,\n  };\n\n  private _timeoutId: number | undefined;\n\n  constructor(props: IDelayedRenderProps) {\n    super(props);\n    this.state = {\n      isRendered: false,\n    };\n  }\n\n  public componentDidMount(): void {\n    let { delay } = this.props;\n    this._timeoutId = window.setTimeout(() => {\n      this.setState({\n        isRendered: true,\n      });\n    }, delay);\n  }\n\n  public componentWillUnmount(): void {\n    if (this._timeoutId) {\n      clearTimeout(this._timeoutId);\n    }\n  }\n\n  public render(): React.ReactElement<{}> | null {\n    return this.state.isRendered ? (React.Children.only(this.props.children) as React.ReactElement<{}>) : null;\n  }\n}\n","import { __assign } from 'tslib';\nexport const assign = __assign;\n","import * as React from 'react';\nimport { mergeCss } from '@uifabric/merge-styles';\nimport { IStyle, ITheme } from '@uifabric/styling';\nimport { getRTL, memoizeFunction } from '@uifabric/utilities';\nimport { assign } from './utilities';\nimport { IFactoryOptions } from './IComponent';\nimport {\n  ISlottableReactType,\n  ISlot,\n  ISlots,\n  ISlotDefinition,\n  ISlotFactory,\n  ISlotProp,\n  ISlottableProps,\n  ISlotOptions,\n  IDefaultSlotProps,\n  IProcessedSlotProps,\n  ValidProps,\n  ValidShorthand,\n} from './ISlots';\n\n/**\n * This function is required for any module that uses slots.\n *\n * This function is a slot resolver that automatically evaluates slot functions to generate React elements.\n * A byproduct of this resolver is that it removes slots from the React hierarchy by bypassing React.createElement.\n *\n * To use this function on a per-file basis, use the jsx directive targeting withSlots.\n * This directive must be the FIRST LINE in the file to work correctly.\n * Usage of this pragma also requires withSlots import statement.\n *\n * See React.createElement\n */\n// Can't use typeof on React.createElement since it's overloaded. Approximate createElement's signature for now\n// and widen as needed.\nexport function withSlots<P>(\n  type: ISlot<P> | React.FunctionComponent<P> | string,\n  props?: (React.Attributes & P) | null,\n  // tslint:disable-next-line:missing-optional-annotation\n  ...children: React.ReactNode[]\n): ReturnType<React.FunctionComponent<P>> {\n  const slotType = type as ISlot<P>;\n  if (slotType.isSlot) {\n    // TODO: There is something weird going on here with children embedded in props vs. rest args.\n    // Comment out these lines to see. Make sure this function is doing the right things.\n    const numChildren = React.Children.count(children);\n    if (numChildren === 0) {\n      return slotType(props);\n    }\n\n    // Since we are bypassing createElement, use React.Children.toArray to make sure children are\n    // properly assigned keys.\n    // TODO: should this be mutating? does React mutate children subprop with createElement?\n    // TODO: will toArray clobber existing keys?\n    // TODO: React generates warnings because it doesn't detect hidden member _store that is set in createElement.\n    //        Even children passed to createElement without keys don't generate this warning.\n    //        Is there a better way to prevent slots from appearing in hierarchy? toArray doesn't address root issue.\n    children = React.Children.toArray(children);\n\n    return slotType({ ...(props as any), children });\n  } else {\n    // TODO: Are there some cases where children should NOT be spread? Also, spreading reraises perf question.\n    //        Children had to be spread to avoid breaking KeytipData in Toggle.view:\n    //        react-dom.development.js:18931 Uncaught TypeError: children is not a function\n    //        Without spread, function child is a child array of one element\n    // TODO: is there a reason this can't be:\n    // return React.createElement.apply(this, arguments);\n    return React.createElement(type, props, ...children);\n  }\n}\n\n/**\n * This function creates factories that render ouput depending on the user ISlotProp props passed in.\n * @param DefaultComponent - Base component to render when not overridden by user props.\n * @param options - Factory options, including defaultProp value for shorthand prop mapping.\n * @returns ISlotFactory function used for rendering slots.\n */\nexport function createFactory<TProps extends ValidProps, TShorthandProp extends ValidShorthand = never>(\n  DefaultComponent: React.ComponentType<TProps>,\n  options: IFactoryOptions<TProps> = {},\n): ISlotFactory<TProps, TShorthandProp> {\n  const { defaultProp = 'children' } = options;\n\n  const result: ISlotFactory<TProps, TShorthandProp> = (\n    componentProps,\n    userProps,\n    userSlotOptions,\n    defaultStyles,\n    theme,\n  ) => {\n    // If they passed in raw JSX, just return that.\n    if (React.isValidElement(userProps)) {\n      return userProps;\n    }\n\n    const flattenedUserProps: TProps | undefined = _translateShorthand(defaultProp as string, userProps);\n    const finalProps = _constructFinalProps(defaultStyles, theme, componentProps, flattenedUserProps);\n\n    if (userSlotOptions) {\n      if (userSlotOptions.component) {\n        // TODO: Remove cast if possible. This cast is needed because TS errors on the intrinsic portion of ReactType.\n        // return <userSlotOptions.component {...finalProps} />;\n        const UserComponent = userSlotOptions.component as React.ComponentType<TProps>;\n        return <UserComponent {...finalProps} />;\n      }\n\n      if (userSlotOptions.render) {\n        return userSlotOptions.render(finalProps, DefaultComponent);\n      }\n    }\n\n    return <DefaultComponent {...finalProps} />;\n  };\n\n  return result;\n}\n\n/**\n * Default factory for components without explicit factories.\n */\nconst defaultFactory = memoizeFunction(type => createFactory(type));\n\n/**\n * This function generates slots that can be used in JSX given a definition of slots and their corresponding types.\n * @param userProps - Props as pass to component.\n * @param slots - Slot definition object defining the default slot component for each slot.\n * @returns A set of created slots that components can render in JSX.\n */\nexport function getSlots<TComponentProps extends ISlottableProps<TComponentSlots>, TComponentSlots>(\n  userProps: TComponentProps,\n  slots: ISlotDefinition<Required<TComponentSlots>>,\n): ISlots<Required<TComponentSlots>> {\n  const result: ISlots<Required<TComponentSlots>> = {} as ISlots<Required<TComponentSlots>>;\n\n  // userProps already has default props mixed in by createComponent. Recast here to gain typing for this function.\n  const mixedProps = userProps as TComponentProps & IDefaultSlotProps<TComponentSlots>;\n\n  for (const name in slots) {\n    if (slots.hasOwnProperty(name)) {\n      // This closure method requires the use of withSlots to prevent unnecessary rerenders. This is because React\n      // detects each closure as a different component (since it is a new instance) from the previous one and then\n      // forces a rerender of the entire slot subtree. For now, the only way to avoid this is to use withSlots, which\n      // bypasses the call to React.createElement.\n      const slot: ISlots<Required<TComponentSlots>>[keyof TComponentSlots] = (componentProps, ...args: any[]) => {\n        if (args.length > 0) {\n          // If React.createElement is being incorrectly used with slots, there will be additional arguments.\n          // We can detect these additional arguments and error on their presence.\n          throw new Error('Any module using getSlots must use withSlots. Please see withSlots javadoc for more info.');\n        }\n        // TODO: having TS infer types here seems to cause infinite loop.\n        //   use explicit types or casting to preserve typing if possible.\n        // TODO: this should be a lookup on TProps property instead of being TProps directly, which is probably\n        //   causing the infinite loop\n        return _renderSlot<any, any, any>(\n          slots[name],\n          // TODO: this cast to any is hiding a relationship issue between the first two args\n          componentProps as any,\n          mixedProps[name],\n          mixedProps.slots && mixedProps.slots[name],\n          // _defaultStyles should always be present, but a check for existence is added to make view tests\n          // easier to use.\n          mixedProps._defaultStyles && mixedProps._defaultStyles[name],\n          (mixedProps as any).theme,\n        );\n      };\n      slot.isSlot = true;\n      result[name] = slot;\n    }\n  }\n\n  return result;\n}\n\n/**\n * Helper function that translates shorthand as needed.\n * @param defaultProp\n * @param slotProps\n */\nfunction _translateShorthand<TProps extends ValidProps, TShorthandProp extends ValidShorthand>(\n  defaultProp: string,\n  slotProps: ISlotProp<TProps, TShorthandProp>,\n): TProps | undefined {\n  let transformedProps: TProps | undefined;\n\n  if (typeof slotProps === 'string' || typeof slotProps === 'number' || typeof slotProps === 'boolean') {\n    transformedProps = {\n      [defaultProp]: slotProps as any,\n    } as TProps;\n  } else {\n    transformedProps = slotProps as TProps;\n  }\n\n  return transformedProps;\n}\n\n/**\n * Helper function that constructs final styles and props given a series of props ordered by increasing priority.\n */\nfunction _constructFinalProps<TProps extends IProcessedSlotProps>(\n  defaultStyles: IStyle,\n  theme?: ITheme,\n  // tslint:disable-next-line:missing-optional-annotation\n  ...allProps: (TProps | undefined)[]\n): TProps {\n  const finalProps: TProps = {} as any;\n  const classNames: (string | undefined)[] = [];\n\n  for (const props of allProps) {\n    classNames.push(props && props.className);\n    assign(finalProps, props);\n  }\n\n  finalProps.className = mergeCss([defaultStyles, classNames], { rtl: getRTL(theme) });\n\n  return finalProps;\n}\n\n/**\n * Render a slot given component and user props. Uses component factory if available, otherwise falls back\n * to default factory.\n * @param ComponentType Factory component type.\n * @param componentProps The properties passed into slot from within the component.\n * @param userProps The user properties passed in from outside of the component.\n */\nfunction _renderSlot<\n  TSlotComponent extends ISlottableReactType<TSlotProps, TSlotShorthand>,\n  TSlotProps extends ValidProps,\n  TSlotShorthand extends ValidShorthand\n>(\n  ComponentType: TSlotComponent,\n  componentProps: TSlotProps,\n  userProps: ISlotProp<TSlotProps, TSlotShorthand>,\n  slotOptions: ISlotOptions<TSlotProps> | undefined,\n  defaultStyles: IStyle,\n  theme?: ITheme,\n): ReturnType<React.FunctionComponent> {\n  if (ComponentType.create !== undefined) {\n    return ComponentType.create(componentProps, userProps, slotOptions, defaultStyles);\n  } else {\n    // TODO: need to resolve typing / generic issues passing through memoizeFunction. for now, cast to 'unknown'\n    return ((defaultFactory(ComponentType) as unknown) as ISlotFactory<TSlotProps, TSlotShorthand>)(\n      componentProps,\n      userProps,\n      slotOptions,\n      defaultStyles,\n      theme,\n    );\n  }\n}\n","import * as React from 'react';\nimport { concatStyleSets, IStyleSet, ITheme } from '@uifabric/styling';\nimport { Customizations, CustomizerContext, ICustomizerContext } from '@uifabric/utilities';\nimport { createFactory } from './slots';\nimport { assign } from './utilities';\n\nimport {\n  IComponentOptions,\n  ICustomizationProps,\n  IStyleableComponentProps,\n  IStylesFunctionOrObject,\n  IToken,\n  ITokenFunction,\n  IViewComponent,\n} from './IComponent';\nimport { IDefaultSlotProps, ISlotCreator, ValidProps } from './ISlots';\n\n/**\n * Assembles a higher order component based on the following: styles, theme, view, and state.\n * Imposes a separation of concern and centralizes styling processing to increase ease of use and robustness\n * in how components use and apply styling and theming.\n *\n * Automatically merges and applies themes and styles with theme / styleprops having the highest priority.\n * State component, if provided, is passed in props for processing. Props from state / user are automatically processed\n * and styled before finally being passed to view.\n *\n * State components should contain all stateful behavior and should not generate any JSX, but rather simply call\n * the view prop.\n *\n * Views should simply be stateless pure functions that receive all props needed for rendering their output.\n *\n * State component is optional. If state is not provided, created component is essentially a functional\n * stateless component.\n *\n * @param options - component Component options. See IComponentOptions for more detail.\n */\nexport function createComponent<\n  TComponentProps extends ValidProps,\n  TTokens,\n  TStyleSet extends IStyleSet<TStyleSet>,\n  TViewProps extends TComponentProps = TComponentProps,\n  TStatics = {}\n>(\n  view: IViewComponent<TViewProps>,\n  options: IComponentOptions<TComponentProps, TTokens, TStyleSet, TViewProps, TStatics> = {},\n): React.FunctionComponent<TComponentProps> & TStatics {\n  const { factoryOptions = {} } = options;\n  const { defaultProp } = factoryOptions;\n\n  const result: React.FunctionComponent<TComponentProps> = (\n    componentProps: TComponentProps & IStyleableComponentProps<TViewProps, TTokens, TStyleSet>,\n  ) => {\n    const settings: ICustomizationProps<TViewProps, TTokens, TStyleSet> = _getCustomizations(\n      options.displayName,\n      React.useContext(CustomizerContext),\n      options.fields,\n    );\n\n    const useState = options.state;\n\n    if (useState) {\n      // Don't assume state will return all props, so spread useState result over component props.\n      componentProps = {\n        ...componentProps,\n        ...useState(componentProps),\n      };\n    }\n\n    const theme = componentProps.theme || settings.theme;\n\n    const tokens = _resolveTokens(componentProps, theme, options.tokens, settings.tokens, componentProps.tokens);\n    const styles = _resolveStyles(\n      componentProps,\n      theme,\n      tokens,\n      options.styles,\n      settings.styles,\n      componentProps.styles,\n    );\n\n    const viewProps = {\n      ...componentProps,\n      styles,\n      tokens,\n      _defaultStyles: styles,\n      theme,\n    } as TViewProps & IDefaultSlotProps<any>;\n\n    return view(viewProps);\n  };\n\n  result.displayName = options.displayName || view.name;\n\n  // If a shorthand prop is defined, create a factory for the component.\n  // TODO: This shouldn't be a concern of createComponent.. factoryOptions should just be forwarded.\n  //       Need to weigh creating default factories on component creation vs. memoizing them on use in slots.tsx.\n  if (defaultProp) {\n    (result as ISlotCreator<TComponentProps, any>).create = createFactory(result, { defaultProp });\n  }\n\n  assign(result, options.statics);\n\n  // Later versions of TypeSript should allow us to merge objects in a type safe way and avoid this cast.\n  return result as React.FunctionComponent<TComponentProps> & TStatics;\n}\n\n/**\n * Resolve all styles functions with both props and tokens and flatten results along with all styles objects.\n */\nfunction _resolveStyles<TProps, TTokens, TStyleSet extends IStyleSet<TStyleSet>>(\n  props: TProps,\n  theme: ITheme,\n  tokens: TTokens,\n  ...allStyles: (IStylesFunctionOrObject<TProps, TTokens, TStyleSet> | undefined)[]\n): ReturnType<typeof concatStyleSets> {\n  return concatStyleSets(\n    ...allStyles.map((styles: IStylesFunctionOrObject<TProps, TTokens, TStyleSet> | undefined) =>\n      typeof styles === 'function' ? styles(props, theme, tokens) : styles,\n    ),\n  );\n}\n\n/**\n * Resolve all tokens functions with props flatten results along with all tokens objects.\n */\nfunction _resolveTokens<TViewProps, TTokens>(\n  props: TViewProps,\n  theme: ITheme,\n  ...allTokens: (IToken<TViewProps, TTokens> | false | null | undefined)[]\n): TTokens {\n  const tokens = {};\n\n  for (let currentTokens of allTokens) {\n    if (currentTokens) {\n      // TODO: why is this cast needed? TS seems to think there is a (TToken | Function) union from somewhere.\n      currentTokens =\n        typeof currentTokens === 'function'\n          ? (currentTokens as ITokenFunction<TViewProps, TTokens>)(props, theme)\n          : currentTokens;\n\n      if (Array.isArray(currentTokens)) {\n        currentTokens = _resolveTokens(props, theme, ...currentTokens);\n      }\n\n      assign(tokens, currentTokens);\n    }\n  }\n\n  return tokens as TTokens;\n}\n\n/**\n * Helper function for calling Customizations.getSettings falling back to default fields.\n *\n * @param displayName Displayable name for component.\n * @param context React context passed to component containing contextual settings.\n * @param fields Optional list of properties to grab from global store and context.\n */\nfunction _getCustomizations<TViewProps, TTokens, TStyleSet extends IStyleSet<TStyleSet>>(\n  displayName: string | undefined,\n  context: ICustomizerContext,\n  fields?: string[],\n): ICustomizationProps<TViewProps, TTokens, TStyleSet> {\n  // TODO: do we want field props? should fields be part of IComponent and used here?\n  // TODO: should we centrally define DefaultFields? (not exported from styling)\n  // TODO: tie this array to ICustomizationProps, such that each array element is keyof ICustomizationProps\n  const DefaultFields = ['theme', 'styles', 'tokens'];\n  return Customizations.getSettings(fields || DefaultFields, displayName, context.customizations);\n}\n","/**\n * Functions used by Stack components to simplify style-related computations\n */\n\nimport { ITheme } from '../../Styling';\nimport { IStackProps } from './Stack.types';\n\n// Helper function that converts a themed spacing key (if given) to the corresponding themed spacing value.\nconst _getThemedSpacing = (space: string, theme: ITheme): string => {\n  if (theme.spacing.hasOwnProperty(space)) {\n    return theme.spacing[space as keyof typeof theme.spacing];\n  }\n  return space;\n};\n\n// Helper function that takes a gap as a string and converts it into a { value, unit } representation.\nconst _getValueUnitGap = (gap: string): { value: number; unit: string } => {\n  const numericalPart = parseFloat(gap);\n  const numericalValue = isNaN(numericalPart) ? 0 : numericalPart;\n  const numericalString = isNaN(numericalPart) ? '' : numericalPart.toString();\n\n  const unitPart = gap.substring(numericalString.toString().length);\n\n  return {\n    value: numericalValue,\n    unit: unitPart || 'px',\n  };\n};\n\n/**\n * Takes in a gap size in either a CSS-style format (e.g. 10 or \"10px\")\n *  or a key of a themed spacing value (e.g. \"s1\").\n * Returns the separate numerical value of the padding (e.g. 10)\n *  and the CSS unit (e.g. \"px\").\n */\nexport const parseGap = (\n  gap: IStackProps['gap'],\n  theme: ITheme,\n): { rowGap: { value: number; unit: string }; columnGap: { value: number; unit: string } } => {\n  if (gap === undefined || gap === '') {\n    return {\n      rowGap: {\n        value: 0,\n        unit: 'px',\n      },\n      columnGap: {\n        value: 0,\n        unit: 'px',\n      },\n    };\n  }\n\n  if (typeof gap === 'number') {\n    return {\n      rowGap: {\n        value: gap,\n        unit: 'px',\n      },\n      columnGap: {\n        value: gap,\n        unit: 'px',\n      },\n    };\n  }\n\n  const splitGap = gap.split(' ');\n\n  // If the array has more than two values, then return 0px.\n  if (splitGap.length > 2) {\n    return {\n      rowGap: {\n        value: 0,\n        unit: 'px',\n      },\n      columnGap: {\n        value: 0,\n        unit: 'px',\n      },\n    };\n  }\n\n  // If the array has two values, then parse each one.\n  if (splitGap.length === 2) {\n    return {\n      rowGap: _getValueUnitGap(_getThemedSpacing(splitGap[0], theme)),\n      columnGap: _getValueUnitGap(_getThemedSpacing(splitGap[1], theme)),\n    };\n  }\n\n  // Else, parse the numerical value and pass it as both the vertical and horizontal gap.\n  const calculatedGap = _getValueUnitGap(_getThemedSpacing(gap, theme));\n\n  return {\n    rowGap: calculatedGap,\n    columnGap: calculatedGap,\n  };\n};\n\n/**\n * Takes in a padding in a CSS-style format (e.g. 10, \"10px\", \"10px 10px\", etc.)\n *  where the separate padding values can also be the key of a themed spacing value\n *  (e.g. \"s1 m\", \"10px l1 20px l2\", etc.).\n * Returns a CSS-style padding.\n */\nexport const parsePadding = (padding: number | string | undefined, theme: ITheme): number | string | undefined => {\n  if (padding === undefined || typeof padding === 'number' || padding === '') {\n    return padding;\n  }\n\n  const paddingValues = padding.split(' ');\n  if (paddingValues.length < 2) {\n    return _getThemedSpacing(padding, theme);\n  }\n\n  return paddingValues.reduce((padding1: string, padding2: string) => {\n    return _getThemedSpacing(padding1, theme) + ' ' + _getThemedSpacing(padding2, theme);\n  });\n};\n","import { IStackComponent, IStackStyles, IStackStylesReturnType } from './Stack.types';\nimport { parseGap, parsePadding } from './StackUtils';\nimport { getGlobalClassNames } from '../../Styling';\n\nconst nameMap: { [key: string]: string } = {\n  start: 'flex-start',\n  end: 'flex-end',\n};\n\nconst GlobalClassNames = {\n  root: 'ms-Stack',\n  inner: 'ms-Stack-inner',\n};\n\nexport const styles: IStackComponent['styles'] = (props, theme, tokens): IStackStylesReturnType => {\n  const {\n    verticalFill,\n    horizontal,\n    reversed,\n    grow,\n    wrap,\n    horizontalAlign,\n    verticalAlign,\n    disableShrink,\n    className,\n  } = props;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  // tslint:disable:deprecation\n  const childrenGap = tokens && tokens.childrenGap ? tokens.childrenGap : props.gap;\n  const maxHeight = tokens && tokens.maxHeight ? tokens.maxHeight : props.maxHeight;\n  const maxWidth = tokens && tokens.maxWidth ? tokens.maxWidth : props.maxWidth;\n  const padding = tokens && tokens.padding ? tokens.padding : props.padding;\n  // tslint:enable:deprecation\n\n  const { rowGap, columnGap } = parseGap(childrenGap, theme);\n\n  const horizontalMargin = `${-0.5 * columnGap.value}${columnGap.unit}`;\n  const verticalMargin = `${-0.5 * rowGap.value}${rowGap.unit}`;\n\n  // styles to be applied to all direct children regardless of wrap or direction\n  const childStyles = {\n    textOverflow: 'ellipsis',\n  };\n\n  // selectors to be applied regardless of wrap or direction\n  const commonSelectors = {\n    // flexShrink styles are applied by the StackItem\n    '> *:not(.ms-StackItem)': {\n      flexShrink: disableShrink ? 0 : 1,\n    },\n  };\n\n  if (wrap) {\n    return {\n      root: [\n        classNames.root,\n        {\n          flexWrap: 'wrap',\n          maxWidth,\n          maxHeight,\n          width: 'auto',\n          overflow: 'visible',\n          height: '100%',\n        },\n        horizontalAlign && {\n          [horizontal ? 'justifyContent' : 'alignItems']: nameMap[horizontalAlign] || horizontalAlign,\n        },\n        verticalAlign && {\n          [horizontal ? 'alignItems' : 'justifyContent']: nameMap[verticalAlign] || verticalAlign,\n        },\n        className,\n        {\n          // not allowed to be overridden by className\n          // since this is necessary in order to prevent collapsing margins\n          display: 'flex',\n        },\n        horizontal && {\n          height: verticalFill ? '100%' : 'auto',\n        },\n      ],\n\n      inner: [\n        classNames.inner,\n        {\n          display: 'flex',\n          flexWrap: 'wrap',\n          marginLeft: horizontalMargin,\n          marginRight: horizontalMargin,\n          marginTop: verticalMargin,\n          marginBottom: verticalMargin,\n          overflow: 'visible',\n          boxSizing: 'border-box',\n          padding: parsePadding(padding, theme),\n          // avoid unnecessary calc() calls if horizontal gap is 0\n          width: columnGap.value === 0 ? '100%' : `calc(100% + ${columnGap.value}${columnGap.unit})`,\n          maxWidth: '100vw',\n\n          selectors: {\n            '> *': {\n              margin: `${0.5 * rowGap.value}${rowGap.unit} ${0.5 * columnGap.value}${columnGap.unit}`,\n\n              ...childStyles,\n            },\n            ...commonSelectors,\n          },\n        },\n        horizontalAlign && {\n          [horizontal ? 'justifyContent' : 'alignItems']: nameMap[horizontalAlign] || horizontalAlign,\n        },\n        verticalAlign && {\n          [horizontal ? 'alignItems' : 'justifyContent']: nameMap[verticalAlign] || verticalAlign,\n        },\n        horizontal && {\n          flexDirection: reversed ? 'row-reverse' : 'row',\n\n          // avoid unnecessary calc() calls if vertical gap is 0\n          height: rowGap.value === 0 ? '100%' : `calc(100% + ${rowGap.value}${rowGap.unit})`,\n\n          selectors: {\n            '> *': {\n              maxWidth: columnGap.value === 0 ? '100%' : `calc(100% - ${columnGap.value}${columnGap.unit})`,\n            },\n          },\n        },\n        !horizontal && {\n          flexDirection: reversed ? 'column-reverse' : 'column',\n          height: `calc(100% + ${rowGap.value}${rowGap.unit})`,\n\n          selectors: {\n            '> *': {\n              maxHeight: rowGap.value === 0 ? '100%' : `calc(100% - ${rowGap.value}${rowGap.unit})`,\n            },\n          },\n        },\n      ],\n    } as IStackStyles;\n  }\n\n  return {\n    root: [\n      classNames.root,\n      {\n        display: 'flex',\n        flexDirection: horizontal ? (reversed ? 'row-reverse' : 'row') : reversed ? 'column-reverse' : 'column',\n        flexWrap: 'nowrap',\n        width: 'auto',\n        height: verticalFill ? '100%' : 'auto',\n        maxWidth,\n        maxHeight,\n        padding: parsePadding(padding, theme),\n        boxSizing: 'border-box',\n\n        selectors: {\n          '> *': childStyles,\n\n          // apply gap margin to every direct child except the first direct child if the direction is not reversed,\n          // and the last direct one if it is\n          [reversed ? '> *:not(:last-child)' : '> *:not(:first-child)']: [\n            horizontal && {\n              marginLeft: `${columnGap.value}${columnGap.unit}`,\n            },\n            !horizontal && {\n              marginTop: `${rowGap.value}${rowGap.unit}`,\n            },\n          ],\n\n          ...commonSelectors,\n        },\n      },\n      grow && {\n        flexGrow: grow === true ? 1 : grow,\n      },\n      horizontalAlign && {\n        [horizontal ? 'justifyContent' : 'alignItems']: nameMap[horizontalAlign] || horizontalAlign,\n      },\n      verticalAlign && {\n        [horizontal ? 'alignItems' : 'justifyContent']: nameMap[verticalAlign] || verticalAlign,\n      },\n      className,\n    ],\n    // TODO: this cast may be hiding some potential issues with styling and name\n    //        lookups and should be removed\n  } as IStackStyles;\n};\n","import { getGlobalClassNames } from '../../../Styling';\nimport { IStackItemComponent, IStackItemStyles, IStackItemStylesReturnType } from './StackItem.types';\n\nconst GlobalClassNames = {\n  root: 'ms-StackItem',\n};\n\nconst alignMap: { [key: string]: string } = {\n  start: 'flex-start',\n  end: 'flex-end',\n};\n\nexport const StackItemStyles: IStackItemComponent['styles'] = (props, theme, tokens): IStackItemStylesReturnType => {\n  const { grow, shrink, disableShrink, align, verticalFill, order, className } = props;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  return {\n    root: [\n      theme.fonts.medium,\n      classNames.root,\n      {\n        margin: tokens.margin,\n        height: verticalFill ? '100%' : 'auto',\n        width: 'auto',\n      },\n      grow && { flexGrow: grow === true ? 1 : grow },\n      (disableShrink || (!grow && !shrink)) && {\n        flexShrink: 0,\n      },\n      shrink &&\n        !disableShrink && {\n          flexShrink: 1,\n        },\n      align && {\n        alignSelf: alignMap[align] || align,\n      },\n      order && {\n        order: order,\n      },\n      className,\n    ],\n    // TODO: this cast may be hiding some potential issues with styling and name\n    //        lookups and should be removed\n  } as IStackItemStyles;\n};\n","/** @jsx withSlots */\nimport * as React from 'react';\nimport { withSlots, createComponent, getSlots } from '../../../Foundation';\nimport { IStackItemComponent, IStackItemProps, IStackItemSlots } from './StackItem.types';\nimport { StackItemStyles as styles } from './StackItem.styles';\n\nconst StackItemView: IStackItemComponent['view'] = props => {\n  const { children } = props;\n  if (React.Children.count(children) < 1) {\n    return null;\n  }\n\n  const Slots = getSlots<IStackItemProps, IStackItemSlots>(props, {\n    root: 'div',\n  });\n\n  return <Slots.root>{children}</Slots.root>;\n};\n\nexport const StackItem: React.FunctionComponent<IStackItemProps> = createComponent(StackItemView, {\n  displayName: 'StackItem',\n  styles,\n});\n\nexport default StackItem;\n","/** @jsx withSlots */\nimport * as React from 'react';\nimport { withSlots, createComponent, getSlots } from '../../Foundation';\nimport { getNativeProps, htmlElementProperties, warnDeprecations } from '../../Utilities';\nimport { styles } from './Stack.styles';\nimport { IStackComponent, IStackProps, IStackSlots } from './Stack.types';\nimport { StackItem } from './StackItem/StackItem';\nimport { IStackItemProps } from './StackItem/StackItem.types';\n\nconst StackView: IStackComponent['view'] = props => {\n  const { as: RootType = 'div', disableShrink, wrap, ...rest } = props;\n\n  warnDeprecations('Stack', props, {\n    gap: 'tokens.childrenGap',\n    maxHeight: 'tokens.maxHeight',\n    maxWidth: 'tokens.maxWidth',\n    padding: 'tokens.padding',\n  });\n\n  const stackChildren: (React.ReactChild | null)[] | null | undefined = React.Children.map(\n    props.children,\n    (child: React.ReactElement<IStackItemProps>, index: number) => {\n      if (!child) {\n        return null;\n      }\n\n      if (_isStackItem(child)) {\n        const defaultItemProps: IStackItemProps = {\n          shrink: !disableShrink,\n        };\n\n        return React.cloneElement(child, {\n          ...defaultItemProps,\n          ...child.props,\n        });\n      }\n\n      return child;\n    },\n  );\n\n  const nativeProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(rest, htmlElementProperties);\n\n  const Slots = getSlots<IStackProps, IStackSlots>(props, {\n    root: RootType,\n    inner: 'div',\n  });\n\n  if (wrap) {\n    return (\n      <Slots.root {...nativeProps}>\n        <Slots.inner>{stackChildren}</Slots.inner>\n      </Slots.root>\n    );\n  }\n\n  return <Slots.root {...nativeProps}>{stackChildren}</Slots.root>;\n};\n\nfunction _isStackItem(item: React.ReactNode): item is typeof StackItem {\n  // In theory, we should be able to just check item.type === StackItem.\n  // However, under certain unclear circumstances (see https://github.com/microsoft/fluentui/issues/10785),\n  // the object identity is different despite the function implementation being the same.\n  return (\n    !!item &&\n    typeof item === 'object' &&\n    !!(item as React.ReactElement).type &&\n    // StackItem is generated by createComponent, so we need to check its displayName instead of name\n    ((item as React.ReactElement).type as React.ComponentType).displayName === StackItem.displayName\n  );\n}\n\nconst StackStatics = {\n  Item: StackItem,\n};\n\nexport const Stack: React.FunctionComponent<IStackProps> & {\n  Item: React.FunctionComponent<IStackItemProps>;\n} = createComponent(StackView, {\n  displayName: 'Stack',\n  styles,\n  statics: StackStatics,\n});\n\nexport default Stack;\n","import * as React from 'react';\nimport { IProcessedStyleSet } from '../../Styling';\nimport { Label, ILabelStyleProps, ILabelStyles } from '../../Label';\nimport { Icon } from '../../Icon';\nimport {\n  Async,\n  DelayedRender,\n  IStyleFunctionOrObject,\n  classNamesFunction,\n  getId,\n  getNativeProps,\n  initializeComponentRef,\n  inputProperties,\n  isControlled,\n  textAreaProperties,\n  warn,\n  warnControlledUsage,\n  warnMutuallyExclusive,\n} from '../../Utilities';\nimport { ITextField, ITextFieldProps, ITextFieldStyleProps, ITextFieldStyles } from './TextField.types';\n\nconst getClassNames = classNamesFunction<ITextFieldStyleProps, ITextFieldStyles>();\n\n/** @internal */\nexport interface ITextFieldState {\n  /** The currently displayed value if uncontrolled. */\n  uncontrolledValue: string | undefined;\n\n  /** Is true when the control has focus. */\n  isFocused?: boolean;\n\n  /**\n   * Dynamic error message returned by `onGetErrorMessage`.\n   * Use `this._errorMessage` to get the actual current error message.\n   */\n  errorMessage: string | JSX.Element;\n}\n\n/** @internal */\nexport interface ITextFieldSnapshot {\n  /**\n   * If set, the text field is changing between single- and multi-line, so we'll need to reset\n   * selection/cursor after the change completes.\n   */\n  selection?: [number | null, number | null];\n}\n\nconst DEFAULT_STATE_VALUE = '';\nconst COMPONENT_NAME = 'TextField';\n\nexport class TextFieldBase extends React.Component<ITextFieldProps, ITextFieldState, ITextFieldSnapshot>\n  implements ITextField {\n  public static defaultProps: ITextFieldProps = {\n    resizable: true,\n    deferredValidationTime: 200,\n    validateOnLoad: true,\n  };\n\n  /** Fallback ID if none is provided in props. Access proper value via `this._id`. */\n  private _fallbackId: string;\n  private _descriptionId: string;\n  private _labelId: string;\n  private _delayedValidate: (value: string | undefined) => void;\n  private _lastValidation: number;\n  private _latestValidateValue: string | undefined;\n  private _hasWarnedNullValue: boolean | undefined;\n  private _textElement = React.createRef<HTMLTextAreaElement | HTMLInputElement>();\n  private _classNames: IProcessedStyleSet<ITextFieldStyles>;\n  private _async: Async;\n  /** Most recent value from a change or input event, to help avoid processing events twice */\n  private _lastChangeValue: string | undefined;\n\n  public constructor(props: ITextFieldProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    this._async = new Async(this);\n\n    if (process.env.NODE_ENV !== 'production') {\n      warnMutuallyExclusive(COMPONENT_NAME, props, {\n        errorMessage: 'onGetErrorMessage',\n      });\n    }\n\n    this._fallbackId = getId(COMPONENT_NAME);\n    this._descriptionId = getId(COMPONENT_NAME + 'Description');\n    this._labelId = getId(COMPONENT_NAME + 'Label');\n\n    this._warnControlledUsage();\n\n    let { defaultValue = DEFAULT_STATE_VALUE } = props;\n    if (typeof defaultValue === 'number') {\n      // This isn't allowed per the props, but happens anyway.\n      defaultValue = String(defaultValue);\n    }\n    this.state = {\n      uncontrolledValue: this._isControlled ? undefined : defaultValue,\n      isFocused: false,\n      errorMessage: '',\n    };\n\n    this._delayedValidate = this._async.debounce(this._validate, this.props.deferredValidationTime);\n    this._lastValidation = 0;\n  }\n\n  /**\n   * Gets the current value of the text field.\n   */\n  public get value(): string | undefined {\n    return _getValue(this.props, this.state);\n  }\n\n  public componentDidMount(): void {\n    this._adjustInputHeight();\n\n    if (this.props.validateOnLoad) {\n      this._validate(this.value);\n    }\n  }\n\n  public componentWillUnmount() {\n    this._async.dispose();\n  }\n\n  public getSnapshotBeforeUpdate(prevProps: ITextFieldProps, prevState: ITextFieldState): ITextFieldSnapshot | null {\n    return {\n      selection: [this.selectionStart, this.selectionEnd],\n    };\n  }\n\n  public componentDidUpdate(\n    prevProps: ITextFieldProps,\n    prevState: ITextFieldState,\n    snapshot: ITextFieldSnapshot,\n  ): void {\n    const props = this.props;\n    const { selection = [null, null] } = snapshot || {};\n    const [start, end] = selection;\n\n    if (!!prevProps.multiline !== !!props.multiline && prevState.isFocused) {\n      // The text field has just changed between single- and multi-line, so we need to reset focus\n      // and selection/cursor.\n      this.focus();\n      if (start !== null && end !== null && start >= 0 && end >= 0) {\n        this.setSelectionRange(start, end);\n      }\n    }\n\n    const prevValue = _getValue(prevProps, prevState);\n    const value = this.value;\n    if (prevValue !== value) {\n      // Handle controlled/uncontrolled warnings and status\n      this._warnControlledUsage(prevProps);\n\n      // Clear error message if needed\n      // TODO: is there any way to do this without an extra render?\n      if (this.state.errorMessage && !props.errorMessage) {\n        this.setState({ errorMessage: '' });\n      }\n\n      // Adjust height if needed based on new value\n      this._adjustInputHeight();\n\n      // Reset the record of the last value seen by a change/input event\n      this._lastChangeValue = undefined;\n\n      // TODO: #5875 added logic to trigger validation in componentWillReceiveProps and other places.\n      // This seems a bit odd and hard to integrate with the new approach.\n      // (Starting to think we should just put the validation logic in a separate wrapper component...?)\n      if (_shouldValidateAllChanges(props)) {\n        this._delayedValidate(value);\n      }\n    }\n  }\n\n  public render(): JSX.Element {\n    const {\n      borderless,\n      className,\n      disabled,\n      iconProps,\n      inputClassName,\n      label,\n      multiline,\n      required,\n      underlined,\n      prefix,\n      resizable,\n      suffix,\n      theme,\n      styles,\n      autoAdjustHeight,\n      onRenderPrefix = this._onRenderPrefix,\n      onRenderSuffix = this._onRenderSuffix,\n      onRenderLabel = this._onRenderLabel,\n      onRenderDescription = this._onRenderDescription,\n    } = this.props;\n    const { isFocused } = this.state;\n    const errorMessage = this._errorMessage;\n\n    this._classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      disabled,\n      focused: isFocused,\n      required,\n      multiline,\n      hasLabel: !!label,\n      hasErrorMessage: !!errorMessage,\n      borderless,\n      resizable,\n      hasIcon: !!iconProps,\n      underlined,\n      inputClassName,\n      autoAdjustHeight,\n    });\n\n    return (\n      <div className={this._classNames.root}>\n        <div className={this._classNames.wrapper}>\n          {onRenderLabel(this.props, this._onRenderLabel)}\n          <div className={this._classNames.fieldGroup}>\n            {(prefix !== undefined || this.props.onRenderPrefix) && (\n              <div className={this._classNames.prefix}>{onRenderPrefix(this.props, this._onRenderPrefix)}</div>\n            )}\n            {multiline ? this._renderTextArea() : this._renderInput()}\n            {iconProps && <Icon className={this._classNames.icon} {...iconProps} />}\n            {(suffix !== undefined || this.props.onRenderSuffix) && (\n              <div className={this._classNames.suffix}>{onRenderSuffix(this.props, this._onRenderSuffix)}</div>\n            )}\n          </div>\n        </div>\n        {this._isDescriptionAvailable && (\n          <span id={this._descriptionId}>\n            {onRenderDescription(this.props, this._onRenderDescription)}\n            {errorMessage && (\n              <div role=\"alert\">\n                <DelayedRender>\n                  <p className={this._classNames.errorMessage}>\n                    <span data-automation-id=\"error-message\">{errorMessage}</span>\n                  </p>\n                </DelayedRender>\n              </div>\n            )}\n          </span>\n        )}\n      </div>\n    );\n  }\n\n  /**\n   * Sets focus on the text field\n   */\n  public focus() {\n    if (this._textElement.current) {\n      this._textElement.current.focus();\n    }\n  }\n\n  /**\n   * Blurs the text field.\n   */\n  public blur() {\n    if (this._textElement.current) {\n      this._textElement.current.blur();\n    }\n  }\n\n  /**\n   * Selects the text field\n   */\n  public select() {\n    if (this._textElement.current) {\n      this._textElement.current.select();\n    }\n  }\n\n  /**\n   * Sets the selection start of the text field to a specified value\n   */\n  public setSelectionStart(value: number): void {\n    if (this._textElement.current) {\n      this._textElement.current.selectionStart = value;\n    }\n  }\n\n  /**\n   * Sets the selection end of the text field to a specified value\n   */\n  public setSelectionEnd(value: number): void {\n    if (this._textElement.current) {\n      this._textElement.current.selectionEnd = value;\n    }\n  }\n\n  /**\n   * Gets the selection start of the text field\n   */\n  public get selectionStart(): number | null {\n    return this._textElement.current ? this._textElement.current.selectionStart : -1;\n  }\n\n  /**\n   * Gets the selection end of the text field\n   */\n  public get selectionEnd(): number | null {\n    return this._textElement.current ? this._textElement.current.selectionEnd : -1;\n  }\n\n  /**\n   * Sets the start and end positions of a selection in a text field.\n   * @param start - Index of the start of the selection.\n   * @param end - Index of the end of the selection.\n   */\n  public setSelectionRange(start: number, end: number): void {\n    if (this._textElement.current) {\n      (this._textElement.current as HTMLInputElement).setSelectionRange(start, end);\n    }\n  }\n\n  private _warnControlledUsage(prevProps?: ITextFieldProps): void {\n    // Show warnings if props are being used in an invalid way\n    warnControlledUsage({\n      componentId: this._id,\n      componentName: COMPONENT_NAME,\n      props: this.props,\n      oldProps: prevProps,\n      valueProp: 'value',\n      defaultValueProp: 'defaultValue',\n      onChangeProp: 'onChange',\n      readOnlyProp: 'readOnly',\n    });\n\n    if (this.props.value === null && !this._hasWarnedNullValue) {\n      this._hasWarnedNullValue = true;\n      warn(\n        `Warning: 'value' prop on '${COMPONENT_NAME}' should not be null. Consider using an ` +\n          'empty string to clear the component or undefined to indicate an uncontrolled component.',\n      );\n    }\n  }\n\n  /** Returns `props.id` if available, or a fallback if not. */\n  private get _id(): string {\n    return this.props.id || this._fallbackId;\n  }\n\n  private get _isControlled(): boolean {\n    return isControlled(this.props, 'value');\n  }\n\n  private _onFocus = (ev: React.FocusEvent<HTMLInputElement | HTMLTextAreaElement>): void => {\n    if (this.props.onFocus) {\n      this.props.onFocus(ev);\n    }\n\n    this.setState({ isFocused: true }, () => {\n      if (this.props.validateOnFocusIn) {\n        this._validate(this.value);\n      }\n    });\n  };\n\n  private _onBlur = (ev: React.FocusEvent<HTMLInputElement | HTMLTextAreaElement>): void => {\n    if (this.props.onBlur) {\n      this.props.onBlur(ev);\n    }\n\n    this.setState({ isFocused: false }, () => {\n      if (this.props.validateOnFocusOut) {\n        this._validate(this.value);\n      }\n    });\n  };\n\n  private _onRenderLabel = (props: ITextFieldProps): JSX.Element | null => {\n    const { label, required } = props;\n    // IProcessedStyleSet definition requires casting for what Label expects as its styles prop\n    const labelStyles = this._classNames.subComponentStyles\n      ? (this._classNames.subComponentStyles.label as IStyleFunctionOrObject<ILabelStyleProps, ILabelStyles>)\n      : undefined;\n\n    if (label) {\n      return (\n        <Label required={required} htmlFor={this._id} styles={labelStyles} disabled={props.disabled} id={this._labelId}>\n          {props.label}\n        </Label>\n      );\n    }\n    return null;\n  };\n\n  private _onRenderDescription = (props: ITextFieldProps): JSX.Element | null => {\n    if (props.description) {\n      return <span className={this._classNames.description}>{props.description}</span>;\n    }\n    return null;\n  };\n\n  private _onRenderPrefix(props: ITextFieldProps): JSX.Element {\n    const { prefix } = props;\n    return <span style={{ paddingBottom: '1px' }}>{prefix}</span>;\n  }\n\n  private _onRenderSuffix(props: ITextFieldProps): JSX.Element {\n    const { suffix } = props;\n    return <span style={{ paddingBottom: '1px' }}>{suffix}</span>;\n  }\n\n  /**\n   * Current error message from either `props.errorMessage` or the result of `props.onGetErrorMessage`.\n   *\n   * - If there is no validation error or we have not validated the input value, errorMessage is an empty string.\n   * - If we have done the validation and there is validation error, errorMessage is the validation error message.\n   */\n  private get _errorMessage(): string | JSX.Element {\n    const { errorMessage = this.state.errorMessage } = this.props;\n    return errorMessage || '';\n  }\n\n  /**\n   * If a custom description render function is supplied then treat description as always available.\n   * Otherwise defer to the presence of description or error message text.\n   */\n  private get _isDescriptionAvailable(): boolean {\n    const props = this.props;\n    return !!(props.onRenderDescription || props.description || this._errorMessage);\n  }\n\n  private _renderTextArea(): React.ReactElement<React.HTMLAttributes<HTMLAreaElement>> {\n    const textAreaProps = getNativeProps<React.TextareaHTMLAttributes<HTMLTextAreaElement>>(\n      this.props,\n      textAreaProperties,\n      ['defaultValue'],\n    );\n    const ariaLabelledBy = this.props['aria-labelledby'] || (this.props.label ? this._labelId : undefined);\n    return (\n      <textarea\n        id={this._id}\n        {...textAreaProps}\n        ref={this._textElement as React.RefObject<HTMLTextAreaElement>}\n        value={this.value || ''}\n        onInput={this._onInputChange}\n        onChange={this._onInputChange}\n        className={this._classNames.field}\n        aria-labelledby={ariaLabelledBy}\n        aria-describedby={this._isDescriptionAvailable ? this._descriptionId : this.props['aria-describedby']}\n        aria-invalid={!!this._errorMessage}\n        aria-label={this.props.ariaLabel}\n        readOnly={this.props.readOnly}\n        onFocus={this._onFocus}\n        onBlur={this._onBlur}\n      />\n    );\n  }\n\n  private _renderInput(): React.ReactElement<React.HTMLAttributes<HTMLInputElement>> {\n    const inputProps = getNativeProps<React.HTMLAttributes<HTMLInputElement>>(this.props, inputProperties, [\n      'defaultValue',\n    ]);\n    const ariaLabelledBy = this.props['aria-labelledby'] || (this.props.label ? this._labelId : undefined);\n    return (\n      <input\n        type={'text'}\n        id={this._id}\n        aria-labelledby={ariaLabelledBy}\n        {...inputProps}\n        ref={this._textElement as React.RefObject<HTMLInputElement>}\n        value={this.value || ''}\n        onInput={this._onInputChange}\n        onChange={this._onInputChange}\n        className={this._classNames.field}\n        aria-label={this.props.ariaLabel}\n        aria-describedby={this._isDescriptionAvailable ? this._descriptionId : this.props['aria-describedby']}\n        aria-invalid={!!this._errorMessage}\n        readOnly={this.props.readOnly}\n        onFocus={this._onFocus}\n        onBlur={this._onBlur}\n      />\n    );\n  }\n\n  private _onInputChange = (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>): void => {\n    // Previously, we needed to call both onInput and onChange due to some weird IE/React issues,\n    // which have *probably* been fixed now:\n    // - https://github.com/microsoft/fluentui/issues/744 (likely fixed)\n    // - https://github.com/microsoft/fluentui/issues/824 (confirmed fixed)\n\n    // TODO (Fabric 8?) - Switch to calling only onChange. This switch is pretty disruptive for\n    // tests (ours and maybe consumers' too), so it seemed best to do the switch in a major bump.\n\n    const element = event.target as HTMLInputElement;\n    const value = element.value;\n    // Ignore this event if the value is undefined (in case one of the IE bugs comes back)\n    if (value === undefined || value === this._lastChangeValue) {\n      return;\n    }\n    this._lastChangeValue = value;\n\n    // This is so developers can access the event properties in asynchronous callbacks\n    // https://reactjs.org/docs/events.html#event-pooling\n    event.persist();\n\n    let isSameValue: boolean;\n    this.setState(\n      (prevState: ITextFieldState, props: ITextFieldProps) => {\n        const prevValue = _getValue(props, prevState) || '';\n        isSameValue = value === prevValue;\n        // Avoid doing unnecessary work when the value has not changed.\n        if (isSameValue) {\n          return null;\n        }\n\n        // ONLY if this is an uncontrolled component, update the displayed value.\n        // (Controlled components must update the `value` prop from `onChange`.)\n        return this._isControlled ? null : { uncontrolledValue: value };\n      },\n      () => {\n        // If the value actually changed, call onChange (for either controlled or uncontrolled)\n        const { onChange } = this.props;\n        if (!isSameValue && onChange) {\n          onChange(event, value);\n        }\n      },\n    );\n  };\n\n  private _validate(value: string | undefined): void {\n    // In case _validate is called again while validation promise is executing\n    if (this._latestValidateValue === value && _shouldValidateAllChanges(this.props)) {\n      return;\n    }\n\n    this._latestValidateValue = value;\n    const onGetErrorMessage = this.props.onGetErrorMessage;\n    const result = onGetErrorMessage && onGetErrorMessage(value || '');\n\n    if (result !== undefined) {\n      if (typeof result === 'string' || !('then' in result)) {\n        this.setState({ errorMessage: result });\n        this._notifyAfterValidate(value, result);\n      } else {\n        const currentValidation: number = ++this._lastValidation;\n\n        result.then((errorMessage: string | JSX.Element) => {\n          if (currentValidation === this._lastValidation) {\n            this.setState({ errorMessage });\n          }\n          this._notifyAfterValidate(value, errorMessage);\n        });\n      }\n    } else {\n      this._notifyAfterValidate(value, '');\n    }\n  }\n\n  private _notifyAfterValidate(value: string | undefined, errorMessage: string | JSX.Element): void {\n    if (value === this.value && this.props.onNotifyValidationResult) {\n      this.props.onNotifyValidationResult(errorMessage, value);\n    }\n  }\n\n  private _adjustInputHeight(): void {\n    if (this._textElement.current && this.props.autoAdjustHeight && this.props.multiline) {\n      const textField = this._textElement.current;\n      textField.style.height = '';\n      textField.style.height = textField.scrollHeight + 'px';\n    }\n  }\n}\n\n/** Get the value from the given state and props (converting from number to string if needed) */\nfunction _getValue(props: ITextFieldProps, state: ITextFieldState): string | undefined {\n  const { value = state.uncontrolledValue } = props;\n  if (typeof value === 'number') {\n    // not allowed per typings, but happens anyway\n    return String(value);\n  }\n  return value;\n}\n\n/**\n * If `validateOnFocusIn` or `validateOnFocusOut` is true, validation should run **only** on that event.\n * Otherwise, validation should run on every change.\n */\nfunction _shouldValidateAllChanges(props: ITextFieldProps): boolean {\n  return !(props.validateOnFocusIn || props.validateOnFocusOut);\n}\n","import {\n  AnimationClassNames,\n  getGlobalClassNames,\n  getInputFocusStyle,\n  HighContrastSelector,\n  IStyle,\n  normalize,\n  getPlaceholderStyles,\n  IconFontSizes,\n} from '../../Styling';\nimport { ILabelStyles, ILabelStyleProps } from '../../Label';\nimport { ITextFieldStyleProps, ITextFieldStyles } from './TextField.types';\nimport { IStyleFunctionOrObject } from '@uifabric/utilities';\n\nconst globalClassNames = {\n  root: 'ms-TextField',\n  description: 'ms-TextField-description',\n  errorMessage: 'ms-TextField-errorMessage',\n  field: 'ms-TextField-field',\n  fieldGroup: 'ms-TextField-fieldGroup',\n  prefix: 'ms-TextField-prefix',\n  suffix: 'ms-TextField-suffix',\n  wrapper: 'ms-TextField-wrapper',\n\n  multiline: 'ms-TextField--multiline',\n  borderless: 'ms-TextField--borderless',\n  underlined: 'ms-TextField--underlined',\n  unresizable: 'ms-TextField--unresizable',\n\n  required: 'is-required',\n  disabled: 'is-disabled',\n  active: 'is-active',\n};\n\nfunction getLabelStyles(props: ITextFieldStyleProps): IStyleFunctionOrObject<ILabelStyleProps, ILabelStyles> {\n  const { underlined, disabled, focused, theme } = props;\n  const { palette, fonts } = theme;\n\n  return () => ({\n    root: [\n      underlined &&\n        disabled && {\n          color: palette.neutralTertiary,\n        },\n      underlined && {\n        fontSize: fonts.medium.fontSize,\n        marginRight: 8,\n        paddingLeft: 12,\n        paddingRight: 0,\n        lineHeight: '22px',\n        height: 32,\n      },\n      underlined &&\n        focused && {\n          selectors: {\n            [HighContrastSelector]: {\n              height: 31, // -1px to prevent jumpiness in HC with the increased border-width to 2px\n            },\n          },\n        },\n    ],\n  });\n}\n\nexport function getStyles(props: ITextFieldStyleProps): ITextFieldStyles {\n  const {\n    theme,\n    className,\n    disabled,\n    focused,\n    required,\n    multiline,\n    hasLabel,\n    borderless,\n    underlined,\n    hasIcon,\n    resizable,\n    hasErrorMessage,\n    inputClassName,\n    autoAdjustHeight,\n  } = props;\n\n  const { semanticColors, effects, fonts } = theme;\n\n  const classNames = getGlobalClassNames(globalClassNames, theme);\n\n  const fieldPrefixSuffix: IStyle = {\n    // Suffix/Prefix are not editable so the disabled slot perfectly fits.\n    background: semanticColors.disabledBackground,\n    color: !disabled ? semanticColors.inputPlaceholderText : semanticColors.disabledText,\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 10px',\n    lineHeight: 1,\n    whiteSpace: 'nowrap',\n    flexShrink: 0,\n  };\n\n  // placeholder style constants\n  const placeholderStyles: IStyle = [\n    fonts.medium,\n    {\n      color: semanticColors.inputPlaceholderText,\n      opacity: 1,\n    },\n  ];\n\n  const disabledPlaceholderStyles: IStyle = {\n    color: semanticColors.disabledText,\n  };\n\n  return {\n    root: [\n      classNames.root,\n      fonts.medium,\n      required && classNames.required,\n      disabled && classNames.disabled,\n      focused && classNames.active,\n      multiline && classNames.multiline,\n      borderless && classNames.borderless,\n      underlined && classNames.underlined,\n      normalize,\n      {\n        position: 'relative',\n      },\n      className,\n    ],\n    wrapper: [\n      classNames.wrapper,\n\n      underlined && [\n        {\n          display: 'flex',\n          borderBottom: `1px solid ${!hasErrorMessage ? semanticColors.inputBorder : semanticColors.errorText}`,\n          width: '100%',\n        },\n        disabled && {\n          borderBottomColor: semanticColors.disabledBackground,\n          selectors: {\n            [HighContrastSelector]: {\n              borderColor: 'GrayText',\n            },\n          },\n        },\n        !disabled && {\n          selectors: {\n            ':hover': {\n              borderBottomColor: !hasErrorMessage ? semanticColors.inputBorderHovered : semanticColors.errorText,\n              selectors: {\n                [HighContrastSelector]: {\n                  borderBottomColor: 'Highlight',\n                },\n              },\n            },\n          },\n        },\n        focused && [\n          {\n            position: 'relative',\n          },\n          getInputFocusStyle(\n            !hasErrorMessage ? semanticColors.inputFocusBorderAlt : semanticColors.errorText,\n            0,\n            'borderBottom',\n          ),\n        ],\n      ],\n    ],\n    fieldGroup: [\n      classNames.fieldGroup,\n      normalize,\n      {\n        border: `1px solid ${semanticColors.inputBorder}`,\n        borderRadius: effects.roundedCorner2,\n        background: semanticColors.inputBackground,\n        cursor: 'text',\n        height: 32,\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'stretch',\n        position: 'relative',\n      },\n      multiline && {\n        minHeight: '60px',\n        height: 'auto',\n        display: 'flex',\n      },\n\n      !focused &&\n        !disabled && {\n          selectors: {\n            ':hover': {\n              borderColor: semanticColors.inputBorderHovered,\n              selectors: {\n                [HighContrastSelector]: {\n                  borderColor: 'Highlight',\n                },\n              },\n            },\n          },\n        },\n\n      focused &&\n        !underlined &&\n        getInputFocusStyle(\n          !hasErrorMessage ? semanticColors.inputFocusBorderAlt : semanticColors.errorText,\n          effects.roundedCorner2,\n        ),\n      disabled && {\n        borderColor: semanticColors.disabledBackground,\n        selectors: {\n          [HighContrastSelector]: {\n            borderColor: 'GrayText',\n          },\n        },\n\n        cursor: 'default',\n      },\n      borderless && {\n        border: 'none',\n      },\n      borderless &&\n        focused && {\n          border: 'none',\n          selectors: {\n            ':after': {\n              border: 'none',\n            },\n          },\n        },\n      underlined && {\n        flex: '1 1 0px',\n        border: 'none',\n        textAlign: 'left',\n      },\n      underlined &&\n        disabled && {\n          backgroundColor: 'transparent',\n        },\n\n      hasErrorMessage &&\n        !underlined && {\n          borderColor: semanticColors.errorText,\n          selectors: {\n            '&:hover': {\n              borderColor: semanticColors.errorText,\n            },\n          },\n        },\n      !hasLabel &&\n        required && {\n          selectors: {\n            ':before': {\n              content: `'*'`,\n              color: semanticColors.errorText,\n              position: 'absolute',\n              top: -5,\n              right: -10,\n            },\n            [HighContrastSelector]: {\n              selectors: {\n                ':before': {\n                  right: -14, // moving the * 4 pixel to right to alleviate border clipping in HC mode.\n                },\n              },\n            },\n          },\n        },\n    ],\n    field: [\n      fonts.medium,\n      classNames.field,\n      normalize,\n      {\n        borderRadius: 0,\n        border: 'none',\n        background: 'none',\n        backgroundColor: 'transparent',\n        color: semanticColors.inputText,\n        padding: '0 8px',\n        width: '100%',\n        minWidth: 0,\n        textOverflow: 'ellipsis',\n        outline: 0,\n        selectors: {\n          '&:active, &:focus, &:hover': { outline: 0 },\n          '::-ms-clear': {\n            display: 'none',\n          },\n        },\n      },\n      getPlaceholderStyles(placeholderStyles),\n      multiline &&\n        !resizable && [\n          classNames.unresizable,\n          {\n            resize: 'none',\n          },\n        ],\n      multiline && {\n        minHeight: 'inherit',\n        lineHeight: 17,\n        flexGrow: 1,\n        paddingTop: 6,\n        paddingBottom: 6,\n        overflow: 'auto',\n        width: '100%',\n      },\n      multiline &&\n        autoAdjustHeight && {\n          overflow: 'hidden',\n        },\n      hasIcon && {\n        paddingRight: 24,\n      },\n      multiline &&\n        hasIcon && {\n          paddingRight: 40,\n        },\n      disabled && [\n        {\n          backgroundColor: semanticColors.disabledBackground,\n          color: semanticColors.disabledText,\n          borderColor: semanticColors.disabledBackground,\n        },\n        getPlaceholderStyles(disabledPlaceholderStyles),\n      ],\n      underlined && {\n        textAlign: 'left',\n      },\n      focused &&\n        !borderless && {\n          selectors: {\n            [HighContrastSelector]: {\n              paddingLeft: 11,\n              paddingRight: 11,\n            },\n          },\n        },\n      focused &&\n        multiline &&\n        !borderless && {\n          selectors: {\n            [HighContrastSelector]: {\n              paddingTop: 4, // take into consideration the 2px increased border-width (not when borderless).\n            },\n          },\n        },\n      inputClassName,\n    ],\n    icon: [\n      multiline && {\n        paddingRight: 24,\n        alignItems: 'flex-end',\n      },\n      {\n        pointerEvents: 'none',\n        position: 'absolute',\n        bottom: 6,\n        right: 8,\n        top: 'auto',\n        fontSize: IconFontSizes.medium,\n        lineHeight: 18,\n      },\n      disabled && {\n        color: semanticColors.disabledText,\n      },\n    ],\n    description: [\n      classNames.description,\n      {\n        color: semanticColors.bodySubtext,\n        fontSize: fonts.xSmall.fontSize,\n      },\n    ],\n    errorMessage: [\n      classNames.errorMessage,\n      AnimationClassNames.slideDownIn20,\n      fonts.small,\n      {\n        color: semanticColors.errorText,\n        margin: 0,\n        paddingTop: 5,\n        display: 'flex',\n        alignItems: 'center',\n      },\n    ],\n    prefix: [classNames.prefix, fieldPrefixSuffix],\n    suffix: [classNames.suffix, fieldPrefixSuffix],\n    subComponentStyles: {\n      label: getLabelStyles(props),\n    },\n  };\n}\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { TextFieldBase } from './TextField.base';\nimport { ITextFieldProps, ITextFieldStyles, ITextFieldStyleProps } from './TextField.types';\nimport { getStyles } from './TextField.styles';\nexport { ITextField } from './TextField.types';\n\nexport const TextField: React.FunctionComponent<ITextFieldProps> = styled<\n  ITextFieldProps,\n  ITextFieldStyleProps,\n  ITextFieldStyles\n>(TextFieldBase, getStyles, undefined, {\n  scope: 'TextField',\n});\n","import * as React from 'react';\nimport { divProperties, getNativeProps } from '../../Utilities';\nimport { classNamesFunction } from '../../Utilities';\nimport { ILabelProps, ILabelStyleProps, ILabelStyles } from './Label.types';\n\nconst getClassNames = classNamesFunction<ILabelStyleProps, ILabelStyles>({\n  // Label is used a lot by other components.\n  // It's likely to see expected cases which pass different className to the Label.\n  // Therefore setting a larger cache size.\n  cacheSize: 100,\n});\n\nexport class LabelBase extends React.Component<ILabelProps, {}> {\n  public render(): JSX.Element {\n    const { as: RootType = 'label', children, className, disabled, styles, required, theme } = this.props;\n    const classNames = getClassNames(styles, {\n      className,\n      disabled,\n      required,\n      theme: theme!,\n    });\n    return (\n      <RootType {...getNativeProps(this.props, divProperties)} className={classNames.root}>\n        {children}\n      </RootType>\n    );\n  }\n}\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { LabelBase } from './Label.base';\nimport { getStyles } from './Label.styles';\nimport { ILabelProps, ILabelStyleProps, ILabelStyles } from './Label.types';\n\nexport const Label: React.FunctionComponent<ILabelProps> = styled<ILabelProps, ILabelStyleProps, ILabelStyles>(\n  LabelBase,\n  getStyles,\n  undefined,\n  {\n    scope: 'Label',\n  },\n);\n","import { HighContrastSelector, FontWeights } from '../../Styling';\nimport { ILabelStyleProps, ILabelStyles } from './Label.types';\n\nexport const getStyles = (props: ILabelStyleProps): ILabelStyles => {\n  const { theme, className, disabled, required } = props;\n  const { semanticColors } = theme;\n\n  // Tokens\n  const labelFontWeight = FontWeights.semibold;\n  const labelColor = semanticColors.bodyText;\n  const labelDisabledColor = semanticColors.disabledBodyText;\n  const labelRequiredStarColor = semanticColors.errorText;\n\n  return {\n    root: [\n      'ms-Label',\n      theme.fonts.medium,\n      {\n        fontWeight: labelFontWeight,\n        color: labelColor,\n        boxSizing: 'border-box',\n        boxShadow: 'none',\n        margin: 0,\n        display: 'block',\n        padding: '5px 0',\n        wordWrap: 'break-word',\n        overflowWrap: 'break-word',\n      },\n      disabled && {\n        color: labelDisabledColor,\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'GrayText',\n          },\n        },\n      },\n      required && {\n        selectors: {\n          '::after': {\n            content: `' *'`,\n            color: labelRequiredStarColor,\n            paddingRight: 12,\n          },\n        },\n      },\n      className,\n    ],\n  };\n};\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}