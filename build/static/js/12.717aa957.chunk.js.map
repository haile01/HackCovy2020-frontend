{"version":3,"sources":["../../src/components/FocusTrapZone/FocusTrapZone.tsx","../../src/utilities/selectableOption/SelectableOption.types.ts","../../src/components/Checkbox/Checkbox.base.tsx","../../src/components/Checkbox/Checkbox.styles.ts","../../src/components/Checkbox/Checkbox.tsx","../../src/components/Dropdown/utilities/DropdownSizePosCache.ts","../../src/components/Panel/Panel.types.ts","../../src/components/Overlay/Overlay.base.tsx","../../src/components/Overlay/Overlay.styles.ts","../../src/components/Overlay/Overlay.tsx","../../src/components/Panel/Panel.base.tsx","../../src/components/Panel/Panel.styles.ts","../../src/components/Panel/Panel.ts","../../src/utilities/selectableOption/SelectableOption.ts","../../src/components/Dropdown/Dropdown.base.tsx","../../src/safeRequestAnimationFrame.ts","../../src/components/Dropdown/Dropdown.styles.ts","../../src/components/Dropdown/Dropdown.ts","../../src/components/Button/ActionButton/ActionButton.styles.ts","../../src/components/Button/CommandButton/CommandButton.tsx","../../src/components/Button/ActionButton/ActionButton.tsx","../../src/components/Pivot/Pivot.types.ts","../../src/components/Pivot/PivotItem.tsx","../../src/components/Pivot/Pivot.base.tsx","../../src/components/Pivot/Pivot.styles.ts","../../src/components/Pivot/Pivot.tsx","../../src/components/Separator/Separator.base.tsx","../../src/components/Separator/Separator.tsx","../../src/components/Separator/Separator.styles.ts","components/Profile/index.tsx","utils/api.ts","actions/userAction.ts"],"names":["props","_root","_firstBumper","_lastBumper","_hasFocus","_onRootFocus","ev","onFocus","_onRootBlur","onBlur","relatedTarget","_getDocument","activeElement","current","_onFirstBumperFocus","_onBumperFocus","_onLastBumperFocus","isFirstBumper","disabled","currentBumper","nextFocusable","_isBumper","focus","_onFocusCapture","onFocusCapture","target","currentTarget","_previouslyFocusedElementInTrapZone","_forceFocusInTrap","FocusTrapZone","_focusStack","length","focusedElement","preventDefault","stopPropagation","_forceClickInTrap","clickedElement","componentDidMount","this","_bringFocusIntoZone","_updateEventHandlers","UNSAFE_componentWillReceiveProps","nextProps","elementToFocusOnDismiss","_previouslyFocusedElementOutsideTrapZone","componentDidUpdate","prevProps","prevForceFocusInsideTrap","undefined","forceFocusInsideTrap","newForceFocusInsideTrap","prevDisabled","newDisabled","_returnFocusToInitiator","componentWillUnmount","_disposeClickHandler","_disposeFocusHandler","render","className","ariaLabelledBy","divProps","bumperProps","style","pointerEvents","position","tabIndex","ref","children","focusPreviouslyFocusedInnerElement","firstFocusableSelector","_focusAsync","focusSelector","_firstFocusableChild","querySelector","firstChild","element","disableFirstFocus","push","ignoreExternalFocusing","filter","value","doc","body","newProps","isClickableOutsideFocusTrap","window","SelectableOptionMenuItemType","getClassNames","classNamesFunction","context","_checkBox","_onFocus","inputProps","_onBlur","_onChange","onChange","isChecked","isIndeterminate","indeterminate","setState","checked","_onRenderLabel","label","title","_classNames","text","initializeComponentRef","_id","id","getId","state","defaultChecked","defaultIndeterminate","getDerivedStateFromProps","prevState","stateUpdate","Object","keys","name","boxSide","theme","ariaLabel","ariaDescribedBy","styles","onRenderLabel","checkmarkIconProps","ariaPositionInSet","ariaSetSize","keytipProps","reversed","isUsingCustomLabelRender","KeytipData","keytipAttributes","root","type","input","htmlFor","checkbox","Icon","iconName","checkmark","defaultProps","GlobalClassNames","Checkbox","styled","semanticColors","effects","palette","fonts","classNames","checkmarkFontColor","inputForegroundChecked","checkmarkFontColorHovered","neutralSecondary","checkboxBorderColor","neutralPrimary","checkboxBorderIndeterminateColor","inputBackgroundChecked","checkboxBorderColorChecked","checkboxBorderColorDisabled","disabledBodySubtext","checkboxBorderHoveredColor","inputBorderHovered","checkboxBorderIndeterminateHoveredColor","inputBackgroundCheckedHovered","checkboxBackgroundChecked","checkboxBackgroundCheckedHovered","checkboxBorderColorCheckedHovered","checkboxHoveredTextColor","inputTextHovered","checkboxBackgroundDisabledChecked","checkboxTextColor","bodyText","checkboxTextColorDisabled","disabledText","indeterminateDotStyles","content","borderRadius","roundedCorner2","width","height","top","left","boxSizing","borderWidth","borderStyle","borderColor","transitionProperty","transitionDuration","transitionTimingFunction","display","selectors","color","opacity","background","outline","outlineOffset","medium","alignItems","cursor","userSelect","textAlign","flexDirection","justifyContent","right","bottom","flexShrink","border","overflow","marginLeft","marginRight","MsHighContrastAdjust","fontSize","lineHeight","scope","PanelType","_size","updateOptions","options","displayOnlyOptionsCache","size","i","itemType","Divider","Header","hidden","_displayOnlyOptionsCache","positionInSet","index","offset","Error","allowTouchBodyScroll","_allowTouchBodyScroll","isDark","isDarkThemed","rootDark","Overlay","isNone","backgroundColor","whiteTranslucent40","visibility","blackTranslucent40","PanelVisibilityState","_panel","_animationCallback","_hasCustomNavigation","onRenderNavigation","onRenderNavigationContent","dismiss","onDismiss","defaultPrevented","close","_allowScrollOnPanel","elt","_events","off","_scrollableContent","_onRenderNavigation","hasCloseButton","navigation","_onRenderNavigationContent","closeButtonAriaLabel","onRenderHeader","iconButtonStyles","subComponentStyles","closeButton","_onRenderHeader","_headerTextId","IconButton","onClick","_onPanelClick","iconProps","defaultRender","headerTextId","headerText","headerTextProps","header","role","css","_onRenderBody","_onRenderFooter","onRenderFooterContent","footer","footerInner","_animateTo","newVisibilityState","open","onOpen","_async","setTimeout","_onTransitionComplete","_clearExistingAnimationTimer","clearTimeout","_updateFooterPosition","onOpened","closed","onDismissed","Async","EventGroup","warnDeprecations","isFooterSticky","isOpen","animatingClosed","animatingOpen","on","_shouldListenForOuterClick","document","_dismissOnOuterClick","previousProps","previousState","shouldListenOnOuterClick","previousShouldListenOnOuterClick","dispose","focusTrapZoneProps","headerClassName","isBlocking","isFooterAtBottom","isLightDismiss","isHiddenOnDismiss","layerProps","overlayProps","customWidth","onLightDismissClick","onRenderBody","onRenderFooter","isLeft","smallFixedNear","customNear","isOnRightSide","customWidthStyles","custom","nativeProps","isActive","isAnimating","focusTrapZoneClassName","hasCustomNavigation","overlay","Layer","Popup","hiddenPanel","main","commands","contentInner","scrollableContent","clientHeight","scrollHeight","panel","elementContains","onOuterClick","smallFixedFar","smallFluid","large","largeFixed","extraLarge","panelWidth","panelMargin","smallPanelSelectors","mediumPanelSelectors","largePanelSelectors","largeFixedPanelSelectors","extraLargePanelSelectors","sharedPaddingStyles","paddingLeft","paddingRight","Panel","isCustomPanel","fadeIn100","fadeOut100","bodyBackground","boxShadow","elevation64","overflowX","overflowY","WebkitOverflowScrolling","borderLeft","variantBorder","borderRight","maxWidth","slideRightIn40","slideLeftIn40","slideLeftOut40","slideRightOut40","marginTop","flexGrow","alignSelf","xLarge","overflowWrap","wordWrap","wordBreak","hyphens","paddingBottom","borderTop","transition","durationValue3","easeFunction2","borderTopColor","paddingTop","rootHovered","getAllSelectedOptions","selectedIndices","selectedOptions","option","_host","_focusZone","_dropDown","_scrollIdleDelay","_sizePosCache","_requestAnimationFrame","component","activeTimeouts","cb","Set","extendComponent","forEach","cancelAnimationFrame","timeoutId","requestAnimationFrame","delete","add","event","multiSelect","onChanged","changedOpt","selected","_onRenderTitle","items","multiSelectDelimiter","displayTxt","map","join","_onRenderPlaceholder","_placeholder","_onRenderContainer","calloutProps","panelProps","responsiveMode","dropdownWidth","isSmall","panelStyles","_onDismiss","_renderFocusableList","Callout","isBeakVisible","gapSpace","doNotLayer","directionalHintFixed","directionalHint","DirectionalHint","bottomLeftEdge","callout","onScroll","_onScroll","onPositioned","_onPositioned","calloutWidth","clientWidth","_onRenderCaretDown","caretDown","_onRenderList","onRenderItem","queue","renderedList","emptyQueue","newGroup","key","item","_onRenderItem","placeRenderedOptionIntoQueue","_renderSeparator","_renderHeader","_renderOption","onRenderOption","isItemSelected","indexOf","itemClassName","dropdownItemHidden","dropdownItemSelectedAndDisabled","dropdownItemSelected","dropdownItemDisabled","dropdownItem","multiSelectItemStyles","multiSelectItem","_listId","_onItemClick","onMouseEnter","_onItemMouseEnter","bind","onMouseLeave","_onMouseItemLeave","onMouseMove","_onItemMouseMove","_onRenderItemLabel","optionSetSize","CommandButton","_onRenderOption","dropdownOptionText","positions","getDocument","getElementById","focusElement","calloutRenderEdge","targetEdge","setSelectedIndex","_isScrollIdle","_scrollIdleTimeoutId","_shouldIgnoreMouseEvent","setActive","e","_onDropdownBlur","_isDisabled","hasFocus","_onDropdownKeyDown","_lastKeyDownWasAltOrMeta","_isAltOrMeta","onKeyDown","newIndex","selectedIndex","containsExpandCollapseModifier","altKey","metaKey","which","KeyCodes","enter","escape","up","_moveIndex","down","home","end","space","_onDropdownKeyUp","shouldHandleKey","_shouldHandleKeyUp","onKeyUp","_onZoneKeyDown","elementToFocus","lastChild","pageUp","pageDown","tab","_onZoneKeyUp","_onDropdownClick","_shouldOpenOnFocus","_isFocusedByClick","_onDropdownMouseDown","isDisabled","required","labelStyles","Label","_labelId","_optionId","selectedKeys","defaultSelectedKeys","_getSelectedIndexes","selectedKey","defaultSelectedKey","selectedKeyProp","didOptionsChange","_gotMouseMove","errorMessage","onRenderTitle","onRenderContainer","onRenderCaretDown","onRenderPlaceholder","onRenderPlaceHolder","errorMessageId","ariaActiveDescendant","ariaAttrs","childRole","ariaPosInSet","ariaSelected","propStyles","hasError","hasLabel","isRenderingPlaceholder","panelClassName","calloutClassName","hasErrorMessage","dropdown","onMouseDown","caretDownWrapper","shouldOpenOnFocus","notifyOnReselect","newIndexes","Math","max","min","_copyArray","splice","persist","placeholder","placeHolder","array","newArray","stepValue","stepCounter","onRenderList","dropdownItemsWrapper","FocusZone","direction","vertical","dropdownItems","dropdownDivider","dropdownItemHeader","targetElement","_getAllSelectedIndices","_getSelectedIndex","Array","isArray","isSelected","alt","keyPressIsAltOrMetaAlone","openOnKeyboardFocus","DropdownBase","withResponsiveMode","titleIsPlaceHolder","titleHasError","highContrastAdjustMixin","replace","highContrastItemAndTitleStateMixin","highContrastBorderState","MinimumScreenSelector","Dropdown","globalClassnames","rootHoverFocusActiveSelectorNeutralDarkMixin","menuItemTextHovered","rootHoverFocusActiveSelectorNeutralPrimaryMixin","menuItemText","borderColorError","errorText","dropdownItemStyle","padding","minHeight","selectedItemBackgroundColor","menuItemBackgroundPressed","itemSelectors","menuItemBackgroundHovered","menuBackground","titleOpenBorderRadius","calloutOpenBorderRadius","focusBorder","themePrimary","inputBackground","inputBorder","DROPDOWN_HEIGHT","whiteSpace","textOverflow","inputPlaceholderText","disabledBackground","small","elevation8","bodyDivider","minWidth","margin","fontWeight","semibold","menuHeader","getStyles","memoize","customStyles","baseButtonStyles","actionButtonStyles","iconHovered","rootPressed","black","rootExpanded","iconPressed","themeDarker","rootDisabled","neutralTertiary","rootChecked","iconChecked","flexContainer","icon","themeDarkAlt","iconDisabled","menuIcon","textContainer","BaseButton","variantClassName","onRenderDescription","ActionButton","customizable","PivotLinkFormat","PivotLinkSize","linkText","_renderPivotLink","linkCollection","link","linkContent","itemKey","headerButtonProps","tabId","keyToTabIdMapping","onRenderItemLink","_renderLinkContent","contentString","itemCount","itemIcon","linkIsSelected","_onLinkClick","onKeyPress","_onKeyPress","count","_pivotId","links","_getPivotLinks","defaultSelectedIndex","_getSelectedKey","_getClassNames","_renderPivotLinks","_renderPivotItem","_isKeyValid","propsSelectedKey","stateSelectedKey","l","componentRef","horizontal","headersOnly","keyToIndexMapping","selectedTabId","itemContainer","toArray","result","child","_isPivotItem","pivotItem","toString","pivotItemProps","_getTabId","warn","getTabId","_updateSelectedItem","onLinkClick","rootIsLarge","linkSize","rootIsTabs","linkFormat","tabs","globalClassNames","actionLink","durationValue2","bold","buttonBackgroundHovered","buttonTextHovered","buttonBackgroundPressed","buttonBackground","verticalAlign","Pivot","buttonTextCheckedHovered","primaryButtonText","primaryButtonBackground","regular","primaryButtonBackgroundHovered","primaryButtonBackgroundPressed","flex","Separator","alignContent","alignStart","alignCenter","alignEnd","zIndex","neutralLighter","connect","user","dispatch","setUser","payload","useState","setRand","avatar","availableTimeBlock","username","password","fullName","forceReRender","round","random","groups","startIndex","level","curInd","day","useEffect","hasOwnProperty","api","getSession","then","res","success","data","chooseTime","cur","startTimeGroups","endTimeGroups","curTime","start","Date","toISOString","slice","form","setForm","error","setError","checkMatch","groupItems","setGroupItems","getGroups","g","desc","description","console","log","doctorItems","setDoctorItems","getAllUsers","u","d","group","stackStyles","columnProps","tokens","childrenGap","float","marginBottom","Image","src","onSubmit","sort","a","b","updateTimeBlock","Stack","DetailsList","onRenderItemColumn","column","DefaultButton","deleteRow","flat","columns","fieldName","isResizable","groupProps","showEmptyGroups","compact","checkboxVisibility","PrimaryButton","changePassword","TextField","deleteGroup","createGroup","deleteUser","deleteDoctor","phoneNumber","email","passportNumber","groupId","createUser","baseURL","request","url","axios","get","method","headers","localStorage","getItem","post","patch","Promise","resolve","getBooking","signIn","book","updateUser","searchBooking","query","getUser","getDoctors","generateSignedUrl","uploadImage","config"],"mappings":"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","file":"static/js/12.717aa957.chunk.js","sourcesContent":["import * as React from 'react';\nimport {\n  elementContains,\n  getNativeProps,\n  divProperties,\n  getFirstTabbable,\n  getLastTabbable,\n  getNextElement,\n  getDocument,\n  focusAsync,\n  initializeComponentRef,\n  on,\n} from '../../Utilities';\nimport { IFocusTrapZone, IFocusTrapZoneProps } from './FocusTrapZone.types';\n\nexport class FocusTrapZone extends React.Component<IFocusTrapZoneProps, {}> implements IFocusTrapZone {\n  private static _focusStack: FocusTrapZone[] = [];\n\n  private _root = React.createRef<HTMLDivElement>();\n  private _firstBumper = React.createRef<HTMLDivElement>();\n  private _lastBumper = React.createRef<HTMLDivElement>();\n  private _hasFocus: boolean = false;\n\n  private _previouslyFocusedElementOutsideTrapZone: HTMLElement;\n  private _previouslyFocusedElementInTrapZone?: HTMLElement;\n  private _disposeFocusHandler: (() => void) | undefined;\n  private _disposeClickHandler: (() => void) | undefined;\n\n  public constructor(props: IFocusTrapZoneProps) {\n    super(props);\n    initializeComponentRef(this);\n  }\n\n  public componentDidMount(): void {\n    this._bringFocusIntoZone();\n    this._updateEventHandlers(this.props);\n  }\n\n  // tslint:disable-next-line function-name\n  public UNSAFE_componentWillReceiveProps(nextProps: IFocusTrapZoneProps): void {\n    const { elementToFocusOnDismiss } = nextProps;\n    if (elementToFocusOnDismiss && this._previouslyFocusedElementOutsideTrapZone !== elementToFocusOnDismiss) {\n      this._previouslyFocusedElementOutsideTrapZone = elementToFocusOnDismiss;\n    }\n\n    this._updateEventHandlers(nextProps);\n  }\n\n  public componentDidUpdate(prevProps: IFocusTrapZoneProps) {\n    const prevForceFocusInsideTrap =\n      prevProps.forceFocusInsideTrap !== undefined ? prevProps.forceFocusInsideTrap : true;\n    const newForceFocusInsideTrap =\n      this.props.forceFocusInsideTrap !== undefined ? this.props.forceFocusInsideTrap : true;\n    const prevDisabled = prevProps.disabled !== undefined ? prevProps.disabled : false;\n    const newDisabled = this.props.disabled !== undefined ? this.props.disabled : false;\n\n    if ((!prevForceFocusInsideTrap && newForceFocusInsideTrap) || (prevDisabled && !newDisabled)) {\n      // Transition from forceFocusInsideTrap / FTZ disabled to enabled.\n      // Emulate what happens when a FocusTrapZone gets mounted.\n      this._bringFocusIntoZone();\n    } else if ((prevForceFocusInsideTrap && !newForceFocusInsideTrap) || (!prevDisabled && newDisabled)) {\n      // Transition from forceFocusInsideTrap / FTZ enabled to disabled.\n      // Emulate what happens when a FocusTrapZone gets unmounted.\n      this._returnFocusToInitiator();\n    }\n  }\n\n  public componentWillUnmount(): void {\n    // don't handle return focus unless forceFocusInsideTrap is true or focus is still within FocusTrapZone\n    if (\n      !this.props.disabled ||\n      this.props.forceFocusInsideTrap ||\n      !elementContains(this._root.current, this._getDocument().activeElement as HTMLElement)\n    ) {\n      this._returnFocusToInitiator();\n    }\n\n    // Dispose of event handlers so their closures can be garbage-collected\n    if (this._disposeClickHandler) {\n      this._disposeClickHandler();\n      this._disposeClickHandler = undefined;\n    }\n\n    if (this._disposeFocusHandler) {\n      this._disposeFocusHandler();\n      this._disposeFocusHandler = undefined;\n    }\n\n    // Dispose of element references so the DOM Nodes can be garbage-collected\n    delete this._previouslyFocusedElementInTrapZone;\n    delete this._previouslyFocusedElementOutsideTrapZone;\n  }\n\n  public render(): JSX.Element {\n    const { className, disabled = false, ariaLabelledBy } = this.props;\n    const divProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(this.props, divProperties);\n\n    const bumperProps = {\n      style: {\n        pointerEvents: 'none',\n        position: 'fixed', // 'fixed' prevents browsers from scrolling to bumpers when viewport does not contain them\n      },\n      tabIndex: disabled ? -1 : 0, // make bumpers tabbable only when enabled\n      'data-is-visible': true,\n    } as React.HTMLAttributes<HTMLDivElement>;\n\n    return (\n      <div\n        {...divProps}\n        className={className}\n        ref={this._root}\n        aria-labelledby={ariaLabelledBy}\n        onFocusCapture={this._onFocusCapture}\n        onFocus={this._onRootFocus}\n        onBlur={this._onRootBlur}\n      >\n        <div {...bumperProps} ref={this._firstBumper} onFocus={this._onFirstBumperFocus} />\n        {this.props.children}\n        <div {...bumperProps} ref={this._lastBumper} onFocus={this._onLastBumperFocus} />\n      </div>\n    );\n  }\n\n  public focus() {\n    const { focusPreviouslyFocusedInnerElement, firstFocusableSelector } = this.props;\n\n    if (\n      focusPreviouslyFocusedInnerElement &&\n      this._previouslyFocusedElementInTrapZone &&\n      elementContains(this._root.current, this._previouslyFocusedElementInTrapZone)\n    ) {\n      // focus on the last item that had focus in the zone before we left the zone\n      this._focusAsync(this._previouslyFocusedElementInTrapZone);\n      return;\n    }\n\n    const focusSelector =\n      typeof firstFocusableSelector === 'string'\n        ? firstFocusableSelector\n        : firstFocusableSelector && firstFocusableSelector();\n\n    let _firstFocusableChild: HTMLElement | null = null;\n\n    if (this._root.current) {\n      if (focusSelector) {\n        _firstFocusableChild = this._root.current.querySelector('.' + focusSelector);\n      }\n\n      // Fall back to first element if query selector did not match any elements.\n      if (!_firstFocusableChild) {\n        _firstFocusableChild = getNextElement(\n          this._root.current,\n          this._root.current.firstChild as HTMLElement,\n          false,\n          false,\n          false,\n          true,\n        );\n      }\n    }\n    if (_firstFocusableChild) {\n      this._focusAsync(_firstFocusableChild);\n    }\n  }\n\n  private _focusAsync(element: HTMLElement): void {\n    if (!this._isBumper(element)) {\n      focusAsync(element);\n    }\n  }\n\n  private _onRootFocus = (ev: React.FocusEvent<HTMLDivElement>) => {\n    if (this.props.onFocus) {\n      this.props.onFocus(ev);\n    }\n\n    this._hasFocus = true;\n  };\n\n  private _onRootBlur = (ev: React.FocusEvent<HTMLDivElement>) => {\n    if (this.props.onBlur) {\n      this.props.onBlur(ev);\n    }\n\n    let relatedTarget = ev.relatedTarget;\n    if (ev.relatedTarget === null) {\n      // In IE11, due to lack of support, event.relatedTarget is always\n      // null making every onBlur call to be \"outside\" of the ComboBox\n      // even when it's not. Using document.activeElement is another way\n      // for us to be able to get what the relatedTarget without relying\n      // on the event\n      relatedTarget = this._getDocument().activeElement as Element;\n    }\n\n    if (!elementContains(this._root.current, relatedTarget as HTMLElement)) {\n      this._hasFocus = false;\n    }\n  };\n\n  private _onFirstBumperFocus = () => {\n    this._onBumperFocus(true);\n  };\n\n  private _onLastBumperFocus = () => {\n    this._onBumperFocus(false);\n  };\n\n  private _onBumperFocus = (isFirstBumper: boolean) => {\n    if (this.props.disabled) {\n      return;\n    }\n\n    const currentBumper = (isFirstBumper === this._hasFocus\n      ? this._lastBumper.current\n      : this._firstBumper.current) as HTMLElement;\n\n    if (this._root.current) {\n      const nextFocusable =\n        isFirstBumper === this._hasFocus\n          ? getLastTabbable(this._root.current, currentBumper, true, false)\n          : getFirstTabbable(this._root.current, currentBumper, true, false);\n\n      if (nextFocusable) {\n        if (this._isBumper(nextFocusable)) {\n          // This can happen when FTZ contains no tabbable elements.\n          // focus will take care of finding a focusable element in FTZ.\n          this.focus();\n        } else {\n          nextFocusable.focus();\n        }\n      }\n    }\n  };\n\n  private _bringFocusIntoZone(): void {\n    const { elementToFocusOnDismiss, disabled = false, disableFirstFocus = false } = this.props;\n\n    if (disabled) {\n      return;\n    }\n\n    FocusTrapZone._focusStack.push(this);\n\n    this._previouslyFocusedElementOutsideTrapZone = elementToFocusOnDismiss\n      ? elementToFocusOnDismiss\n      : (this._getDocument().activeElement as HTMLElement);\n    if (!disableFirstFocus && !elementContains(this._root.current, this._previouslyFocusedElementOutsideTrapZone)) {\n      this.focus();\n    }\n  }\n\n  private _returnFocusToInitiator(): void {\n    const { ignoreExternalFocusing } = this.props;\n\n    FocusTrapZone._focusStack = FocusTrapZone._focusStack.filter((value: FocusTrapZone) => {\n      return this !== value;\n    });\n\n    const doc = this._getDocument();\n    const activeElement = doc.activeElement as HTMLElement;\n    if (\n      !ignoreExternalFocusing &&\n      this._previouslyFocusedElementOutsideTrapZone &&\n      typeof this._previouslyFocusedElementOutsideTrapZone.focus === 'function' &&\n      (elementContains(this._root.current, activeElement) || activeElement === doc.body)\n    ) {\n      this._focusAsync(this._previouslyFocusedElementOutsideTrapZone);\n    }\n  }\n\n  private _updateEventHandlers(newProps: IFocusTrapZoneProps): void {\n    const { isClickableOutsideFocusTrap = false, forceFocusInsideTrap = true } = newProps;\n\n    if (forceFocusInsideTrap && !this._disposeFocusHandler) {\n      this._disposeFocusHandler = on(window, 'focus', this._forceFocusInTrap, true);\n    } else if (!forceFocusInsideTrap && this._disposeFocusHandler) {\n      this._disposeFocusHandler();\n      this._disposeFocusHandler = undefined;\n    }\n\n    if (!isClickableOutsideFocusTrap && !this._disposeClickHandler) {\n      this._disposeClickHandler = on(window, 'click', this._forceClickInTrap, true);\n    } else if (isClickableOutsideFocusTrap && this._disposeClickHandler) {\n      this._disposeClickHandler();\n      this._disposeClickHandler = undefined;\n    }\n  }\n\n  private _onFocusCapture = (ev: React.FocusEvent<HTMLDivElement>) => {\n    if (this.props.onFocusCapture) {\n      this.props.onFocusCapture(ev);\n    }\n\n    if (ev.target !== ev.currentTarget && !this._isBumper(ev.target)) {\n      // every time focus changes within the trap zone, remember the focused element so that\n      // it can be restored if focus leaves the pane and returns via keystroke (i.e. via a call to this.focus(true))\n      this._previouslyFocusedElementInTrapZone = ev.target as HTMLElement;\n    }\n  };\n\n  private _isBumper(element: HTMLElement): boolean {\n    return element === this._firstBumper.current || element === this._lastBumper.current;\n  }\n\n  private _forceFocusInTrap = (ev: FocusEvent): void => {\n    if (this.props.disabled) {\n      return;\n    }\n\n    if (FocusTrapZone._focusStack.length && this === FocusTrapZone._focusStack[FocusTrapZone._focusStack.length - 1]) {\n      const focusedElement = this._getDocument().activeElement as HTMLElement;\n\n      if (!elementContains(this._root.current, focusedElement)) {\n        this.focus();\n        this._hasFocus = true; // set focus here since we stop event propagation\n        ev.preventDefault();\n        ev.stopPropagation();\n      }\n    }\n  };\n\n  private _forceClickInTrap = (ev: MouseEvent): void => {\n    if (this.props.disabled) {\n      return;\n    }\n\n    if (FocusTrapZone._focusStack.length && this === FocusTrapZone._focusStack[FocusTrapZone._focusStack.length - 1]) {\n      const clickedElement = ev.target as HTMLElement;\n\n      if (clickedElement && !elementContains(this._root.current, clickedElement)) {\n        this.focus();\n        this._hasFocus = true; // set focus here since we stop event propagation\n        ev.preventDefault();\n        ev.stopPropagation();\n      }\n    }\n  };\n\n  private _getDocument(): Document {\n    return getDocument(this._root.current)!;\n  }\n}\n","export interface ISelectableOption {\r\n  /**\r\n   * Arbitrary string associated with this option.\r\n   */\r\n  key: string | number;\r\n\r\n  /**\r\n   * ID attribute associated with this option\r\n   */\r\n  id?: string;\r\n\r\n  /**\r\n   * Text to render for this option\r\n   */\r\n  text: string;\r\n\r\n  /**\r\n   * Title attribute (built in tooltip) for a given option.\r\n   */\r\n  title?: string;\r\n\r\n  /**\r\n   * Text to render for this option\r\n   */\r\n  itemType?: SelectableOptionMenuItemType;\r\n\r\n  /**\r\n   * Index for this option\r\n   */\r\n  index?: number;\r\n\r\n  /**\r\n   * The aria label for the dropdown option. If not present, the `text` will be used.\r\n   */\r\n  ariaLabel?: string;\r\n\r\n  /** If option is selected. */\r\n  selected?: boolean;\r\n\r\n  /**\r\n   * Whether the option is disabled\r\n   * @defaultvalue false\r\n   */\r\n  disabled?: boolean;\r\n\r\n  /**\r\n   * Defines whether the option is hidden or not.\r\n   * @defaultvalue false\r\n   */\r\n  hidden?: boolean;\r\n\r\n  /**\r\n   * Data available to custom onRender functions.\r\n   */\r\n  data?: any;\r\n}\r\n\r\nexport enum SelectableOptionMenuItemType {\r\n  Normal = 0,\r\n  Divider = 1,\r\n  Header = 2,\r\n}\r\n","import * as React from 'react';\nimport {\n  getId,\n  classNamesFunction,\n  mergeAriaAttributeValues,\n  initializeComponentRef,\n  warnMutuallyExclusive,\n  FocusRects,\n} from '../../Utilities';\nimport { Icon } from '../../Icon';\nimport { ICheckbox, ICheckboxProps, ICheckboxStyleProps, ICheckboxStyles } from './Checkbox.types';\nimport { KeytipData } from '../../KeytipData';\n\nexport interface ICheckboxState {\n  /** Is true when Uncontrolled control is checked. */\n  isChecked?: boolean;\n  isIndeterminate?: boolean;\n}\n\nconst getClassNames = classNamesFunction<ICheckboxStyleProps, ICheckboxStyles>();\n\nexport class CheckboxBase extends React.Component<ICheckboxProps, ICheckboxState> implements ICheckbox {\n  public static defaultProps: ICheckboxProps = {\n    boxSide: 'start',\n  };\n\n  private _checkBox = React.createRef<HTMLInputElement>();\n  private _id: string;\n  private _classNames: { [key in keyof ICheckboxStyles]: string };\n\n  public static getDerivedStateFromProps(\n    nextProps: Readonly<ICheckboxProps>,\n    prevState: Readonly<ICheckboxState>,\n  ): ICheckboxState | null {\n    const stateUpdate: Partial<ICheckboxState> = {};\n    if (nextProps.indeterminate !== undefined) {\n      stateUpdate.isIndeterminate = !!nextProps.indeterminate;\n    }\n    if (nextProps.checked !== undefined) {\n      stateUpdate.isChecked = !!nextProps.checked;\n    }\n    return Object.keys(stateUpdate).length ? stateUpdate : null;\n  }\n\n  /**\n   * Initialize a new instance of the Checkbox\n   * @param props - Props for the component\n   * @param context - Context or initial state for the base component.\n   */\n  constructor(props: ICheckboxProps, context?: any) {\n    super(props, context);\n\n    initializeComponentRef(this);\n\n    if (process.env.NODE_ENV !== 'production') {\n      warnMutuallyExclusive('Checkbox', props, {\n        checked: 'defaultChecked',\n        indeterminate: 'defaultIndeterminate',\n      });\n    }\n\n    this._id = this.props.id || getId('checkbox-');\n    this.state = {\n      isChecked: !!(props.checked !== undefined ? props.checked : props.defaultChecked),\n      isIndeterminate: !!(props.indeterminate !== undefined ? props.indeterminate : props.defaultIndeterminate),\n    };\n  }\n\n  /**\n   * Render the Checkbox based on passed props\n   */\n  public render(): JSX.Element {\n    const {\n      className,\n      disabled,\n      inputProps,\n      name,\n      boxSide,\n      theme,\n      ariaLabel,\n      ariaLabelledBy,\n      ariaDescribedBy,\n      styles,\n      onRenderLabel = this._onRenderLabel,\n      checkmarkIconProps,\n      ariaPositionInSet,\n      ariaSetSize,\n      keytipProps,\n      title,\n      label,\n    } = this.props;\n\n    const { isChecked, isIndeterminate } = this.state;\n\n    this._classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      disabled,\n      indeterminate: isIndeterminate,\n      checked: isChecked,\n      reversed: boxSide !== 'start',\n      isUsingCustomLabelRender: onRenderLabel !== this._onRenderLabel,\n    });\n\n    return (\n      <KeytipData keytipProps={keytipProps} disabled={disabled}>\n        {(keytipAttributes: any): JSX.Element => (\n          <div className={this._classNames.root} title={title}>\n            <FocusRects />\n            <input\n              type=\"checkbox\"\n              {...inputProps}\n              data-ktp-execute-target={keytipAttributes['data-ktp-execute-target']}\n              checked={isChecked}\n              disabled={disabled}\n              className={this._classNames.input}\n              ref={this._checkBox}\n              name={name}\n              id={this._id}\n              title={title}\n              onChange={this._onChange}\n              onFocus={this._onFocus}\n              onBlur={this._onBlur}\n              aria-disabled={disabled}\n              aria-label={ariaLabel || label}\n              aria-labelledby={ariaLabelledBy}\n              aria-describedby={mergeAriaAttributeValues(ariaDescribedBy, keytipAttributes['aria-describedby'])}\n              aria-posinset={ariaPositionInSet}\n              aria-setsize={ariaSetSize}\n              aria-checked={isIndeterminate ? 'mixed' : isChecked ? 'true' : 'false'}\n            />\n            <label className={this._classNames.label} htmlFor={this._id}>\n              <div className={this._classNames.checkbox} data-ktp-target={keytipAttributes['data-ktp-target']}>\n                <Icon iconName=\"CheckMark\" {...checkmarkIconProps} className={this._classNames.checkmark} />\n              </div>\n              {onRenderLabel(this.props, this._onRenderLabel)}\n            </label>\n          </div>\n        )}\n      </KeytipData>\n    );\n  }\n\n  public get indeterminate(): boolean {\n    return !!this.state.isIndeterminate;\n  }\n\n  public get checked(): boolean {\n    return !!this.state.isChecked;\n  }\n\n  public focus(): void {\n    if (this._checkBox.current) {\n      this._checkBox.current.focus();\n    }\n  }\n\n  private _onFocus = (ev: React.FocusEvent<HTMLElement>): void => {\n    const { inputProps } = this.props;\n\n    if (inputProps && inputProps.onFocus) {\n      inputProps.onFocus(ev);\n    }\n  };\n\n  private _onBlur = (ev: React.FocusEvent<HTMLElement>): void => {\n    const { inputProps } = this.props;\n\n    if (inputProps && inputProps.onBlur) {\n      inputProps.onBlur(ev);\n    }\n  };\n\n  private _onChange = (ev: React.FormEvent<HTMLElement>): void => {\n    const { onChange } = this.props;\n    const { isChecked, isIndeterminate } = this.state;\n\n    if (!isIndeterminate) {\n      if (onChange) {\n        onChange(ev, !isChecked);\n      }\n      if (this.props.checked === undefined) {\n        this.setState({ isChecked: !isChecked });\n      }\n    } else {\n      // If indeterminate, clicking the checkbox *only* removes the indeterminate state (or if\n      // controlled, lets the consumer know to change it by calling onChange). It doesn't\n      // change the checked state.\n      if (onChange) {\n        onChange(ev, isChecked);\n      }\n      if (this.props.indeterminate === undefined) {\n        this.setState({ isIndeterminate: false });\n      }\n    }\n  };\n\n  private _onRenderLabel = (props: ICheckboxProps): JSX.Element | null => {\n    const { label, title } = props;\n\n    return label ? (\n      <span aria-hidden=\"true\" className={this._classNames.text} title={title}>\n        {label}\n      </span>\n    ) : null;\n  };\n}\n","import { ICheckboxStyleProps, ICheckboxStyles } from './Checkbox.types';\r\nimport { HighContrastSelector, getGlobalClassNames, IStyle } from '../../Styling';\r\nimport { IsFocusVisibleClassName } from '../../Utilities';\r\n\r\nconst GlobalClassNames = {\r\n  root: 'ms-Checkbox',\r\n  label: 'ms-Checkbox-label',\r\n  checkbox: 'ms-Checkbox-checkbox',\r\n  checkmark: 'ms-Checkbox-checkmark',\r\n  text: 'ms-Checkbox-text',\r\n};\r\n\r\nconst MS_CHECKBOX_LABEL_SIZE = '20px';\r\nconst MS_CHECKBOX_TRANSITION_DURATION = '200ms';\r\nconst MS_CHECKBOX_TRANSITION_TIMING = 'cubic-bezier(.4, 0, .23, 1)';\r\n\r\nexport const getStyles = (props: ICheckboxStyleProps): ICheckboxStyles => {\r\n  const { className, theme, reversed, checked, disabled, isUsingCustomLabelRender, indeterminate } = props;\r\n  const { semanticColors, effects, palette, fonts } = theme;\r\n\r\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\r\n\r\n  const checkmarkFontColor = semanticColors.inputForegroundChecked;\r\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.inputBorder\r\n  const checkmarkFontColorHovered = palette.neutralSecondary;\r\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.smallInputBorder\r\n  const checkboxBorderColor = palette.neutralPrimary;\r\n  const checkboxBorderIndeterminateColor = semanticColors.inputBackgroundChecked;\r\n  const checkboxBorderColorChecked = semanticColors.inputBackgroundChecked;\r\n  const checkboxBorderColorDisabled = semanticColors.disabledBodySubtext;\r\n  const checkboxBorderHoveredColor = semanticColors.inputBorderHovered;\r\n  const checkboxBorderIndeterminateHoveredColor = semanticColors.inputBackgroundCheckedHovered;\r\n  const checkboxBackgroundChecked = semanticColors.inputBackgroundChecked;\r\n  // TODO: after updating the semanticColors slots mapping the following 2 tokens need to be\r\n  // semanticColors.inputBackgroundCheckedHovered\r\n  const checkboxBackgroundCheckedHovered = semanticColors.inputBackgroundCheckedHovered;\r\n  const checkboxBorderColorCheckedHovered = semanticColors.inputBackgroundCheckedHovered;\r\n  const checkboxHoveredTextColor = semanticColors.inputTextHovered;\r\n  const checkboxBackgroundDisabledChecked = semanticColors.disabledBodySubtext;\r\n  const checkboxTextColor = semanticColors.bodyText;\r\n  const checkboxTextColorDisabled = semanticColors.disabledText;\r\n\r\n  const indeterminateDotStyles: IStyle = [\r\n    {\r\n      content: '\"\"',\r\n      borderRadius: effects.roundedCorner2,\r\n      position: 'absolute',\r\n      width: 10,\r\n      height: 10,\r\n      top: 4,\r\n      left: 4,\r\n      boxSizing: 'border-box',\r\n      borderWidth: 5,\r\n      borderStyle: 'solid',\r\n      borderColor: disabled ? checkboxBorderColorDisabled : checkboxBorderIndeterminateColor,\r\n      transitionProperty: 'border-width, border, border-color',\r\n      transitionDuration: MS_CHECKBOX_TRANSITION_DURATION,\r\n      transitionTimingFunction: MS_CHECKBOX_TRANSITION_TIMING,\r\n    },\r\n  ];\r\n\r\n  return {\r\n    root: [\r\n      classNames.root,\r\n      {\r\n        position: 'relative',\r\n        display: 'flex',\r\n      },\r\n      reversed && 'reversed',\r\n      checked && 'is-checked',\r\n      !disabled && 'is-enabled',\r\n      disabled && 'is-disabled',\r\n      !disabled && [\r\n        !checked && {\r\n          selectors: {\r\n            [`:hover .${classNames.checkbox}`]: {\r\n              borderColor: checkboxBorderHoveredColor,\r\n              selectors: {\r\n                [HighContrastSelector]: {\r\n                  borderColor: 'Highlight',\r\n                },\r\n              },\r\n            },\r\n            [`:focus .${classNames.checkbox}`]: { borderColor: checkboxBorderHoveredColor },\r\n            [`:hover .${classNames.checkmark}`]: {\r\n              color: checkmarkFontColorHovered,\r\n              opacity: '1',\r\n              selectors: {\r\n                [HighContrastSelector]: {\r\n                  color: 'Highlight',\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n        checked &&\r\n          !indeterminate && {\r\n            selectors: {\r\n              [`:hover .${classNames.checkbox}`]: {\r\n                background: checkboxBackgroundCheckedHovered,\r\n                borderColor: checkboxBorderColorCheckedHovered,\r\n              },\r\n              [`:focus .${classNames.checkbox}`]: {\r\n                background: checkboxBackgroundCheckedHovered,\r\n                borderColor: checkboxBorderColorCheckedHovered,\r\n              },\r\n              [`.${classNames.checkbox}`]: {\r\n                background: checkboxBorderColorChecked,\r\n                borderColor: checkboxBorderColorChecked,\r\n              },\r\n              [HighContrastSelector]: {\r\n                selectors: {\r\n                  [`:hover .${classNames.checkbox}`]: {\r\n                    background: 'Window',\r\n                    borderColor: 'Highlight',\r\n                  },\r\n                  [`:focus .${classNames.checkbox}`]: {\r\n                    background: 'Highlight',\r\n                  },\r\n                  [`:focus:hover .${classNames.checkbox}`]: {\r\n                    background: 'Highlight',\r\n                  },\r\n                  [`:focus:hover .${classNames.checkmark}`]: {\r\n                    color: 'Window',\r\n                  },\r\n                  [`:hover .${classNames.checkmark}`]: {\r\n                    color: 'Highlight',\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          },\r\n        indeterminate && {\r\n          selectors: {\r\n            [`:hover .${classNames.checkbox}, :hover .${classNames.checkbox}:after`]: {\r\n              borderColor: checkboxBorderIndeterminateHoveredColor,\r\n            },\r\n            [`:focus .${classNames.checkbox}`]: {\r\n              borderColor: checkboxBorderIndeterminateHoveredColor,\r\n            },\r\n            [`:hover .${classNames.checkmark}`]: {\r\n              opacity: '0',\r\n            },\r\n          },\r\n        },\r\n        {\r\n          selectors: {\r\n            [`:hover .${classNames.text}`]: { color: checkboxHoveredTextColor },\r\n            [`:focus .${classNames.text}`]: { color: checkboxHoveredTextColor },\r\n          },\r\n        },\r\n      ],\r\n      className,\r\n    ],\r\n    input: {\r\n      position: 'absolute',\r\n      background: 'none',\r\n\r\n      opacity: 0,\r\n      selectors: {\r\n        [`.${IsFocusVisibleClassName} &:focus + label::before`]: {\r\n          outline: '1px solid ' + theme.palette.neutralSecondary,\r\n          outlineOffset: '2px',\r\n          selectors: {\r\n            [HighContrastSelector]: {\r\n              outline: '1px solid ActiveBorder',\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n    label: [\r\n      classNames.label,\r\n      theme.fonts.medium,\r\n      {\r\n        display: 'flex',\r\n        alignItems: isUsingCustomLabelRender ? 'center' : 'flex-start',\r\n        cursor: disabled ? 'default' : 'pointer',\r\n        position: 'relative',\r\n        userSelect: 'none',\r\n        textAlign: 'left',\r\n      },\r\n      reversed && {\r\n        flexDirection: 'row-reverse',\r\n        justifyContent: 'flex-end',\r\n      },\r\n      {\r\n        selectors: {\r\n          '&::before': {\r\n            position: 'absolute',\r\n            left: 0,\r\n            right: 0,\r\n            top: 0,\r\n            bottom: 0,\r\n            content: '\"\"',\r\n            pointerEvents: 'none',\r\n          },\r\n        },\r\n      },\r\n    ],\r\n    checkbox: [\r\n      classNames.checkbox,\r\n      {\r\n        position: 'relative',\r\n        display: 'flex',\r\n        flexShrink: 0,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        height: MS_CHECKBOX_LABEL_SIZE,\r\n        width: MS_CHECKBOX_LABEL_SIZE,\r\n        border: `1px solid ${checkboxBorderColor}`,\r\n        borderRadius: effects.roundedCorner2,\r\n        boxSizing: 'border-box',\r\n        transitionProperty: 'background, border, border-color',\r\n        transitionDuration: MS_CHECKBOX_TRANSITION_DURATION,\r\n        transitionTimingFunction: MS_CHECKBOX_TRANSITION_TIMING,\r\n\r\n        /* in case the icon is bigger than the box */\r\n        overflow: 'hidden',\r\n        selectors: {\r\n          ':after': indeterminate ? indeterminateDotStyles : null,\r\n        },\r\n      },\r\n      indeterminate && {\r\n        borderColor: checkboxBorderIndeterminateColor,\r\n      },\r\n      !reversed\r\n        ? // This margin on the checkbox is for backwards compat. Notably it has the effect where a customRender\r\n          // is used, there will be only a 4px margin from checkbox to label. The label by default would have\r\n          // another 4px margin for a total of 8px margin between checkbox and label. We don't combine the two\r\n          // (and move it into the text) to not incur a breaking change for everyone using custom render atm.\r\n          {\r\n            marginRight: 4,\r\n          }\r\n        : {\r\n            marginLeft: 4,\r\n          },\r\n      !disabled &&\r\n        !indeterminate &&\r\n        checked && {\r\n          background: checkboxBackgroundChecked,\r\n          borderColor: checkboxBorderColorChecked,\r\n          selectors: {\r\n            [HighContrastSelector]: {\r\n              background: 'Highlight',\r\n              borderColor: 'Highlight',\r\n            },\r\n          },\r\n        },\r\n      disabled && {\r\n        borderColor: checkboxBorderColorDisabled,\r\n        selectors: {\r\n          [HighContrastSelector]: {\r\n            borderColor: 'InactiveBorder',\r\n          },\r\n        },\r\n      },\r\n      checked &&\r\n        disabled && {\r\n          background: checkboxBackgroundDisabledChecked,\r\n          borderColor: checkboxBorderColorDisabled,\r\n        },\r\n    ],\r\n    checkmark: [\r\n      classNames.checkmark,\r\n      {\r\n        opacity: checked ? '1' : '0',\r\n        color: checkmarkFontColor,\r\n        selectors: {\r\n          [HighContrastSelector]: {\r\n            color: disabled ? 'InactiveBorder' : 'Window',\r\n            MsHighContrastAdjust: 'none',\r\n          },\r\n        },\r\n      },\r\n    ],\r\n    text: [\r\n      classNames.text,\r\n      {\r\n        color: disabled ? checkboxTextColorDisabled : checkboxTextColor,\r\n        fontSize: fonts.medium.fontSize,\r\n        lineHeight: '20px',\r\n      },\r\n      !reversed\r\n        ? {\r\n            marginLeft: 4,\r\n          }\r\n        : {\r\n            marginRight: 4,\r\n          },\r\n      disabled && {\r\n        selectors: {\r\n          [HighContrastSelector]: {\r\n            // backwards compat for the color of the text when the checkbox was rendered\r\n            // using a Button.\r\n            color: 'InactiveBorder',\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  };\r\n};\r\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { CheckboxBase } from './Checkbox.base';\nimport { getStyles } from './Checkbox.styles';\nimport { ICheckboxProps, ICheckboxStyleProps, ICheckboxStyles } from './Checkbox.types';\n\nexport const Checkbox: React.FunctionComponent<ICheckboxProps> = styled<\n  ICheckboxProps,\n  ICheckboxStyleProps,\n  ICheckboxStyles\n>(CheckboxBase, getStyles, undefined, { scope: 'Checkbox' });\n","import { IDropdownOption, DropdownMenuItemType } from '../Dropdown.types';\n\n/**\n * A utility class to cache size and position in cache.\n *\n * Dropdown options has non-selectable display types. It is therefore not cheap to determine\n * the total number of actual selectable options as well as the position an option is in the\n * list of options - O(n) cost for each lookup.\n *\n * Given that we potentially have to make this determination on every single render pass, this\n * cache should provide a little bit of relief.\n */\nexport class DropdownSizePosCache {\n  private _displayOnlyOptionsCache: number[];\n  private _size = 0;\n\n  /**\n   * Invalidates the cache and recalculate the size of selectable options.\n   */\n  public updateOptions(options: IDropdownOption[]) {\n    const displayOnlyOptionsCache = [];\n    let size = 0;\n    for (let i = 0; i < options.length; i++) {\n      if (options[i].itemType === DropdownMenuItemType.Divider || options[i].itemType === DropdownMenuItemType.Header) {\n        displayOnlyOptionsCache.push(i);\n      } else if (!options[i].hidden) {\n        size++;\n      }\n    }\n\n    this._size = size;\n    this._displayOnlyOptionsCache = displayOnlyOptionsCache;\n  }\n\n  /**\n   * The size of all the selectable options.\n   */\n  public get optionSetSize(): number {\n    return this._size;\n  }\n\n  /**\n   * Returns the position of this option element relative to the full set of selectable option elements.\n   * Note: the first selectable element is position 1 in the set.\n   * @param index The raw index of the option element.\n   */\n  public positionInSet(index: number | undefined): number | undefined {\n    if (index === undefined) {\n      return undefined;\n    }\n\n    // we could possibly memoize this too but this should be good enough, most of the time (the expectation is that\n    // when you have a lot of options, the selectable options will heavily dominate over the non-selectable options.\n    let offset = 0;\n    while (index > this._displayOnlyOptionsCache[offset]) {\n      offset++;\n    }\n\n    if (this._displayOnlyOptionsCache[offset] === index) {\n      throw new Error(`Unexpected: Option at index ${index} is not a selectable element.`);\n    }\n\n    return index - offset + 1;\n  }\n}\n","import * as React from 'react';\nimport { IFocusTrapZoneProps } from '../../FocusTrapZone';\nimport { ILayerProps } from '../../Layer';\nimport { IOverlayProps } from '../../Overlay';\nimport { IStyle, ITheme } from '../../Styling';\nimport { IRefObject, IRenderFunction, IStyleFunctionOrObject } from '../../Utilities';\nimport { IButtonStyles } from '../Button/Button.types';\nimport { PanelBase } from './Panel.base';\n\n/**\n * {@docCategory Panel}\n */\nexport interface IPanel {\n  /**\n   * Forces the panel to open.\n   */\n  open: () => void;\n\n  /**\n   * Forces the panel to dismiss.\n   */\n  dismiss: (ev?: React.KeyboardEvent<HTMLElement>) => void;\n}\n\n/**\n * {@docCategory Panel}\n */\nexport interface IPanelProps extends React.HTMLAttributes<PanelBase> {\n  /**\n   * Optional callback to access the IPanel interface. Use this instead of ref for accessing\n   * the public methods and properties of the component.\n   */\n  componentRef?: IRefObject<IPanel>;\n\n  /**\n   * Whether the panel is displayed.\n   * If true, will cause panel to stay open even if dismissed.\n   * If false, will cause panel to stay hidden.\n   * If undefined, will allow the panel to control its own visility through open/dismiss methods.\n   * @defaultvalue undefined\n   */\n  isOpen?: boolean;\n\n  /**\n   * Has the close button visible.\n   * @defaultvalue true\n   */\n  hasCloseButton?: boolean;\n\n  /**\n   * Whether the panel can be light dismissed.\n   * @defaultvalue false\n   */\n  isLightDismiss?: boolean;\n\n  /**\n   * Whether the panel is hidden on dismiss, instead of destroyed in the DOM.\n   * Protects the contents from being destroyed when the panel is dismissed.\n   * @defaultvalue false\n   */\n  isHiddenOnDismiss?: boolean;\n\n  /**\n   * Whether the panel uses a modal overlay or not\n   * @defaultvalue true\n   */\n  isBlocking?: boolean;\n\n  /**\n   * Determines if content should stretch to fill available space putting footer at the bottom of the page\n   * @defaultvalue false\n   */\n  isFooterAtBottom?: boolean;\n\n  /**\n   * Header text for the Panel.\n   * @defaultvalue \"\"\n   */\n  headerText?: string;\n\n  /**\n   * The props for header text container.\n   */\n  headerTextProps?: React.HTMLAttributes<HTMLDivElement>;\n\n  /**\n   * A callback function for when the Panel is opened, before the animation completes.\n   */\n  onOpen?: () => void;\n\n  /**\n   * A callback function for when the Panel is opened, after the animation completes.\n   */\n  onOpened?: () => void;\n\n  /**\n   * A callback function for when the panel is closed, before the animation completes.\n   * If the panel should NOT be dismissed based on some keyboard event, then simply call ev.preventDefault() on it\n   */\n  onDismiss?: (ev?: React.SyntheticEvent<HTMLElement>) => void;\n\n  /**\n   * A callback function which is called **after** the Panel is dismissed and the animation is complete.\n   * (If you need to update the Panel's `isOpen` prop in response to a dismiss event, use `onDismiss` instead.)\n   */\n  onDismissed?: () => void;\n\n  /**\n   * Call to provide customized styling that will layer on top of the variant rules.\n   */\n  styles?: IStyleFunctionOrObject<IPanelStyleProps, IPanelStyles>;\n\n  /**\n   * Theme provided by High-Order Component.\n   */\n  theme?: ITheme;\n\n  /**\n   * Additional css class to apply to the Panel\n   * @defaultvalue undefined\n   */\n  className?: string;\n\n  /**\n   * Type of the panel.\n   * @defaultvalue PanelType.smallFixedFar\n   */\n  type?: PanelType;\n\n  /**\n   * Custom panel width, used only when `type` is set to `PanelType.custom`.\n   */\n  customWidth?: string;\n\n  /**\n   * Aria label on close button\n   */\n  closeButtonAriaLabel?: string;\n\n  /**\n   * Optional parameter to provider the class name for header text\n   */\n  headerClassName?: string;\n\n  /**\n   * Sets the HTMLElement to focus on when exiting the FocusTrapZone.\n   * @defaultvalue The element.target that triggered the Panel.\n   */\n  elementToFocusOnDismiss?: HTMLElement;\n\n  /**\n   * Indicates if this Panel will ignore keeping track of HTMLElement that activated the Zone.\n   * Deprecated, use `focusTrapZoneProps`.\n   * @defaultvalue false\n   * @deprecated Use `focusTrapZoneProps`.\n   */\n  ignoreExternalFocusing?: boolean;\n\n  /**\n   * Indicates whether Panel should force focus inside the focus trap zone.\n   * If not explicitly specified, behavior aligns with FocusTrapZone's default behavior.\n   * Deprecated, use `focusTrapZoneProps`.\n   * @deprecated Use `focusTrapZoneProps`.\n   */\n  forceFocusInsideTrap?: boolean;\n\n  /**\n   * Indicates the selector for first focusable item.\n   * Deprecated, use `focusTrapZoneProps`.\n   * @deprecated Use `focusTrapZoneProps`.\n   */\n  firstFocusableSelector?: string;\n\n  /**\n   * Optional props to pass to the FocusTrapZone component to manage focus in the panel.\n   */\n  focusTrapZoneProps?: IFocusTrapZoneProps;\n\n  /**\n   * Optional props to pass to the Layer component hosting the panel.\n   */\n  layerProps?: ILayerProps;\n\n  /**\n   * Optional props to pass to the Overlay component that the panel uses.\n   */\n  overlayProps?: IOverlayProps;\n\n  /**\n   * Optional custom function to handle clicks outside the panel in lightdismiss mode\n   */\n  onLightDismissClick?: () => void;\n\n  /**\n   * Optional custom function to handle clicks outside this component\n   */\n  onOuterClick?: () => void;\n\n  /**\n   * Optional custom renderer navigation region. Replaces the region that contains the close button.\n   */\n  onRenderNavigation?: IRenderFunction<IPanelProps>;\n\n  /**\n   * Optional custom renderer for content in the navigation region. Replaces current close button.\n   */\n  onRenderNavigationContent?: IRenderFunction<IPanelProps>;\n\n  /**\n   * Optional custom renderer for header region. Replaces current title\n   */\n  onRenderHeader?: IPanelHeaderRenderer;\n\n  /**\n   * Optional custom renderer for body region. Replaces any children passed into the component.\n   */\n  onRenderBody?: IRenderFunction<IPanelProps>;\n\n  /**\n   * Optional custom renderer for footer region. Replaces sticky footer.\n   */\n  onRenderFooter?: IRenderFunction<IPanelProps>;\n\n  /**\n   * Custom renderer for content in the sticky footer\n   */\n  onRenderFooterContent?: IRenderFunction<IPanelProps>;\n\n  /**\n   * Deprecated property. Serves no function.\n   * @deprecated Serves no function.\n   */\n  componentId?: string;\n\n  /**\n   * Allow body scroll on content and overlay on touch devices. Changing after mounting has no effect.\n   * @defaultvalue false\n   */\n  allowTouchBodyScroll?: boolean;\n}\n\n/**\n * Renderer function which takes an additional parameter, the ID to use for the element containing\n * the panel's title. This allows the `aria-labelledby` for the panel popup to work correctly.\n * Note that if `headerTextId` is provided, it **must** be used on an element, or screen readers\n * will be confused by the reference to a nonexistent ID.\n * {@docCategory Panel}\n */\nexport interface IPanelHeaderRenderer extends IRenderFunction<IPanelProps> {\n  /**\n   * @param props - Props given to the panel\n   * @param defaultRender - Default header renderer. If using this renderer in code that does not\n   * assign `headerTextId` to an element elsewhere, it **must** be passed to this function.\n   * @param headerTextId - If provided, this **must** be used as the ID of an element containing the\n   * panel's title, because the panel popup uses this ID as its aria-labelledby.\n   */\n  (props?: IPanelProps, defaultRender?: IPanelHeaderRenderer, headerTextId?: string | undefined): JSX.Element | null;\n}\n\n/**\n * {@docCategory Panel}\n */\nexport enum PanelType {\n  /**\n   * Renders the Panel with a `fluid` (full screen) width.\n   * Recommended for use on small screen breakpoints.\n   * - Small (320-479): full screen width, 16px left/right padding\n   * - Medium (480-639): full screen width, 16px left/right padding\n   * - Large (640-1023): full screen width, 32px left/right padding\n   * - XLarge (1024-1365): full screen width, 32px left/right padding\n   * - XXLarge (1366-up): full screen width, 40px left/right padding\n   */\n  smallFluid = 0,\n\n  /**\n   * Renders the Panel in fixed-width `small` size, anchored to the far side (right in LTR mode).\n   * - Small (320-479): adapts to `PanelType.smallFluid` at this breakpoint\n   * - Medium (480-639): 340px width, 16px left/right padding\n   * - Large (640-1023): 340px width, 32px left/right padding\n   * - XLarge (1024-1365): 340px width, 32px left/right padding\n   * - XXLarge (1366-up): 340px width, 40px left/right padding\n   */\n  smallFixedFar = 1,\n\n  /**\n   * Renders the Panel in fixed-width `small` size, anchored to the near side (left in LTR mode).\n   * - Small (320-479): 272px width, 16px left/right padding\n   * - Medium (480-639): 272px width, 16px left/right padding\n   * - Large (640-1023): 272px width, 32px left/right padding\n   * - XLarge (1024-1365): 272px width, 32px left/right padding\n   * - XXLarge (1366-up): 272px width, 40px left/right padding\n   */\n  smallFixedNear = 2,\n\n  /**\n   * Renders the Panel in `medium` size, anchored to the far side (right in LTR mode).\n   * - Small (320-479): adapts to `PanelType.smallFluid` at this breakpoint\n   * - Medium (480-639): adapts to `PanelType.smallFixedFar` at this breakpoint\n   * - Large (640-1023): 592px width, 32px left/right padding\n   * - XLarge (1024-1365): 644px width, 32px left/right padding\n   * - XXLarge (1366-up): 644px width, 40px left/right padding\n   */\n  medium = 3,\n\n  /**\n   * Renders the Panel in `large` size, anchored to the far side (right in LTR mode).\n   * - Small (320-479): adapts to `PanelType.smallFluid` at this breakpoint\n   * - Medium (480-639):  adapts to `PanelType.smallFixedFar` at this breakpoint\n   * - Large (640-1023): adapts to `PanelType.medium` at this breakpoint\n   * - XLarge (1024-1365): 48px fixed left margin, fluid width, 32px left/right padding\n   * - XXLarge (1366-up): 428px fixed left margin, fluid width, 40px left/right padding\n   */\n  large = 4,\n\n  /**\n   * Renders the Panel in `large` size, anchored to the far side (right in LTR mode), with a fixed width at\n   * XX-Large breakpoint.\n   * - Small (320-479): adapts to `PanelType.smallFluid` at this breakpoint\n   * - Medium (480-639): adapts to `PanelType.smallFixedFar` at this breakpoint\n   * - Large (640-1023): adapts to `PanelType.medium` at this breakpoint\n   * - XLarge (1024-1365): 48px fixed left margin, fluid width, 32px left/right padding\n   * - XXLarge (1366-up): 940px width, 40px left/right padding\n   */\n  largeFixed = 5,\n\n  /**\n   * Renders the Panel in `extra large` size, anchored to the far side (right in LTR mode).\n   * - Small (320-479): adapts to `PanelType.smallFluid` at this breakpoint\n   * - Medium (480-639): adapts to `PanelType.smallFixedFar` at this breakpoint\n   * - Large (640-1023): adapts to `PanelType.medium` at this breakpoint\n   * - XLarge (1024-1365): adapts to `PanelType.large` at this breakpoint\n   * - XXLarge (1366-1919): 176px fixed left margin, fluid width, 40px left/right padding\n   * - XXXLarge (1920-up): 176px fixed left margin, fluid width, 40px left/right padding\n   */\n  extraLarge = 6,\n\n  /**\n   * Renders the Panel in `custom` size using `customWidth`, anchored to the far side (right in LTR mode).\n   * - Has a fixed width provided by the `customWidth` prop\n   * - When screen width reaches the `customWidth` value it will behave like a fluid width Panel\n   * taking up 100% of the viewport width\n   */\n  custom = 7,\n\n  /**\n   * Renders the Panel in `custom` size using `customWidth`, anchored to the near side (left in LTR mode).\n   * - Has a fixed width provided by the `customWidth` prop\n   * - When screen width reaches the `customWidth` value it will behave like a fluid width Panel\n   * taking up 100% of the viewport width\n   */\n  customNear = 8,\n}\n\n/**\n * {@docCategory Panel}\n */\nexport interface IPanelStyleProps {\n  /**\n   * Theme provided by High-Order Component.\n   */\n  theme: ITheme;\n\n  /**\n   * Accept custom classNames\n   */\n  className?: string;\n\n  /**\n   * Is Panel open\n   */\n  isOpen?: boolean;\n\n  /**\n   * Is animation currently running\n   */\n  isAnimating?: boolean;\n\n  /**\n   * Is panel on right side\n   */\n  isOnRightSide?: boolean;\n\n  /**\n   * Is panel hidden on dismiss\n   */\n  isHiddenOnDismiss?: boolean;\n\n  /**\n   * Classname for FocusTrapZone element\n   */\n  focusTrapZoneClassName?: string;\n\n  /**\n   * Determines if content should stretch to fill available space putting footer at the bottom of the page\n   */\n  isFooterAtBottom?: boolean;\n\n  /**\n   * Based on state value setting footer to sticky or not\n   */\n  isFooterSticky?: boolean;\n\n  /**\n   * Panel has close button\n   */\n  hasCloseButton?: boolean;\n\n  /**\n   * Type of the panel.\n   */\n  type?: PanelType;\n\n  /**\n   * Optional parameter to provider the class name for header text\n   */\n  headerClassName?: string;\n\n  /**\n   * Determines where the header is rendered based on whether the user\n   * has passed in a custom onRenderNavigation or onRenderNavigationContent render callback\n   */\n  hasCustomNavigation?: boolean;\n}\n\nexport interface IPanelSubComponentStyles {\n  /**\n   * Styling for close button child component.\n   */\n  closeButton: Partial<IButtonStyles>;\n}\n\n/**\n * {@docCategory Panel}\n */\nexport interface IPanelStyles {\n  /**\n   * Style for the root element.\n   */\n  root: IStyle;\n\n  /**\n   * Style for the overlay element.\n   */\n  overlay: IStyle;\n\n  /**\n   * Style for the hidden element.\n   */\n  hiddenPanel: IStyle;\n\n  /**\n   * Style for the main section element.\n   */\n  main: IStyle;\n\n  /**\n   * Style for the navigation container element.\n   */\n  commands: IStyle;\n\n  /**\n   * Style for the Body and Footer container element.\n   */\n  contentInner: IStyle;\n\n  /**\n   * Style for the scrollable content area container element.\n   */\n  scrollableContent: IStyle;\n\n  /**\n   * Style for the close button container element.\n   */\n  navigation: IStyle;\n\n  /**\n   * Style for the close button IconButton element.\n   * @deprecated Use `subComponentStyles.closeButton` instead.\n   */\n  closeButton?: IStyle;\n\n  /**\n   * Style for the header container div element.\n   */\n  header: IStyle;\n\n  /**\n   * Style for the header text div element.\n   */\n  headerText: IStyle;\n\n  /**\n   * Style for the body div element.\n   */\n  content: IStyle;\n\n  /**\n   * Style for the footer div element.\n   */\n  footer: IStyle;\n\n  /**\n   * Style for the inner footer div element.\n   */\n  footerInner: IStyle;\n\n  /**\n   * Styling for subcomponents.\n   */\n  subComponentStyles: IPanelSubComponentStyles;\n}\n","import * as React from 'react';\nimport {\n  classNamesFunction,\n  getNativeProps,\n  divProperties,\n  enableBodyScroll,\n  disableBodyScroll,\n  initializeComponentRef,\n} from '../../Utilities';\nimport { IOverlayProps, IOverlayStyleProps, IOverlayStyles } from './Overlay.types';\n\nconst getClassNames = classNamesFunction<IOverlayStyleProps, IOverlayStyles>();\n\nexport class OverlayBase extends React.Component<IOverlayProps, {}> {\n  private _allowTouchBodyScroll: boolean;\n\n  constructor(props: IOverlayProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    const { allowTouchBodyScroll = false } = this.props;\n    this._allowTouchBodyScroll = allowTouchBodyScroll;\n  }\n\n  public componentDidMount(): void {\n    !this._allowTouchBodyScroll && disableBodyScroll();\n  }\n\n  public componentWillUnmount(): void {\n    !this._allowTouchBodyScroll && enableBodyScroll();\n  }\n\n  public render(): JSX.Element {\n    const { isDarkThemed: isDark, className, theme, styles } = this.props;\n\n    const divProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(this.props, divProperties);\n\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      isDark,\n    });\n\n    return <div {...divProps} className={classNames.root} />;\n  }\n}\n","import { IOverlayStyleProps, IOverlayStyles } from './Overlay.types';\nimport { HighContrastSelector, getGlobalClassNames } from '../../Styling';\n\nconst GlobalClassNames = {\n  root: 'ms-Overlay',\n  rootDark: 'ms-Overlay--dark',\n};\n\nexport const getStyles = (props: IOverlayStyleProps): IOverlayStyles => {\n  const { className, theme, isNone, isDark } = props;\n\n  const { palette } = theme;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      {\n        backgroundColor: palette.whiteTranslucent40,\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n        position: 'absolute',\n\n        selectors: {\n          [HighContrastSelector]: {\n            border: '1px solid WindowText',\n            opacity: 0,\n          },\n        },\n      },\n\n      isNone && {\n        visibility: 'hidden',\n      },\n\n      isDark && [\n        classNames.rootDark,\n        {\n          backgroundColor: palette.blackTranslucent40,\n        },\n      ],\n\n      className,\n    ],\n  };\n};\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { IOverlayProps, IOverlayStyleProps, IOverlayStyles } from './Overlay.types';\nimport { OverlayBase } from './Overlay.base';\nimport { getStyles } from './Overlay.styles';\n\nexport const Overlay: React.FunctionComponent<IOverlayProps> = styled<\n  IOverlayProps,\n  IOverlayStyleProps,\n  IOverlayStyles\n>(OverlayBase, getStyles, undefined, {\n  scope: 'Overlay',\n});\n","import * as React from 'react';\nimport { IconButton } from '../../Button';\nimport { Layer } from '../../Layer';\nimport { Overlay } from '../../Overlay';\nimport { Popup } from '../../Popup';\nimport { IProcessedStyleSet } from '../../Styling';\nimport {\n  allowScrollOnElement,\n  allowOverscrollOnElement,\n  classNamesFunction,\n  divProperties,\n  elementContains,\n  getId,\n  getNativeProps,\n  getRTL,\n  css,\n  warnDeprecations,\n  Async,\n  EventGroup,\n  initializeComponentRef,\n} from '../../Utilities';\nimport { FocusTrapZone } from '../FocusTrapZone/index';\nimport { IPanel, IPanelProps, IPanelStyleProps, IPanelStyles, PanelType } from './Panel.types';\n\nconst getClassNames = classNamesFunction<IPanelStyleProps, IPanelStyles>();\nconst COMPONENT_NAME = 'Panel';\n\nenum PanelVisibilityState {\n  closed,\n  animatingOpen,\n  open,\n  animatingClosed,\n}\n\ninterface IPanelState {\n  isFooterSticky?: boolean;\n  id?: string;\n  visibility: PanelVisibilityState;\n}\n\nexport class PanelBase extends React.Component<IPanelProps, IPanelState> implements IPanel {\n  public static defaultProps: IPanelProps = {\n    isHiddenOnDismiss: false,\n    isOpen: undefined,\n    isBlocking: true,\n    hasCloseButton: true,\n    type: PanelType.smallFixedFar,\n  };\n\n  private _async: Async;\n  private _events: EventGroup;\n  private _panel = React.createRef<HTMLDivElement>();\n  private _classNames: IProcessedStyleSet<IPanelStyles>;\n  private _scrollableContent: HTMLDivElement | null;\n  private _animationCallback: number | null = null;\n  private _hasCustomNavigation: boolean = !!(this.props.onRenderNavigation || this.props.onRenderNavigationContent);\n  private _headerTextId: string | undefined;\n  private _allowTouchBodyScroll: boolean;\n\n  public static getDerivedStateFromProps(\n    nextProps: Readonly<IPanelProps>,\n    prevState: Readonly<IPanelState>,\n  ): Partial<IPanelState> | null {\n    if (nextProps.isOpen === undefined) {\n      return null; // no state update\n    }\n    if (\n      nextProps.isOpen &&\n      (prevState.visibility === PanelVisibilityState.closed ||\n        prevState.visibility === PanelVisibilityState.animatingClosed)\n    ) {\n      return { visibility: PanelVisibilityState.animatingOpen };\n    }\n    if (\n      !nextProps.isOpen &&\n      (prevState.visibility === PanelVisibilityState.open ||\n        prevState.visibility === PanelVisibilityState.animatingOpen)\n    ) {\n      return { visibility: PanelVisibilityState.animatingClosed };\n    }\n    return null;\n  }\n\n  constructor(props: IPanelProps) {\n    super(props);\n\n    const { allowTouchBodyScroll = false } = this.props;\n    this._allowTouchBodyScroll = allowTouchBodyScroll;\n\n    this._async = new Async(this);\n    this._events = new EventGroup(this);\n    initializeComponentRef(this);\n\n    warnDeprecations(COMPONENT_NAME, props, {\n      ignoreExternalFocusing: 'focusTrapZoneProps',\n      forceFocusInsideTrap: 'focusTrapZoneProps',\n      firstFocusableSelector: 'focusTrapZoneProps',\n    });\n\n    this.state = {\n      isFooterSticky: false,\n      // intentionally ignore props so animation takes place during componentDidMount\n      visibility: PanelVisibilityState.closed,\n      id: getId('Panel'),\n    };\n  }\n\n  public componentDidMount(): void {\n    this._events.on(window, 'resize', this._updateFooterPosition);\n\n    if (this._shouldListenForOuterClick(this.props)) {\n      this._events.on(document.body, 'mousedown', this._dismissOnOuterClick, true);\n    }\n\n    if (this.props.isOpen) {\n      this.setState({ visibility: PanelVisibilityState.animatingOpen });\n    }\n  }\n\n  public componentDidUpdate(previousProps: IPanelProps, previousState: IPanelState): void {\n    const shouldListenOnOuterClick = this._shouldListenForOuterClick(this.props);\n    const previousShouldListenOnOuterClick = this._shouldListenForOuterClick(previousProps);\n\n    if (this.state.visibility !== previousState.visibility) {\n      this._clearExistingAnimationTimer();\n      if (this.state.visibility === PanelVisibilityState.animatingOpen) {\n        this._animateTo(PanelVisibilityState.open);\n      } else if (this.state.visibility === PanelVisibilityState.animatingClosed) {\n        this._animateTo(PanelVisibilityState.closed);\n      }\n    }\n\n    if (shouldListenOnOuterClick && !previousShouldListenOnOuterClick) {\n      this._events.on(document.body, 'mousedown', this._dismissOnOuterClick, true);\n    } else if (!shouldListenOnOuterClick && previousShouldListenOnOuterClick) {\n      this._events.off(document.body, 'mousedown', this._dismissOnOuterClick, true);\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this._async.dispose();\n    this._events.dispose();\n  }\n\n  public render(): JSX.Element | null {\n    const {\n      className = '',\n      elementToFocusOnDismiss,\n      // tslint:disable:deprecation\n      firstFocusableSelector,\n      focusTrapZoneProps,\n      forceFocusInsideTrap,\n      hasCloseButton,\n      headerText,\n      headerClassName = '',\n      ignoreExternalFocusing,\n      // tslint:enable:deprecation\n      isBlocking,\n      isFooterAtBottom,\n      isLightDismiss,\n      isHiddenOnDismiss,\n      layerProps,\n      overlayProps,\n      type,\n      styles,\n      theme,\n      customWidth,\n      onLightDismissClick = this._onPanelClick,\n      onRenderNavigation = this._onRenderNavigation,\n      onRenderHeader = this._onRenderHeader,\n      onRenderBody = this._onRenderBody,\n      onRenderFooter = this._onRenderFooter,\n    } = this.props;\n    const { isFooterSticky, visibility, id } = this.state;\n    const isLeft = type === PanelType.smallFixedNear || type === PanelType.customNear ? true : false;\n    const isRTL = getRTL(theme);\n    const isOnRightSide = isRTL ? isLeft : !isLeft;\n    const customWidthStyles = type === PanelType.custom || type === PanelType.customNear ? { width: customWidth } : {};\n    const nativeProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(this.props, divProperties);\n    const isOpen = this.isActive;\n    const isAnimating =\n      visibility === PanelVisibilityState.animatingClosed || visibility === PanelVisibilityState.animatingOpen;\n\n    this._headerTextId = headerText && id + '-headerText';\n\n    if (!isOpen && !isAnimating && !isHiddenOnDismiss) {\n      return null;\n    }\n\n    this._classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      focusTrapZoneClassName: focusTrapZoneProps ? focusTrapZoneProps.className : undefined,\n      hasCloseButton,\n      headerClassName,\n      isAnimating,\n      isFooterSticky,\n      isFooterAtBottom,\n      isOnRightSide,\n      isOpen,\n      isHiddenOnDismiss,\n      type,\n      hasCustomNavigation: this._hasCustomNavigation,\n    });\n\n    const { _classNames, _allowTouchBodyScroll } = this;\n\n    let overlay;\n    if (isBlocking && isOpen) {\n      overlay = (\n        <Overlay\n          className={_classNames.overlay}\n          isDarkThemed={false}\n          onClick={isLightDismiss ? onLightDismissClick : undefined}\n          allowTouchBodyScroll={_allowTouchBodyScroll}\n          {...overlayProps}\n        />\n      );\n    }\n\n    return (\n      <Layer {...layerProps}>\n        <Popup\n          role=\"dialog\"\n          aria-modal=\"true\"\n          ariaLabelledBy={this._headerTextId ? this._headerTextId : undefined}\n          onDismiss={this.dismiss}\n          className={_classNames.hiddenPanel}\n        >\n          <div aria-hidden={!isOpen && isAnimating} {...nativeProps} ref={this._panel} className={_classNames.root}>\n            {overlay}\n            <FocusTrapZone\n              ignoreExternalFocusing={ignoreExternalFocusing}\n              forceFocusInsideTrap={!isBlocking || (isHiddenOnDismiss && !isOpen) ? false : forceFocusInsideTrap}\n              firstFocusableSelector={firstFocusableSelector}\n              isClickableOutsideFocusTrap={true}\n              {...focusTrapZoneProps}\n              className={_classNames.main}\n              style={customWidthStyles}\n              elementToFocusOnDismiss={elementToFocusOnDismiss}\n            >\n              <div className={_classNames.commands} data-is-visible={true}>\n                {onRenderNavigation(this.props, this._onRenderNavigation)}\n              </div>\n              <div className={_classNames.contentInner}>\n                {(this._hasCustomNavigation || !hasCloseButton) &&\n                  onRenderHeader(this.props, this._onRenderHeader, this._headerTextId)}\n                <div ref={this._allowScrollOnPanel} className={_classNames.scrollableContent} data-is-scrollable={true}>\n                  {onRenderBody(this.props, this._onRenderBody)}\n                </div>\n                {onRenderFooter(this.props, this._onRenderFooter)}\n              </div>\n            </FocusTrapZone>\n          </div>\n        </Popup>\n      </Layer>\n    );\n  }\n\n  public open() {\n    if (this.props.isOpen !== undefined) {\n      return;\n    }\n\n    if (this.isActive) {\n      return;\n    }\n\n    this.setState({ visibility: PanelVisibilityState.animatingOpen });\n  }\n\n  public close() {\n    if (this.props.isOpen !== undefined) {\n      return;\n    }\n\n    if (!this.isActive) {\n      return;\n    }\n\n    this.setState({ visibility: PanelVisibilityState.animatingClosed });\n  }\n\n  public dismiss = (ev?: React.SyntheticEvent<HTMLElement>): void => {\n    if (this.props.onDismiss) {\n      this.props.onDismiss(ev);\n    }\n\n    if (!ev || (ev && !ev.defaultPrevented)) {\n      this.close();\n    }\n  };\n\n  /** isActive is true when panel is open or opening. */\n  get isActive(): boolean {\n    return (\n      this.state.visibility === PanelVisibilityState.open ||\n      this.state.visibility === PanelVisibilityState.animatingOpen\n    );\n  }\n\n  // Allow the user to scroll within the panel but not on the body\n  private _allowScrollOnPanel = (elt: HTMLDivElement | null): void => {\n    if (elt) {\n      if (this._allowTouchBodyScroll) {\n        allowOverscrollOnElement(elt, this._events);\n      } else {\n        allowScrollOnElement(elt, this._events);\n      }\n    } else {\n      this._events.off(this._scrollableContent);\n    }\n    this._scrollableContent = elt;\n  };\n\n  private _shouldListenForOuterClick(props: IPanelProps): boolean {\n    return !!props.isBlocking && !!props.isOpen;\n  }\n\n  private _onRenderNavigation = (props: IPanelProps): JSX.Element | null => {\n    if (!this.props.onRenderNavigationContent && !this.props.onRenderNavigation && !this.props.hasCloseButton) {\n      return null;\n    }\n    const { onRenderNavigationContent = this._onRenderNavigationContent } = this.props;\n    return (\n      <div className={this._classNames.navigation}>\n        {onRenderNavigationContent(props, this._onRenderNavigationContent)}\n      </div>\n    );\n  };\n\n  private _onRenderNavigationContent = (props: IPanelProps): JSX.Element | null => {\n    const { closeButtonAriaLabel, hasCloseButton, onRenderHeader = this._onRenderHeader } = props;\n    if (hasCloseButton) {\n      const iconButtonStyles = this._classNames.subComponentStyles?.closeButton();\n\n      return (\n        <>\n          {!this._hasCustomNavigation && onRenderHeader(this.props, this._onRenderHeader, this._headerTextId)}\n          <IconButton\n            styles={iconButtonStyles}\n            // tslint:disable-next-line:deprecation\n            className={this._classNames.closeButton}\n            onClick={this._onPanelClick}\n            ariaLabel={closeButtonAriaLabel}\n            title={closeButtonAriaLabel}\n            data-is-visible={true}\n            iconProps={{ iconName: 'Cancel' }}\n          />\n        </>\n      );\n    }\n    return null;\n  };\n\n  private _onRenderHeader = (\n    props: IPanelProps,\n    defaultRender?: (props?: IPanelProps) => JSX.Element | null,\n    headerTextId?: string | undefined,\n  ): JSX.Element | null => {\n    const { headerText, headerTextProps = {} } = props;\n\n    if (headerText) {\n      return (\n        <div className={this._classNames.header}>\n          <div\n            id={headerTextId}\n            role=\"heading\"\n            aria-level={1}\n            {...headerTextProps}\n            className={css(this._classNames.headerText, headerTextProps.className)}\n          >\n            {headerText}\n          </div>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  private _onRenderBody = (props: IPanelProps): JSX.Element => {\n    return <div className={this._classNames.content}>{props.children}</div>;\n  };\n\n  private _onRenderFooter = (props: IPanelProps): JSX.Element | null => {\n    const { onRenderFooterContent = null } = this.props;\n    if (onRenderFooterContent) {\n      return (\n        <div className={this._classNames.footer}>\n          <div className={this._classNames.footerInner}>{onRenderFooterContent()}</div>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  private _updateFooterPosition(): void {\n    const scrollableContent = this._scrollableContent;\n    if (scrollableContent) {\n      const height = scrollableContent.clientHeight;\n      const innerHeight = scrollableContent.scrollHeight;\n\n      this.setState({\n        isFooterSticky: height < innerHeight ? true : false,\n      });\n    }\n  }\n\n  private _dismissOnOuterClick(ev: React.MouseEvent<HTMLDivElement>): void {\n    const panel = this._panel.current;\n    if (this.isActive && panel && !ev.defaultPrevented) {\n      if (!elementContains(panel, ev.target as HTMLElement)) {\n        if (this.props.onOuterClick) {\n          this.props.onOuterClick();\n          ev.preventDefault();\n        } else {\n          this.dismiss();\n        }\n      }\n    }\n  }\n\n  private _animateTo = (newVisibilityState: PanelVisibilityState): void => {\n    if (newVisibilityState === PanelVisibilityState.open && this.props.onOpen) {\n      this.props.onOpen();\n    }\n\n    this._animationCallback = this._async.setTimeout(() => {\n      this.setState({ visibility: newVisibilityState });\n      this._onTransitionComplete();\n    }, 200);\n  };\n\n  private _clearExistingAnimationTimer = (): void => {\n    if (this._animationCallback !== null) {\n      this._async.clearTimeout(this._animationCallback);\n    }\n  };\n\n  private _onPanelClick = (ev?: any): void => {\n    this.dismiss(ev);\n  };\n\n  private _onTransitionComplete = (): void => {\n    this._updateFooterPosition();\n\n    if (this.state.visibility === PanelVisibilityState.open && this.props.onOpened) {\n      this.props.onOpened();\n    }\n\n    if (this.state.visibility === PanelVisibilityState.closed && this.props.onDismissed) {\n      this.props.onDismissed();\n    }\n  };\n}\n","import { IPanelStyleProps, IPanelStyles, PanelType } from './Panel.types';\nimport {\n  AnimationClassNames,\n  AnimationVariables,\n  getGlobalClassNames,\n  HighContrastSelector,\n  ScreenWidthMinMedium,\n  ScreenWidthMinLarge,\n  ScreenWidthMinXLarge,\n  ScreenWidthMinXXLarge,\n  ScreenWidthMinUhfMobile,\n  IStyle,\n  IconFontSizes,\n} from '../../Styling';\n\nconst GlobalClassNames = {\n  root: 'ms-Panel',\n  main: 'ms-Panel-main',\n  commands: 'ms-Panel-commands',\n  contentInner: 'ms-Panel-contentInner',\n  scrollableContent: 'ms-Panel-scrollableContent',\n  navigation: 'ms-Panel-navigation',\n  closeButton: 'ms-Panel-closeButton ms-PanelAction-close',\n  header: 'ms-Panel-header',\n  headerText: 'ms-Panel-headerText',\n  content: 'ms-Panel-content',\n  footer: 'ms-Panel-footer',\n  footerInner: 'ms-Panel-footerInner',\n  isOpen: 'is-open',\n  hasCloseButton: 'ms-Panel--hasCloseButton',\n  smallFluid: 'ms-Panel--smFluid',\n  smallFixedNear: 'ms-Panel--smLeft',\n  smallFixedFar: 'ms-Panel--sm',\n  medium: 'ms-Panel--md',\n  large: 'ms-Panel--lg',\n  largeFixed: 'ms-Panel--fixed',\n  extraLarge: 'ms-Panel--xl',\n  custom: 'ms-Panel--custom',\n  customNear: 'ms-Panel--customLeft',\n};\n\nconst panelWidth = {\n  full: '100%',\n  auto: 'auto',\n  xs: 272,\n  sm: 340,\n  md1: 592,\n  md2: 644,\n  lg: 940,\n};\n\nconst panelMargin = {\n  auto: 'auto',\n  none: 0,\n  md: 48,\n  lg: 428,\n  xl: 176,\n};\n\n// Following consts are used below in `getPanelBreakpoints()` function to provide\n// necessary fallbacks for different types of Panel in different breakpoints.\nconst smallPanelSelectors = {\n  [`@media (min-width: ${ScreenWidthMinMedium}px)`]: {\n    width: panelWidth.sm,\n  },\n};\n\nconst mediumPanelSelectors = {\n  [`@media (min-width: ${ScreenWidthMinLarge}px)`]: {\n    width: panelWidth.md1,\n  },\n  [`@media (min-width: ${ScreenWidthMinXLarge}px)`]: {\n    width: panelWidth.md2,\n  },\n};\n\nconst largePanelSelectors = {\n  [`@media (min-width: ${ScreenWidthMinUhfMobile}px)`]: {\n    left: panelMargin.md,\n    width: panelWidth.auto,\n  },\n  [`@media (min-width: ${ScreenWidthMinXXLarge}px)`]: {\n    left: panelMargin.lg,\n  },\n};\n\nconst largeFixedPanelSelectors = {\n  [`@media (min-width: ${ScreenWidthMinXXLarge}px)`]: {\n    left: panelMargin.auto,\n    width: panelWidth.lg,\n  },\n};\n\nconst extraLargePanelSelectors = {\n  [`@media (min-width: ${ScreenWidthMinXXLarge}px)`]: {\n    left: panelMargin.xl,\n  },\n};\n\n// Make sure Panels have fallbacks to different breakpoints by reusing same selectors.\n// This is done in the effort to follow design redlines.\nconst getPanelBreakpoints = (type: PanelType): { [x: string]: IStyle } | undefined => {\n  let selectors;\n\n  // Panel types `smallFluid`, `smallFixedNear`, `custom` and `customNear`\n  // are not checked in here because they render the same in all the breakpoints\n  // and have the checks done separately in the `getStyles` function below.\n  switch (type) {\n    case PanelType.smallFixedFar:\n      selectors = {\n        ...smallPanelSelectors,\n      };\n      break;\n    case PanelType.medium:\n      selectors = {\n        ...smallPanelSelectors,\n        ...mediumPanelSelectors,\n      };\n      break;\n    case PanelType.large:\n      selectors = {\n        ...smallPanelSelectors,\n        ...mediumPanelSelectors,\n        ...largePanelSelectors,\n      };\n      break;\n    case PanelType.largeFixed:\n      selectors = {\n        ...smallPanelSelectors,\n        ...mediumPanelSelectors,\n        ...largePanelSelectors,\n        ...largeFixedPanelSelectors,\n      };\n      break;\n    case PanelType.extraLarge:\n      selectors = {\n        ...smallPanelSelectors,\n        ...mediumPanelSelectors,\n        ...largePanelSelectors,\n        ...extraLargePanelSelectors,\n      };\n      break;\n    default:\n      break;\n  }\n\n  return selectors;\n};\n\nconst commandBarHeight = '44px';\n\nconst sharedPaddingStyles = {\n  paddingLeft: '24px',\n  paddingRight: '24px',\n};\n\nexport const getStyles = (props: IPanelStyleProps): IPanelStyles => {\n  const {\n    className,\n    focusTrapZoneClassName,\n    hasCloseButton,\n    headerClassName,\n    isAnimating,\n    isFooterSticky,\n    isFooterAtBottom,\n    isOnRightSide,\n    isOpen,\n    isHiddenOnDismiss,\n    hasCustomNavigation,\n    theme,\n    type = PanelType.smallFixedFar,\n  } = props;\n  const { effects, fonts, semanticColors } = theme;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n  const isCustomPanel = type === PanelType.custom || type === PanelType.customNear;\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      isOpen && classNames.isOpen,\n      hasCloseButton && classNames.hasCloseButton,\n      {\n        pointerEvents: 'none',\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      },\n      isCustomPanel && isOnRightSide && classNames.custom,\n      isCustomPanel && !isOnRightSide && classNames.customNear,\n      className,\n    ],\n    overlay: [\n      {\n        pointerEvents: 'auto',\n        cursor: 'pointer',\n      },\n      isOpen && isAnimating && AnimationClassNames.fadeIn100,\n      !isOpen && isAnimating && AnimationClassNames.fadeOut100,\n    ],\n    hiddenPanel: [\n      !isOpen &&\n        !isAnimating &&\n        isHiddenOnDismiss && {\n          visibility: 'hidden',\n        },\n    ],\n    main: [\n      classNames.main,\n      {\n        backgroundColor: semanticColors.bodyBackground,\n        boxShadow: effects.elevation64,\n        pointerEvents: 'auto',\n        position: 'absolute',\n        display: 'flex',\n        flexDirection: 'column',\n        overflowX: 'hidden',\n        overflowY: 'auto',\n        WebkitOverflowScrolling: 'touch',\n        bottom: 0,\n        top: 0,\n        // left, right, width are overridden depending on the type of the Panel and the screen breakpoint.\n        left: panelMargin.auto,\n        right: panelMargin.none,\n        width: panelWidth.full,\n        selectors: {\n          [HighContrastSelector]: {\n            borderLeft: `3px solid ${semanticColors.variantBorder}`,\n            borderRight: `3px solid ${semanticColors.variantBorder}`,\n          },\n          ...getPanelBreakpoints(type),\n        },\n      },\n      type === PanelType.smallFluid && {\n        left: panelMargin.none,\n      },\n      type === PanelType.smallFixedNear && {\n        left: panelMargin.none,\n        right: panelMargin.auto,\n        width: panelWidth.xs,\n      },\n      type === PanelType.customNear && {\n        right: 'auto',\n        left: 0,\n      },\n      isCustomPanel && {\n        maxWidth: '100vw',\n      },\n      isOpen && isAnimating && !isOnRightSide && AnimationClassNames.slideRightIn40,\n      isOpen && isAnimating && isOnRightSide && AnimationClassNames.slideLeftIn40,\n      !isOpen && isAnimating && !isOnRightSide && AnimationClassNames.slideLeftOut40,\n      !isOpen && isAnimating && isOnRightSide && AnimationClassNames.slideRightOut40,\n      focusTrapZoneClassName,\n    ],\n    commands: [\n      classNames.commands,\n      {\n        marginTop: 18,\n      },\n      hasCustomNavigation && {\n        marginTop: 'inherit',\n      },\n    ],\n    navigation: [\n      classNames.navigation,\n      {\n        display: 'flex',\n        justifyContent: 'flex-end',\n      },\n      hasCustomNavigation && {\n        height: commandBarHeight,\n      },\n    ],\n    contentInner: [\n      classNames.contentInner,\n      {\n        display: 'flex',\n        flexDirection: 'column',\n        flexGrow: 1,\n        overflowY: 'hidden',\n      },\n    ],\n    header: [\n      classNames.header,\n      sharedPaddingStyles,\n      {\n        alignSelf: 'flex-start',\n      },\n      hasCloseButton &&\n        !hasCustomNavigation && {\n          flexGrow: 1,\n        },\n      hasCustomNavigation && {\n        // Ensure that title doesn't shrink if screen is too small\n        flexShrink: 0,\n      },\n    ],\n    headerText: [\n      classNames.headerText,\n      fonts.xLarge,\n      {\n        color: semanticColors.bodyText,\n        lineHeight: '27px',\n        overflowWrap: 'break-word',\n        wordWrap: 'break-word',\n        wordBreak: 'break-word',\n        hyphens: 'auto',\n      },\n      headerClassName,\n    ],\n    scrollableContent: [\n      classNames.scrollableContent,\n      {\n        overflowY: 'auto',\n      },\n      isFooterAtBottom && {\n        flexGrow: 1,\n      },\n    ],\n    content: [\n      classNames.content,\n      sharedPaddingStyles,\n      {\n        paddingBottom: 20,\n      },\n    ],\n    footer: [\n      classNames.footer,\n      {\n        // Ensure that footer doesn't shrink if screen is too small\n        flexShrink: 0,\n        borderTop: '1px solid transparent',\n        transition: `opacity ${AnimationVariables.durationValue3} ${AnimationVariables.easeFunction2}`,\n      },\n      isFooterSticky && {\n        background: semanticColors.bodyBackground,\n        borderTopColor: semanticColors.variantBorder,\n      },\n    ],\n    footerInner: [\n      classNames.footerInner,\n      sharedPaddingStyles,\n      {\n        paddingBottom: 16,\n        paddingTop: 16,\n      },\n    ],\n    subComponentStyles: {\n      closeButton: {\n        root: [\n          classNames.closeButton,\n          {\n            marginRight: 14,\n            color: theme.palette.neutralSecondary,\n            fontSize: IconFontSizes.large,\n          },\n          hasCustomNavigation && {\n            marginRight: 0,\n            height: 'auto',\n            width: '44px',\n          },\n        ],\n        rootHovered: {\n          color: theme.palette.neutralPrimary,\n        },\n      },\n    },\n  };\n};\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { IPanelProps, IPanelStyleProps, IPanelStyles } from './Panel.types';\nimport { PanelBase } from './Panel.base';\nimport { getStyles } from './Panel.styles';\n\n/**\n * Panel description\n */\nexport const Panel: React.FunctionComponent<IPanelProps> = styled<IPanelProps, IPanelStyleProps, IPanelStyles>(\n  PanelBase,\n  getStyles,\n  undefined,\n  {\n    scope: 'Panel',\n  },\n);\n","import { ISelectableOption } from '../../utilities/selectableOption/SelectableOption.types';\n\nexport function getAllSelectedOptions(options: ISelectableOption[], selectedIndices: number[]): ISelectableOption[] {\n  const selectedOptions: ISelectableOption[] = [];\n  for (const index of selectedIndices) {\n    const option = options[index];\n\n    if (option) {\n      selectedOptions.push(option);\n    }\n  }\n\n  return selectedOptions;\n}\n","declare function setTimeout(callback: (...args: any[]) => void, ms: number, ...args: any[]): number;\n\nimport * as React from 'react';\nimport {\n  IStyleFunctionOrObject,\n  KeyCodes,\n  classNamesFunction,\n  divProperties,\n  findIndex,\n  getDocument,\n  getFirstFocusable,\n  getId,\n  getLastFocusable,\n  getNativeProps,\n  initializeComponentRef,\n  isIOS,\n  isMac,\n  mergeAriaAttributeValues,\n  safeRequestAnimationFrame,\n  warnDeprecations,\n  warnMutuallyExclusive,\n} from '../../Utilities';\nimport { Callout } from '../../Callout';\nimport { Checkbox, ICheckboxStyleProps, ICheckboxStyles } from '../../Checkbox';\nimport { CommandButton } from '../../Button';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport {\n  DropdownMenuItemType,\n  IDropdownOption,\n  IDropdownProps,\n  IDropdownStyleProps,\n  IDropdownStyles,\n  IDropdown,\n} from './Dropdown.types';\nimport { DropdownSizePosCache } from './utilities/DropdownSizePosCache';\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport { ICalloutPositionedInfo, RectangleEdge } from '../../utilities/positioning';\nimport { Icon } from '../../Icon';\nimport { ILabelStyleProps, ILabelStyles, Label } from '../../Label';\nimport { IProcessedStyleSet } from '../../Styling';\nimport { IWithResponsiveModeState } from '../../utilities/decorators/withResponsiveMode';\nimport { KeytipData } from '../../KeytipData';\nimport { Panel, IPanelStyleProps, IPanelStyles } from '../../Panel';\nimport { ResponsiveMode, withResponsiveMode } from '../../utilities/decorators/withResponsiveMode';\nimport {\n  SelectableOptionMenuItemType,\n  getAllSelectedOptions,\n  ISelectableDroppableTextProps,\n} from '../../utilities/selectableOption/index';\n\nconst getClassNames = classNamesFunction<IDropdownStyleProps, IDropdownStyles>();\n\n/** Internal only props interface to support mixing in responsive mode */\nexport interface IDropdownInternalProps extends IDropdownProps, IWithResponsiveModeState {}\n\nexport interface IDropdownState {\n  isOpen: boolean;\n  selectedIndices: number[];\n  /** Whether the root dropdown element has focus. */\n  hasFocus: boolean;\n  calloutRenderEdge?: RectangleEdge;\n}\n\n@withResponsiveMode\nexport class DropdownBase extends React.Component<IDropdownInternalProps, IDropdownState> implements IDropdown {\n  public static defaultProps = {\n    options: [] as any[],\n  };\n\n  private _host = React.createRef<HTMLDivElement>();\n  private _focusZone = React.createRef<FocusZone>();\n  private _dropDown = React.createRef<HTMLDivElement>();\n  private _id: string;\n  private _labelId: string;\n  private _listId: string;\n  private _optionId: string;\n  private _isScrollIdle: boolean;\n  private readonly _scrollIdleDelay: number = 250 /* ms */;\n  private _scrollIdleTimeoutId: number | undefined;\n  /** True if the most recent keydown event was for alt (option) or meta (command). */\n  private _lastKeyDownWasAltOrMeta: boolean | undefined;\n  private _sizePosCache: DropdownSizePosCache = new DropdownSizePosCache();\n  private _classNames: IProcessedStyleSet<IDropdownStyles>;\n  private _requestAnimationFrame = safeRequestAnimationFrame(this);\n  /** Flag for when we get the first mouseMove */\n  private _gotMouseMove: boolean;\n  /** Flag for tracking whether focus is triggered by click (alternatively triggered by keyboard nav) */\n  private _isFocusedByClick: boolean;\n\n  constructor(props: IDropdownProps) {\n    super(props);\n\n    initializeComponentRef(this);\n\n    if (process.env.NODE_ENV !== 'production') {\n      warnDeprecations('Dropdown', props, {\n        isDisabled: 'disabled',\n        onChanged: 'onChange',\n        placeHolder: 'placeholder',\n        onRenderPlaceHolder: 'onRenderPlaceholder',\n      });\n\n      warnMutuallyExclusive('Dropdown', props, {\n        defaultSelectedKey: 'selectedKey',\n        defaultSelectedKeys: 'selectedKeys',\n        selectedKeys: 'selectedKey',\n        multiSelect: 'defaultSelectedKey',\n        selectedKey: 'multiSelect',\n      });\n    }\n\n    this._id = props.id || getId('Dropdown');\n    this._labelId = this._id + '-label';\n    this._listId = this._id + '-list';\n    this._optionId = this._id + '-option';\n    this._isScrollIdle = true;\n\n    let selectedIndices: number[];\n\n    if (this.props.multiSelect) {\n      const selectedKeys = props.defaultSelectedKeys !== undefined ? props.defaultSelectedKeys : props.selectedKeys;\n      selectedIndices = this._getSelectedIndexes(props.options, selectedKeys);\n    } else {\n      const selectedKey = props.defaultSelectedKey !== undefined ? props.defaultSelectedKey : props.selectedKey;\n      selectedIndices = this._getSelectedIndexes(props.options, selectedKey!);\n    }\n\n    this._sizePosCache.updateOptions(props.options);\n\n    this.state = {\n      isOpen: false,\n      selectedIndices,\n      hasFocus: false,\n      calloutRenderEdge: undefined,\n    };\n  }\n\n  /**\n   * All selected options\n   */\n  public get selectedOptions(): IDropdownOption[] {\n    const { options } = this.props;\n    const { selectedIndices } = this.state;\n\n    return getAllSelectedOptions(options, selectedIndices);\n  }\n\n  public componentWillUnmount() {\n    clearTimeout(this._scrollIdleTimeoutId);\n  }\n\n  // tslint:disable-next-line function-name\n  public UNSAFE_componentWillReceiveProps(newProps: IDropdownProps): void {\n    // In controlled component usage where selectedKey is provided, update the selectedIndex\n    // state if the key or options change.\n    let selectedKeyProp: 'defaultSelectedKeys' | 'selectedKeys' | 'defaultSelectedKey' | 'selectedKey';\n\n    // this does a shallow compare (assumes options are pure), for the purposes of determining whether\n    // defaultSelectedKey/defaultSelectedKeys are respected.\n    const didOptionsChange = newProps.options !== this.props.options;\n\n    if (newProps.multiSelect) {\n      if (didOptionsChange && newProps.defaultSelectedKeys !== undefined) {\n        selectedKeyProp = 'defaultSelectedKeys';\n      } else {\n        selectedKeyProp = 'selectedKeys';\n      }\n    } else {\n      if (didOptionsChange && newProps.defaultSelectedKey !== undefined) {\n        selectedKeyProp = 'defaultSelectedKey';\n      } else {\n        selectedKeyProp = 'selectedKey';\n      }\n    }\n\n    if (\n      newProps[selectedKeyProp] !== undefined &&\n      (newProps[selectedKeyProp] !== this.props[selectedKeyProp] || didOptionsChange)\n    ) {\n      this.setState({\n        selectedIndices: this._getSelectedIndexes(newProps.options, newProps[selectedKeyProp]),\n      });\n    }\n\n    if (\n      newProps.options !== this.props.options // preexisting code assumes purity of the options...\n    ) {\n      this._sizePosCache.updateOptions(newProps.options);\n    }\n  }\n\n  public componentDidUpdate(prevProps: IDropdownProps, prevState: IDropdownState) {\n    if (prevState.isOpen === true && this.state.isOpen === false) {\n      this._gotMouseMove = false;\n\n      if (this.props.onDismiss) {\n        this.props.onDismiss();\n      }\n    }\n  }\n\n  public render(): JSX.Element {\n    const id = this._id;\n\n    const props = this.props;\n    const {\n      className,\n      label,\n      options,\n      ariaLabel,\n      required,\n      errorMessage,\n      keytipProps,\n      styles: propStyles,\n      theme,\n      panelProps,\n      calloutProps,\n      multiSelect,\n      onRenderTitle = this._onRenderTitle,\n      onRenderContainer = this._onRenderContainer,\n      onRenderCaretDown = this._onRenderCaretDown,\n      onRenderLabel = this._onRenderLabel,\n    } = props;\n    const { isOpen, selectedIndices, calloutRenderEdge } = this.state;\n    // tslint:disable-next-line:deprecation\n    const onRenderPlaceholder = props.onRenderPlaceholder || props.onRenderPlaceHolder || this._onRenderPlaceholder;\n\n    const selectedOptions = getAllSelectedOptions(options, selectedIndices);\n    const divProps = getNativeProps(props, divProperties);\n\n    const disabled = this._isDisabled();\n\n    const errorMessageId = id + '-errorMessage';\n    const ariaActiveDescendant = disabled\n      ? undefined\n      : isOpen && selectedIndices.length === 1 && selectedIndices[0] >= 0\n      ? this._listId + selectedIndices[0]\n      : undefined;\n\n    const ariaAttrs = multiSelect\n      ? {\n          role: 'button',\n        }\n      : // single select\n        {\n          role: 'listbox',\n          childRole: 'option',\n          ariaSetSize: this._sizePosCache.optionSetSize,\n          ariaPosInSet: this._sizePosCache.positionInSet(selectedIndices[0]),\n          ariaSelected: selectedIndices[0] === undefined ? undefined : true,\n        };\n\n    this._classNames = getClassNames(propStyles, {\n      theme,\n      className,\n      hasError: !!(errorMessage && errorMessage.length > 0),\n      hasLabel: !!label,\n      isOpen,\n      required,\n      disabled,\n      isRenderingPlaceholder: !selectedOptions.length,\n      panelClassName: !!panelProps ? panelProps.className : undefined,\n      calloutClassName: !!calloutProps ? calloutProps.className : undefined,\n      calloutRenderEdge: calloutRenderEdge,\n    });\n\n    const hasErrorMessage: boolean = !!errorMessage && errorMessage.length > 0;\n\n    return (\n      <div className={this._classNames.root}>\n        {onRenderLabel(this.props, this._onRenderLabel)}\n        <KeytipData keytipProps={keytipProps} disabled={disabled}>\n          {(keytipAttributes: any): JSX.Element => (\n            <div\n              {...keytipAttributes}\n              data-is-focusable={!disabled}\n              ref={this._dropDown}\n              id={id}\n              tabIndex={disabled ? -1 : 0}\n              role={ariaAttrs.role}\n              aria-haspopup=\"listbox\"\n              aria-expanded={isOpen ? 'true' : 'false'}\n              aria-label={ariaLabel}\n              aria-labelledby={\n                label && !ariaLabel ? mergeAriaAttributeValues(this._labelId, this._optionId) : undefined\n              }\n              aria-describedby={mergeAriaAttributeValues(\n                keytipAttributes['aria-describedby'],\n                hasErrorMessage ? this._id + '-errorMessage' : undefined,\n              )}\n              aria-activedescendant={ariaActiveDescendant}\n              aria-required={required}\n              aria-disabled={disabled}\n              aria-owns={isOpen ? this._listId : undefined}\n              {...divProps}\n              className={this._classNames.dropdown}\n              onBlur={this._onDropdownBlur}\n              onKeyDown={this._onDropdownKeyDown}\n              onKeyUp={this._onDropdownKeyUp}\n              onClick={this._onDropdownClick}\n              onMouseDown={this._onDropdownMouseDown}\n              onFocus={this._onFocus}\n            >\n              <span\n                id={this._optionId}\n                className={this._classNames.title}\n                aria-live=\"polite\"\n                aria-atomic={true}\n                aria-invalid={hasErrorMessage}\n                role={ariaAttrs.childRole}\n                aria-setsize={ariaAttrs.ariaSetSize}\n                aria-posinset={ariaAttrs.ariaPosInSet}\n                aria-selected={ariaAttrs.ariaSelected}\n              >\n                {// If option is selected render title, otherwise render the placeholder text\n                selectedOptions.length\n                  ? onRenderTitle(selectedOptions, this._onRenderTitle)\n                  : onRenderPlaceholder(props, this._onRenderPlaceholder)}\n              </span>\n              <span className={this._classNames.caretDownWrapper}>\n                {onRenderCaretDown(props, this._onRenderCaretDown)}\n              </span>\n            </div>\n          )}\n        </KeytipData>\n        {isOpen && onRenderContainer({ ...props, onDismiss: this._onDismiss }, this._onRenderContainer)}\n        {hasErrorMessage && (\n          <div role=\"alert\" id={errorMessageId} className={this._classNames.errorMessage}>\n            {errorMessage}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  public focus(shouldOpenOnFocus?: boolean): void {\n    if (this._dropDown.current) {\n      this._dropDown.current.focus();\n\n      if (shouldOpenOnFocus) {\n        this.setState({\n          isOpen: true,\n        });\n      }\n    }\n  }\n\n  public setSelectedIndex(event: React.FormEvent<HTMLDivElement>, index: number): void {\n    const { options, selectedKey, selectedKeys, multiSelect, notifyOnReselect } = this.props;\n    const { selectedIndices = [] } = this.state;\n    const checked: boolean = selectedIndices ? selectedIndices.indexOf(index) > -1 : false;\n    let newIndexes: number[] = [];\n\n    index = Math.max(0, Math.min(options.length - 1, index));\n\n    // If this is a controlled component then no state change should take place.\n    if (selectedKey !== undefined || selectedKeys !== undefined) {\n      this._onChange(event, options, index, checked, multiSelect);\n      return;\n    }\n\n    if (!multiSelect && !notifyOnReselect && index === selectedIndices[0]) {\n      return;\n    } else if (multiSelect) {\n      newIndexes = selectedIndices ? this._copyArray(selectedIndices) : [];\n      if (checked) {\n        const position = newIndexes.indexOf(index);\n        if (position > -1) {\n          // unchecked the current one\n          newIndexes.splice(position, 1);\n        }\n      } else {\n        // add the new selected index into the existing one\n        newIndexes.push(index);\n      }\n    } else {\n      // Set the selected option if this is an uncontrolled component\n      newIndexes = [index];\n    }\n\n    event.persist();\n    // Call onChange after state is updated\n    this.setState(\n      {\n        selectedIndices: newIndexes,\n      },\n      () => {\n        this._onChange(event, options, index, checked, multiSelect);\n      },\n    );\n  }\n\n  private _onChange = (\n    event: React.FormEvent<HTMLDivElement>,\n    options: IDropdownOption[],\n    index: number,\n    checked?: boolean,\n    multiSelect?: boolean,\n  ) => {\n    // tslint:disable-next-line:deprecation\n    const { onChange, onChanged } = this.props;\n    if (onChange || onChanged) {\n      // for single-select, option passed in will always be selected.\n      // for multi-select, flip the checked value\n      const changedOpt = multiSelect ? { ...options[index], selected: !checked } : options[index];\n\n      onChange && onChange({ ...event, target: this._dropDown.current as EventTarget }, changedOpt, index);\n      onChanged && onChanged(changedOpt, index);\n    }\n  };\n\n  /** Get either props.placeholder (new name) or props.placeHolder (old name) */\n  private get _placeholder(): string | undefined {\n    // tslint:disable-next-line:deprecation\n    return this.props.placeholder || this.props.placeHolder;\n  }\n\n  private _copyArray(array: any[]): any[] {\n    const newArray = [];\n    for (const element of array) {\n      newArray.push(element);\n    }\n    return newArray;\n  }\n\n  /**\n   * Finds the next valid Dropdown option and sets the selected index to it.\n   * @param stepValue - Value of how many items the function should traverse.  Should be -1 or 1.\n   * @param index - Index of where the search should start\n   * @param selectedIndex - The selectedIndex Dropdown's state\n   * @returns The next valid dropdown option's index\n   */\n  private _moveIndex(\n    event: React.FormEvent<HTMLDivElement>,\n    stepValue: number,\n    index: number,\n    selectedIndex: number,\n  ): number {\n    const { options } = this.props;\n    // Return selectedIndex if nothing has changed or options is empty\n    if (selectedIndex === index || options.length === 0) {\n      return selectedIndex;\n    }\n\n    // If the user is pressing the up or down key we want to make\n    // sure that the dropdown cycles through the options without\n    // causing the screen to scroll. In _onDropdownKeyDown\n    // at the very end is a check to see if newIndex !== selectedIndex.\n    // If the index is less than 0 and we set it back to 0, then\n    // newIndex will equal selectedIndex and not stop the action\n    // of the key press happening and vice versa for indexes greater\n    // than or equal to the options length.\n    if (index >= options.length) {\n      index = 0;\n    } else if (index < 0) {\n      index = options.length - 1;\n    }\n\n    let stepCounter = 0;\n    // If current index is a header or divider, or disabled, increment by step\n    while (\n      options[index].itemType === DropdownMenuItemType.Header ||\n      options[index].itemType === DropdownMenuItemType.Divider ||\n      options[index].disabled\n    ) {\n      // If stepCounter exceeds length of options, then return selectedIndex (-1)\n      if (stepCounter >= options.length) {\n        return selectedIndex;\n      }\n      // If index + stepValue is out of bounds, wrap around\n      if (index + stepValue < 0) {\n        index = options.length;\n      } else if (index + stepValue >= options.length) {\n        index = -1;\n      }\n\n      index = index + stepValue;\n      stepCounter++;\n    }\n\n    this.setSelectedIndex(event, index);\n    return index;\n  }\n\n  /** Render text in dropdown input */\n  private _onRenderTitle = (items: IDropdownOption[]): JSX.Element => {\n    const { multiSelectDelimiter = ', ' } = this.props;\n\n    const displayTxt = items.map(i => i.text).join(multiSelectDelimiter);\n    return <>{displayTxt}</>;\n  };\n\n  /** Render placeholder text in dropdown input */\n  private _onRenderPlaceholder = (props: IDropdownProps): JSX.Element | null => {\n    if (!this._placeholder) {\n      return null;\n    }\n    return <>{this._placeholder}</>;\n  };\n\n  /** Render Callout or Panel container and pass in list */\n  private _onRenderContainer = (props: ISelectableDroppableTextProps<IDropdown, HTMLDivElement>): JSX.Element => {\n    const { calloutProps, panelProps } = props;\n    const { responsiveMode, dropdownWidth } = this.props;\n\n    const isSmall = responsiveMode! <= ResponsiveMode.medium;\n\n    const panelStyles = this._classNames.subComponentStyles\n      ? (this._classNames.subComponentStyles.panel as IStyleFunctionOrObject<IPanelStyleProps, IPanelStyles>)\n      : undefined;\n\n    return isSmall ? (\n      <Panel\n        isOpen={true}\n        isLightDismiss={true}\n        onDismiss={this._onDismiss}\n        hasCloseButton={false}\n        styles={panelStyles}\n        {...panelProps}\n      >\n        {this._renderFocusableList(props)}\n      </Panel>\n    ) : (\n      <Callout\n        isBeakVisible={false}\n        gapSpace={0}\n        doNotLayer={false}\n        directionalHintFixed={false}\n        directionalHint={DirectionalHint.bottomLeftEdge}\n        {...calloutProps}\n        className={this._classNames.callout}\n        target={this._dropDown.current}\n        onDismiss={this._onDismiss}\n        onScroll={this._onScroll}\n        onPositioned={this._onPositioned}\n        calloutWidth={dropdownWidth || (this._dropDown.current ? this._dropDown.current.clientWidth : 0)}\n      >\n        {this._renderFocusableList(props)}\n      </Callout>\n    );\n  };\n\n  /** Render Caret Down Icon */\n  private _onRenderCaretDown = (props: IDropdownProps): JSX.Element => {\n    return <Icon className={this._classNames.caretDown} iconName=\"ChevronDown\" aria-hidden={true} />;\n  };\n\n  /** Wrap item list in a FocusZone */\n  private _renderFocusableList(props: ISelectableDroppableTextProps<IDropdown, HTMLDivElement>): JSX.Element {\n    const { onRenderList = this._onRenderList, label, ariaLabel, multiSelect } = props;\n\n    return (\n      <div\n        className={this._classNames.dropdownItemsWrapper}\n        onKeyDown={this._onZoneKeyDown}\n        onKeyUp={this._onZoneKeyUp}\n        ref={this._host}\n        tabIndex={0}\n      >\n        <FocusZone\n          ref={this._focusZone}\n          direction={FocusZoneDirection.vertical}\n          id={this._listId}\n          className={this._classNames.dropdownItems}\n          role=\"listbox\"\n          aria-label={ariaLabel}\n          aria-labelledby={label && !ariaLabel ? this._labelId : undefined}\n          aria-multiselectable={multiSelect}\n        >\n          {onRenderList(props, this._onRenderList)}\n        </FocusZone>\n      </div>\n    );\n  }\n\n  /** Render List of items */\n  private _onRenderList = (props: ISelectableDroppableTextProps<IDropdown, HTMLDivElement>): JSX.Element => {\n    const { onRenderItem = this._onRenderItem } = props;\n\n    let queue: { id?: string; items: JSX.Element[] } = { items: [] };\n    let renderedList: JSX.Element[] = [];\n\n    const emptyQueue = (): void => {\n      const newGroup = queue.id\n        ? [\n            <div role=\"group\" key={queue.id} aria-labelledby={queue.id}>\n              {queue.items}\n            </div>,\n          ]\n        : queue.items;\n\n      renderedList = [...renderedList, ...newGroup];\n      // Flush items and id\n      queue = { items: [] };\n    };\n\n    const placeRenderedOptionIntoQueue = (item: IDropdownOption, index: number) => {\n      /*\n        Case Header\n          empty queue if it's not already empty\n          ensure unique ID for header and set queue ID\n          push header into queue\n        Case Divider\n          push divider into queue if not first item\n          empty queue if not already empty\n        Default\n          push item into queue\n      */\n      switch (item.itemType) {\n        case SelectableOptionMenuItemType.Header:\n          queue.items.length > 0 && emptyQueue();\n\n          const id = this._id + item.key;\n          queue.items.push(onRenderItem({ id, ...item, index }, this._onRenderItem)!);\n          queue.id = id;\n          break;\n        case SelectableOptionMenuItemType.Divider:\n          index > 0 && queue.items.push(onRenderItem({ ...item, index }, this._onRenderItem)!);\n\n          queue.items.length > 0 && emptyQueue();\n          break;\n        default:\n          queue.items.push(onRenderItem({ ...item, index }, this._onRenderItem)!);\n      }\n    };\n\n    // Place options into the queue. Queue will be emptied anytime a Header or Divider is encountered\n    props.options.forEach((item: IDropdownOption, index: number) => {\n      placeRenderedOptionIntoQueue(item, index);\n    });\n\n    // Push remaining items into all renderedList\n    queue.items.length > 0 && emptyQueue();\n\n    return <>{renderedList}</>;\n  };\n\n  private _onRenderItem = (item: IDropdownOption): JSX.Element | null => {\n    switch (item.itemType) {\n      case SelectableOptionMenuItemType.Divider:\n        return this._renderSeparator(item);\n      case SelectableOptionMenuItemType.Header:\n        return this._renderHeader(item);\n      default:\n        return this._renderOption(item);\n    }\n  };\n\n  private _renderSeparator(item: IDropdownOption): JSX.Element | null {\n    const { index, key } = item;\n    if (index! > 0) {\n      return <div role=\"separator\" key={key} className={this._classNames.dropdownDivider} />;\n    }\n    return null;\n  }\n\n  private _renderHeader(item: IDropdownOption): JSX.Element {\n    const { onRenderOption = this._onRenderOption } = this.props;\n    const { key, id } = item;\n    return (\n      <div id={id} key={key} className={this._classNames.dropdownItemHeader}>\n        {onRenderOption(item, this._onRenderOption)}\n      </div>\n    );\n  }\n\n  private _renderOption = (item: IDropdownOption): JSX.Element => {\n    const { onRenderOption = this._onRenderOption } = this.props;\n    const { selectedIndices = [] } = this.state;\n    const isItemSelected =\n      item.index !== undefined && selectedIndices ? selectedIndices.indexOf(item.index) > -1 : false;\n\n    // select the right className based on the combination of selected/disabled\n    const itemClassName = item.hidden // predicate: item hidden\n      ? this._classNames.dropdownItemHidden\n      : isItemSelected && item.disabled === true // predicate: both selected and disabled\n      ? this._classNames.dropdownItemSelectedAndDisabled\n      : isItemSelected // predicate: selected only\n      ? this._classNames.dropdownItemSelected\n      : item.disabled === true // predicate: disabled only\n      ? this._classNames.dropdownItemDisabled\n      : this._classNames.dropdownItem;\n\n    const { title = item.text } = item;\n\n    const multiSelectItemStyles = this._classNames.subComponentStyles\n      ? (this._classNames.subComponentStyles.multiSelectItem as IStyleFunctionOrObject<\n          ICheckboxStyleProps,\n          ICheckboxStyles\n        >)\n      : undefined;\n\n    return !this.props.multiSelect ? (\n      <CommandButton\n        id={this._listId + item.index}\n        key={item.key}\n        data-index={item.index}\n        data-is-focusable={!item.disabled}\n        disabled={item.disabled}\n        className={itemClassName}\n        onClick={this._onItemClick(item)}\n        onMouseEnter={this._onItemMouseEnter.bind(this, item)}\n        onMouseLeave={this._onMouseItemLeave.bind(this, item)}\n        onMouseMove={this._onItemMouseMove.bind(this, item)}\n        role=\"option\"\n        aria-selected={isItemSelected ? 'true' : 'false'}\n        ariaLabel={item.ariaLabel}\n        title={title}\n        aria-posinset={this._sizePosCache.positionInSet(item.index)}\n        aria-setsize={this._sizePosCache.optionSetSize}\n      >\n        {onRenderOption(item, this._onRenderOption)}\n      </CommandButton>\n    ) : (\n      <Checkbox\n        id={this._listId + item.index}\n        key={item.key}\n        data-index={item.index}\n        data-is-focusable={!item.disabled}\n        disabled={item.disabled}\n        onChange={this._onItemClick(item)}\n        inputProps={{\n          onMouseEnter: this._onItemMouseEnter.bind(this, item),\n          onMouseLeave: this._onMouseItemLeave.bind(this, item),\n          onMouseMove: this._onItemMouseMove.bind(this, item),\n        }}\n        label={item.text}\n        title={title}\n        onRenderLabel={this._onRenderItemLabel.bind(this, item)}\n        className={itemClassName}\n        role=\"option\"\n        aria-selected={isItemSelected ? 'true' : 'false'}\n        checked={isItemSelected}\n        styles={multiSelectItemStyles}\n        ariaPositionInSet={this._sizePosCache.positionInSet(item.index)}\n        ariaSetSize={this._sizePosCache.optionSetSize}\n      />\n    );\n  };\n\n  /** Render content of item (i.e. text/icon inside of button) */\n  private _onRenderOption = (item: IDropdownOption): JSX.Element => {\n    return <span className={this._classNames.dropdownOptionText}>{item.text}</span>;\n  };\n\n  /** Render custom label for drop down item */\n  private _onRenderItemLabel = (item: IDropdownOption): JSX.Element | null => {\n    const { onRenderOption = this._onRenderOption } = this.props;\n    return onRenderOption(item, this._onRenderOption);\n  };\n\n  private _onPositioned = (positions?: ICalloutPositionedInfo): void => {\n    if (this._focusZone.current) {\n      // Focusing an element can trigger a reflow. Making this wait until there is an animation\n      // frame can improve perf significantly.\n      this._requestAnimationFrame(() => {\n        const selectedIndices = this.state.selectedIndices;\n        if (this._focusZone.current) {\n          if (selectedIndices && selectedIndices[0] && !this.props.options[selectedIndices[0]].disabled) {\n            const element: HTMLElement | null = getDocument()!.getElementById(`${this._id}-list${selectedIndices[0]}`);\n            if (element) {\n              this._focusZone.current.focusElement(element);\n            }\n          } else {\n            this._focusZone.current.focus();\n          }\n        }\n      });\n    }\n\n    if (!this.state.calloutRenderEdge || this.state.calloutRenderEdge !== positions!.targetEdge) {\n      this.setState({\n        calloutRenderEdge: positions!.targetEdge,\n      });\n    }\n  };\n\n  private _onItemClick = (item: IDropdownOption): ((event: React.MouseEvent<HTMLDivElement>) => void) => {\n    return (event: React.MouseEvent<HTMLDivElement>): void => {\n      if (!item.disabled) {\n        this.setSelectedIndex(event, item.index!);\n        if (!this.props.multiSelect) {\n          // only close the callout when it's in single-select mode\n          this.setState({\n            isOpen: false,\n          });\n        }\n      }\n    };\n  };\n\n  /**\n   * Scroll handler for the callout to make sure the mouse events\n   * for updating focus are not interacting during scroll\n   */\n  private _onScroll = (): void => {\n    if (!this._isScrollIdle && this._scrollIdleTimeoutId !== undefined) {\n      clearTimeout(this._scrollIdleTimeoutId);\n      this._scrollIdleTimeoutId = undefined;\n    } else {\n      this._isScrollIdle = false;\n    }\n\n    this._scrollIdleTimeoutId = setTimeout(() => {\n      this._isScrollIdle = true;\n    }, this._scrollIdleDelay);\n  };\n\n  private _onItemMouseEnter(item: any, ev: React.MouseEvent<HTMLElement>): void {\n    if (this._shouldIgnoreMouseEvent()) {\n      return;\n    }\n\n    const targetElement = ev.currentTarget as HTMLElement;\n    targetElement.focus();\n  }\n\n  private _onItemMouseMove(item: any, ev: React.MouseEvent<HTMLElement>): void {\n    const targetElement = ev.currentTarget as HTMLElement;\n    this._gotMouseMove = true;\n\n    if (!this._isScrollIdle || document.activeElement === targetElement) {\n      return;\n    }\n\n    targetElement.focus();\n  }\n\n  private _onMouseItemLeave = (item: any, ev: React.MouseEvent<HTMLElement>): void => {\n    if (this._shouldIgnoreMouseEvent()) {\n      return;\n    }\n\n    /**\n     * IE11 focus() method forces parents to scroll to top of element.\n     * Edge and IE expose a setActive() function for focusable divs that\n     * sets the page focus but does not scroll the parent element.\n     */\n    if (this._host.current) {\n      if ((this._host.current as any).setActive) {\n        try {\n          (this._host.current as any).setActive();\n        } catch (e) {\n          /* no-op */\n        }\n      } else {\n        this._host.current.focus();\n      }\n    }\n  };\n\n  private _shouldIgnoreMouseEvent(): boolean {\n    return !this._isScrollIdle || !this._gotMouseMove;\n  }\n\n  private _onDismiss = (): void => {\n    this.setState({ isOpen: false });\n  };\n\n  /** Get all selected indexes for multi-select mode */\n  private _getSelectedIndexes(\n    options: IDropdownOption[],\n    selectedKey: string | number | string[] | number[] | null | undefined,\n  ): number[] {\n    if (selectedKey === undefined) {\n      if (this.props.multiSelect) {\n        return this._getAllSelectedIndices(options);\n      }\n      const selectedIndex = this._getSelectedIndex(options, null);\n      return selectedIndex !== -1 ? [selectedIndex] : [];\n    } else if (!Array.isArray(selectedKey)) {\n      const selectedIndex = this._getSelectedIndex(options, selectedKey);\n      return selectedIndex !== -1 ? [selectedIndex] : [];\n    }\n\n    const selectedIndices: number[] = [];\n    for (const key of selectedKey) {\n      const selectedIndex = this._getSelectedIndex(options, key);\n      selectedIndex !== -1 && selectedIndices.push(selectedIndex);\n    }\n    return selectedIndices;\n  }\n\n  private _getAllSelectedIndices(options: IDropdownOption[]): number[] {\n    return options\n      .map((option: IDropdownOption, index: number) => (option.selected ? index : -1))\n      .filter(index => index !== -1);\n  }\n\n  private _getSelectedIndex(options: IDropdownOption[], selectedKey: string | number | null): number {\n    return findIndex(options, option => {\n      // tslint:disable-next-line:triple-equals\n      if (selectedKey != null) {\n        return option.key === selectedKey;\n      } else {\n        // tslint:disable-next-line:deprecation\n        return !!option.selected || !!option.isSelected;\n      }\n    });\n  }\n\n  private _onDropdownBlur = (ev: React.FocusEvent<HTMLDivElement>): void => {\n    // If Dropdown disabled do not proceed with this logic.\n    const disabled = this._isDisabled();\n    if (disabled) {\n      return;\n    }\n\n    // hasFocus tracks whether the root element has focus so always update the state.\n    this.setState({ hasFocus: false });\n\n    if (this.state.isOpen) {\n      // Do not onBlur when the callout is opened\n      return;\n    }\n    if (this.props.onBlur) {\n      this.props.onBlur(ev);\n    }\n  };\n\n  private _onDropdownKeyDown = (ev: React.KeyboardEvent<HTMLDivElement>): void => {\n    // If Dropdown disabled do not process any keyboard events.\n    const disabled = this._isDisabled();\n    if (disabled) {\n      return;\n    }\n\n    // Take note if we are processing an alt (option) or meta (command) keydown.\n    // See comment in _shouldHandleKeyUp for reasoning.\n    this._lastKeyDownWasAltOrMeta = this._isAltOrMeta(ev);\n\n    if (this.props.onKeyDown) {\n      this.props.onKeyDown(ev);\n      if (ev.defaultPrevented) {\n        return;\n      }\n    }\n\n    let newIndex: number | undefined;\n    const selectedIndex = this.state.selectedIndices.length ? this.state.selectedIndices[0] : -1;\n    const containsExpandCollapseModifier = ev.altKey || ev.metaKey;\n    const isOpen = this.state.isOpen;\n\n    switch (ev.which) {\n      case KeyCodes.enter:\n        this.setState({\n          isOpen: !isOpen,\n        });\n        break;\n\n      case KeyCodes.escape:\n        if (!isOpen) {\n          return;\n        }\n\n        this.setState({\n          isOpen: false,\n        });\n        break;\n\n      case KeyCodes.up:\n        if (containsExpandCollapseModifier) {\n          if (isOpen) {\n            this.setState({ isOpen: false });\n            break;\n          }\n\n          return;\n        }\n        if (this.props.multiSelect) {\n          this.setState({ isOpen: true });\n        } else if (!this._isDisabled()) {\n          newIndex = this._moveIndex(ev, -1, selectedIndex - 1, selectedIndex);\n        }\n        break;\n\n      case KeyCodes.down:\n        if (containsExpandCollapseModifier) {\n          ev.stopPropagation();\n          ev.preventDefault();\n        }\n        if ((containsExpandCollapseModifier && !isOpen) || this.props.multiSelect) {\n          this.setState({ isOpen: true });\n        } else if (!this._isDisabled()) {\n          newIndex = this._moveIndex(ev, 1, selectedIndex + 1, selectedIndex);\n        }\n        break;\n\n      case KeyCodes.home:\n        if (!this.props.multiSelect) {\n          newIndex = this._moveIndex(ev, 1, 0, selectedIndex);\n        }\n        break;\n\n      case KeyCodes.end:\n        if (!this.props.multiSelect) {\n          newIndex = this._moveIndex(ev, -1, this.props.options.length - 1, selectedIndex);\n        }\n        break;\n\n      case KeyCodes.space:\n        // event handled in _onDropdownKeyUp\n        break;\n\n      default:\n        return;\n    }\n\n    if (newIndex !== selectedIndex) {\n      ev.stopPropagation();\n      ev.preventDefault();\n    }\n  };\n\n  private _onDropdownKeyUp = (ev: React.KeyboardEvent<HTMLDivElement>): void => {\n    // If Dropdown disabled do not process any keyboard events.\n    const disabled = this._isDisabled();\n    if (disabled) {\n      return;\n    }\n\n    const shouldHandleKey = this._shouldHandleKeyUp(ev);\n    const isOpen = this.state.isOpen;\n\n    if (this.props.onKeyUp) {\n      this.props.onKeyUp(ev);\n      if (ev.defaultPrevented) {\n        return;\n      }\n    }\n    switch (ev.which) {\n      case KeyCodes.space:\n        this.setState({\n          isOpen: !isOpen,\n        });\n        break;\n\n      default:\n        if (shouldHandleKey && isOpen) {\n          this.setState({ isOpen: false });\n        }\n        return;\n    }\n\n    ev.stopPropagation();\n    ev.preventDefault();\n  };\n\n  /**\n   * Returns true if the key for the event is alt (Mac option) or meta (Mac command).\n   */\n  private _isAltOrMeta(ev: React.KeyboardEvent<HTMLElement>): boolean {\n    return ev.which === KeyCodes.alt || ev.key === 'Meta';\n  }\n\n  /**\n   * We close the menu on key up only if ALL of the following are true:\n   * - Most recent key down was alt or meta (command)\n   * - The alt/meta key down was NOT followed by some other key (such as down/up arrow to\n   *   expand/collapse the menu)\n   * - We're not on a Mac (or iOS)\n   *\n   * This is because on Windows, pressing alt moves focus to the application menu bar or similar,\n   * closing any open context menus. There is not a similar behavior on Macs.\n   */\n  private _shouldHandleKeyUp(ev: React.KeyboardEvent<HTMLElement>): boolean {\n    const keyPressIsAltOrMetaAlone = this._lastKeyDownWasAltOrMeta && this._isAltOrMeta(ev);\n    this._lastKeyDownWasAltOrMeta = false;\n    return !!keyPressIsAltOrMetaAlone && !(isMac() || isIOS());\n  }\n\n  private _onZoneKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    let elementToFocus;\n\n    // Take note if we are processing an alt (option) or meta (command) keydown.\n    // See comment in _shouldHandleKeyUp for reasoning.\n    this._lastKeyDownWasAltOrMeta = this._isAltOrMeta(ev);\n    const containsExpandCollapseModifier = ev.altKey || ev.metaKey;\n\n    switch (ev.which) {\n      case KeyCodes.up:\n        if (containsExpandCollapseModifier) {\n          this.setState({ isOpen: false });\n        } else {\n          if (this._host.current) {\n            elementToFocus = getLastFocusable(this._host.current, this._host.current.lastChild as HTMLElement, true);\n          }\n        }\n        break;\n\n      // All directional keystrokes should be canceled when the zone is rendered.\n      // This avoids the body scroll from reacting and thus dismissing the dropdown.\n      case KeyCodes.home:\n      case KeyCodes.end:\n      case KeyCodes.pageUp:\n      case KeyCodes.pageDown:\n        break;\n\n      case KeyCodes.down:\n        if (!containsExpandCollapseModifier && this._host.current) {\n          elementToFocus = getFirstFocusable(this._host.current, this._host.current.firstChild as HTMLElement, true);\n        }\n        break;\n\n      case KeyCodes.escape:\n        this.setState({ isOpen: false });\n        break;\n\n      case KeyCodes.tab:\n        this.setState({ isOpen: false });\n        return;\n\n      default:\n        return;\n    }\n\n    if (elementToFocus) {\n      elementToFocus.focus();\n    }\n\n    ev.stopPropagation();\n    ev.preventDefault();\n  };\n\n  private _onZoneKeyUp = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    const shouldHandleKey = this._shouldHandleKeyUp(ev);\n\n    if (shouldHandleKey && this.state.isOpen) {\n      this.setState({ isOpen: false });\n      ev.preventDefault();\n    }\n  };\n\n  private _onDropdownClick = (ev: React.MouseEvent<HTMLDivElement>): void => {\n    if (this.props.onClick) {\n      this.props.onClick(ev);\n      if (ev.defaultPrevented) {\n        return;\n      }\n    }\n\n    const { isOpen } = this.state;\n    const disabled = this._isDisabled();\n\n    if (!disabled && !this._shouldOpenOnFocus()) {\n      this.setState({\n        isOpen: !isOpen,\n      });\n    }\n\n    this._isFocusedByClick = false; // reset\n  };\n\n  private _onDropdownMouseDown = (): void => {\n    this._isFocusedByClick = true;\n  };\n\n  private _onFocus = (ev: React.FocusEvent<HTMLDivElement>): void => {\n    const { isOpen, selectedIndices } = this.state;\n    const { multiSelect } = this.props;\n\n    const disabled = this._isDisabled();\n\n    if (!disabled) {\n      if (!this._isFocusedByClick && !isOpen && selectedIndices.length === 0 && !multiSelect) {\n        // Per aria: https://www.w3.org/TR/wai-aria-practices-1.1/#listbox_kbd_interaction\n        this._moveIndex(ev, 1, 0, -1);\n      }\n      if (this.props.onFocus) {\n        this.props.onFocus(ev);\n      }\n      const state: Pick<IDropdownState, 'hasFocus'> | Pick<IDropdownState, 'hasFocus' | 'isOpen'> = { hasFocus: true };\n      if (this._shouldOpenOnFocus()) {\n        (state as Pick<IDropdownState, 'hasFocus' | 'isOpen'>).isOpen = true;\n      }\n\n      this.setState(state);\n    }\n  };\n\n  /**\n   * Because the isDisabled prop is deprecated, we have had to repeat this logic all over the place.\n   * This helper method avoids all the repetition.\n   */\n  private _isDisabled: () => boolean | undefined = () => {\n    let { disabled } = this.props;\n    // tslint:disable-next-line:deprecation\n    const { isDisabled } = this.props;\n\n    // Remove this deprecation workaround at 1.0.0\n    if (disabled === undefined) {\n      disabled = isDisabled;\n    }\n\n    return disabled;\n  };\n\n  private _onRenderLabel = (props: IDropdownProps): JSX.Element | null => {\n    const { label, required, disabled } = props;\n\n    const labelStyles = this._classNames.subComponentStyles\n      ? (this._classNames.subComponentStyles.label as IStyleFunctionOrObject<ILabelStyleProps, ILabelStyles>)\n      : undefined;\n\n    return label ? (\n      <Label\n        className={this._classNames.label}\n        id={this._labelId}\n        required={required}\n        styles={labelStyles}\n        disabled={disabled}\n      >\n        {label}\n      </Label>\n    ) : null;\n  };\n\n  /**\n   * Returns true if dropdown should set to open on focus.\n   * Otherwise, isOpen state should be toggled on click\n   */\n  private _shouldOpenOnFocus(): boolean {\n    const { hasFocus } = this.state;\n    const { openOnKeyboardFocus } = this.props;\n    return !this._isFocusedByClick && openOnKeyboardFocus === true && !hasFocus;\n  }\n}\n","import * as React from 'react';\r\nimport { extendComponent } from './extendComponent';\r\n\r\n/**\r\n * Generates a function to be attached to a React component, which can be called\r\n * as a replacement to RAF. In-flight async calls will be auto canceled if the component\r\n * is unmounting before the async code is executed, preventing bugs where code\r\n * accesses things within the component after being unmounted.\r\n */\r\nexport const safeRequestAnimationFrame = (component: React.Component): ((cb: Function) => void) => {\r\n  let activeTimeouts: Set<number>;\r\n\r\n  return (cb: Function) => {\r\n    if (!activeTimeouts) {\r\n      activeTimeouts = new Set<number>();\r\n\r\n      extendComponent(component, {\r\n        componentWillUnmount: () => {\r\n          activeTimeouts.forEach((id: number) => cancelAnimationFrame(id));\r\n        },\r\n      });\r\n    }\r\n\r\n    const timeoutId = requestAnimationFrame(() => {\r\n      activeTimeouts.delete(timeoutId);\r\n      cb();\r\n    });\r\n\r\n    activeTimeouts.add(timeoutId);\r\n  };\r\n};\r\n","import { IDropdownStyles, IDropdownStyleProps } from './Dropdown.types';\nimport { IStyleFunction, IsFocusVisibleClassName } from '../../Utilities';\nimport { RectangleEdge } from '../../utilities/positioning';\nimport {\n  FontWeights,\n  HighContrastSelector,\n  IRawStyle,\n  IStyle,\n  getGlobalClassNames,\n  normalize,\n  HighContrastSelectorWhite,\n  getScreenSelector,\n  ScreenWidthMinMedium,\n} from '../../Styling';\n\nconst GlobalClassNames = {\n  root: 'ms-Dropdown-container',\n  label: 'ms-Dropdown-label',\n  dropdown: 'ms-Dropdown',\n  title: 'ms-Dropdown-title',\n  caretDownWrapper: 'ms-Dropdown-caretDownWrapper',\n  caretDown: 'ms-Dropdown-caretDown',\n  callout: 'ms-Dropdown-callout',\n  panel: 'ms-Dropdown-panel',\n  dropdownItems: 'ms-Dropdown-items',\n  dropdownItem: 'ms-Dropdown-item',\n  dropdownDivider: 'ms-Dropdown-divider',\n  dropdownOptionText: 'ms-Dropdown-optionText',\n  dropdownItemHeader: 'ms-Dropdown-header',\n  titleIsPlaceHolder: 'ms-Dropdown-titleIsPlaceHolder',\n  titleHasError: 'ms-Dropdown-title--hasError',\n};\n\nconst DROPDOWN_HEIGHT = 32;\nconst DROPDOWN_ITEM_HEIGHT = 36;\n\nconst highContrastAdjustMixin = {\n  [`${HighContrastSelector}, ${HighContrastSelectorWhite.replace('@media ', '')}`]: {\n    MsHighContrastAdjust: 'none',\n  },\n};\n\nconst highContrastItemAndTitleStateMixin: IRawStyle = {\n  selectors: {\n    [HighContrastSelector]: {\n      backgroundColor: 'Highlight',\n      borderColor: 'Highlight',\n      color: 'HighlightText',\n    },\n    ...highContrastAdjustMixin,\n  },\n};\n\nconst highContrastBorderState: IRawStyle = {\n  selectors: {\n    [HighContrastSelector]: {\n      borderColor: 'Highlight',\n    },\n  },\n};\n\nconst MinimumScreenSelector = getScreenSelector(0, ScreenWidthMinMedium);\n\nexport const getStyles: IStyleFunction<IDropdownStyleProps, IDropdownStyles> = props => {\n  const {\n    theme,\n    hasError,\n    hasLabel,\n    className,\n    isOpen,\n    disabled,\n    required,\n    isRenderingPlaceholder,\n    panelClassName,\n    calloutClassName,\n    calloutRenderEdge,\n  } = props;\n\n  if (!theme) {\n    throw new Error('theme is undefined or null in base Dropdown getStyles function.');\n  }\n\n  const globalClassnames = getGlobalClassNames(GlobalClassNames, theme);\n  const { palette, semanticColors, effects, fonts } = theme;\n\n  const rootHoverFocusActiveSelectorNeutralDarkMixin: IStyle = {\n    color: semanticColors.menuItemTextHovered,\n  };\n\n  const rootHoverFocusActiveSelectorNeutralPrimaryMixin: IStyle = {\n    color: semanticColors.menuItemText,\n  };\n\n  const borderColorError: IStyle = {\n    borderColor: semanticColors.errorText,\n  };\n\n  const dropdownItemStyle: IStyle = [\n    globalClassnames.dropdownItem,\n    {\n      backgroundColor: 'transparent',\n      boxSizing: 'border-box',\n      cursor: 'pointer',\n      display: 'flex',\n      alignItems: 'center',\n      padding: '0 8px',\n      width: '100%',\n      minHeight: DROPDOWN_ITEM_HEIGHT,\n      lineHeight: 20,\n      height: 0,\n      position: 'relative',\n      border: '1px solid transparent',\n      borderRadius: 0,\n      wordWrap: 'break-word',\n      overflowWrap: 'break-word',\n      textAlign: 'left',\n    },\n  ];\n\n  const selectedItemBackgroundColor = semanticColors.menuItemBackgroundPressed;\n\n  const itemSelectors = (isSelected: boolean = false) => {\n    return {\n      selectors: {\n        '&:hover:focus': [\n          {\n            color: semanticColors.menuItemTextHovered,\n            backgroundColor: !isSelected ? semanticColors.menuItemBackgroundHovered : selectedItemBackgroundColor,\n          },\n          highContrastItemAndTitleStateMixin,\n        ],\n        '&:focus': [\n          {\n            backgroundColor: !isSelected ? 'transparent' : selectedItemBackgroundColor,\n          },\n          highContrastItemAndTitleStateMixin,\n        ],\n        '&:active': [\n          {\n            color: semanticColors.menuItemTextHovered,\n            backgroundColor: !isSelected ? semanticColors.menuBackground : semanticColors.menuItemBackgroundHovered,\n          },\n          highContrastItemAndTitleStateMixin,\n        ],\n        [HighContrastSelector]: {\n          borderColor: 'Window',\n        },\n        [`.${IsFocusVisibleClassName} &:focus:after`]: {\n          left: 0,\n          top: 0,\n          bottom: 0,\n          right: 0,\n        },\n      },\n    };\n  };\n\n  const dropdownItemSelected: IStyle = [\n    ...dropdownItemStyle,\n    {\n      backgroundColor: selectedItemBackgroundColor,\n      color: semanticColors.menuItemTextHovered,\n    },\n    itemSelectors(true),\n    highContrastItemAndTitleStateMixin,\n  ];\n\n  const dropdownItemDisabled: IStyle = [\n    ...dropdownItemStyle,\n    {\n      color: semanticColors.disabledText,\n      cursor: 'default',\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText',\n        },\n      },\n    },\n  ];\n\n  const titleOpenBorderRadius =\n    calloutRenderEdge === RectangleEdge.bottom\n      ? `${effects.roundedCorner2} ${effects.roundedCorner2} 0 0`\n      : `0 0 ${effects.roundedCorner2} ${effects.roundedCorner2}`;\n\n  const calloutOpenBorderRadius =\n    calloutRenderEdge === RectangleEdge.bottom\n      ? `0 0 ${effects.roundedCorner2} ${effects.roundedCorner2}`\n      : `${effects.roundedCorner2} ${effects.roundedCorner2} 0 0`;\n\n  return {\n    root: [globalClassnames.root, className],\n    label: globalClassnames.label,\n    dropdown: [\n      globalClassnames.dropdown,\n      normalize,\n      fonts.medium,\n      {\n        color: semanticColors.menuItemText,\n        borderColor: semanticColors.focusBorder,\n        position: 'relative',\n        outline: 0,\n        userSelect: 'none',\n        selectors: {\n          ['&:hover .' + globalClassnames.title]: [\n            !disabled && rootHoverFocusActiveSelectorNeutralDarkMixin,\n            { borderColor: isOpen ? palette.neutralSecondary : palette.neutralPrimary },\n            highContrastBorderState,\n          ],\n          ['&:focus .' + globalClassnames.title]: [\n            !disabled && rootHoverFocusActiveSelectorNeutralDarkMixin,\n            { selectors: { [HighContrastSelector]: { color: 'Highlight' } } },\n          ],\n\n          ['&:focus:after']: [\n            {\n              pointerEvents: 'none',\n              content: \"''\",\n              position: 'absolute',\n              boxSizing: 'border-box',\n              top: '0px',\n              left: '0px',\n              width: '100%',\n              height: '100%',\n              // see https://github.com/microsoft/fluentui/pull/9182 for semantic color disc\n              border: !disabled ? `2px solid ${palette.themePrimary}` : 'none',\n              borderRadius: '2px',\n\n              selectors: {\n                [HighContrastSelector]: {\n                  borderColor: 'Highlight',\n                  color: 'Highlight',\n                },\n              },\n            },\n          ],\n          ['&:active .' + globalClassnames.title]: [\n            !disabled && rootHoverFocusActiveSelectorNeutralDarkMixin,\n            { borderColor: palette.themePrimary },\n            highContrastBorderState,\n          ],\n\n          ['&:hover .' + globalClassnames.caretDown]: !disabled && rootHoverFocusActiveSelectorNeutralPrimaryMixin,\n          ['&:focus .' + globalClassnames.caretDown]: [\n            !disabled && rootHoverFocusActiveSelectorNeutralPrimaryMixin,\n            { selectors: { [HighContrastSelector]: { color: 'Highlight' } } },\n          ],\n          ['&:active .' + globalClassnames.caretDown]: !disabled && rootHoverFocusActiveSelectorNeutralPrimaryMixin,\n\n          ['&:hover .' + globalClassnames.titleIsPlaceHolder]:\n            !disabled && rootHoverFocusActiveSelectorNeutralPrimaryMixin,\n          ['&:focus .' + globalClassnames.titleIsPlaceHolder]:\n            !disabled && rootHoverFocusActiveSelectorNeutralPrimaryMixin,\n          ['&:active .' + globalClassnames.titleIsPlaceHolder]:\n            !disabled && rootHoverFocusActiveSelectorNeutralPrimaryMixin,\n\n          ['&:hover .' + globalClassnames.titleHasError]: borderColorError,\n          ['&:active .' + globalClassnames.titleHasError]: borderColorError,\n        },\n      },\n      isOpen && 'is-open',\n      disabled && 'is-disabled',\n      required && 'is-required',\n      required &&\n        !hasLabel && {\n          selectors: {\n            ':before': {\n              content: `'*'`,\n              color: semanticColors.errorText,\n              position: 'absolute',\n              top: -5,\n              right: -10,\n            },\n            [HighContrastSelector]: {\n              selectors: {\n                ':after': {\n                  right: -14, // moving the * 4 pixel to right to alleviate border clipping in HC mode.\n                },\n              },\n            },\n          },\n        },\n    ],\n    title: [\n      globalClassnames.title,\n      normalize,\n      {\n        backgroundColor: semanticColors.inputBackground,\n        borderWidth: 1,\n        borderStyle: 'solid',\n        borderColor: semanticColors.inputBorder,\n        borderRadius: isOpen ? titleOpenBorderRadius : effects.roundedCorner2,\n        cursor: 'pointer',\n        display: 'block',\n        height: DROPDOWN_HEIGHT,\n        lineHeight: DROPDOWN_HEIGHT - 2,\n        padding: `0 28px 0 8px`,\n        position: 'relative',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n      },\n      isRenderingPlaceholder && [globalClassnames.titleIsPlaceHolder, { color: semanticColors.inputPlaceholderText }],\n      hasError && [globalClassnames.titleHasError, borderColorError],\n      disabled && {\n        backgroundColor: semanticColors.disabledBackground,\n        border: 'none',\n        color: semanticColors.disabledText,\n        cursor: 'default',\n        selectors: { [HighContrastSelector]: { border: '1px solid GrayText', color: 'GrayText' } },\n      },\n    ],\n    caretDownWrapper: [\n      globalClassnames.caretDownWrapper,\n      {\n        position: 'absolute',\n        top: 1,\n        right: 8,\n        height: DROPDOWN_HEIGHT,\n        lineHeight: DROPDOWN_HEIGHT - 2, // height minus the border\n      },\n      !disabled && {\n        cursor: 'pointer',\n      },\n    ],\n    caretDown: [\n      globalClassnames.caretDown,\n      { color: palette.neutralSecondary, fontSize: fonts.small.fontSize, pointerEvents: 'none' },\n      disabled && { color: semanticColors.disabledText, selectors: { [HighContrastSelector]: { color: 'GrayText' } } },\n    ],\n    errorMessage: { color: semanticColors.errorText, ...theme.fonts.small, paddingTop: 5 },\n    callout: [\n      globalClassnames.callout,\n      {\n        boxShadow: effects.elevation8,\n        borderRadius: calloutOpenBorderRadius,\n        selectors: {\n          ['.ms-Callout-main']: { borderRadius: calloutOpenBorderRadius },\n        },\n      },\n      calloutClassName,\n    ],\n    dropdownItemsWrapper: { selectors: { '&:focus': { outline: 0 } } },\n    dropdownItems: [globalClassnames.dropdownItems, { display: 'block' }],\n    dropdownItem: [...dropdownItemStyle, itemSelectors()],\n    dropdownItemSelected: dropdownItemSelected,\n    dropdownItemDisabled: dropdownItemDisabled,\n    dropdownItemSelectedAndDisabled: [dropdownItemSelected, dropdownItemDisabled, { backgroundColor: 'transparent' }],\n    dropdownItemHidden: [...dropdownItemStyle, { display: 'none' }],\n    dropdownDivider: [globalClassnames.dropdownDivider, { height: 1, backgroundColor: semanticColors.bodyDivider }],\n    dropdownOptionText: [\n      globalClassnames.dropdownOptionText,\n      {\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n        minWidth: 0,\n        maxWidth: '100%',\n        wordWrap: 'break-word',\n        overflowWrap: 'break-word',\n        margin: '1px',\n      },\n    ],\n    dropdownItemHeader: [\n      globalClassnames.dropdownItemHeader,\n      {\n        ...fonts.medium,\n        fontWeight: FontWeights.semibold,\n        color: semanticColors.menuHeader,\n        background: 'none',\n        backgroundColor: 'transparent',\n        border: 'none',\n        height: DROPDOWN_ITEM_HEIGHT,\n        lineHeight: DROPDOWN_ITEM_HEIGHT,\n        cursor: 'default',\n        padding: '0 8px',\n        userSelect: 'none',\n        textAlign: 'left',\n      },\n    ],\n    subComponentStyles: {\n      label: { root: { display: 'inline-block' } },\n      multiSelectItem: {\n        root: {\n          padding: 0,\n        },\n        label: {\n          alignSelf: 'stretch',\n          padding: '0 8px',\n          width: '100%',\n        },\n      },\n      panel: {\n        root: [panelClassName],\n        main: {\n          selectors: {\n            // In case of extra small screen sizes\n            [MinimumScreenSelector]: {\n              // panelWidth xs\n              width: 272,\n            },\n          },\n        },\n        contentInner: { padding: '0 0 20px' },\n      },\n    },\n  };\n};\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { DropdownBase } from './Dropdown.base';\nimport { getStyles } from './Dropdown.styles';\nimport { IDropdownProps, IDropdownStyleProps, IDropdownStyles } from './Dropdown.types';\n\nexport const Dropdown: React.FunctionComponent<IDropdownProps> = styled<\n  IDropdownProps,\n  IDropdownStyleProps,\n  IDropdownStyles\n>(DropdownBase, getStyles, undefined, {\n  scope: 'Dropdown',\n});\n","import { IButtonStyles } from '../Button.types';\nimport { ITheme, concatStyleSets, HighContrastSelector } from '../../../Styling';\nimport { memoizeFunction } from '../../../Utilities';\nimport { getStyles as getBaseButtonStyles } from '../BaseButton.styles';\n\nconst DEFAULT_BUTTON_HEIGHT = '40px';\nconst DEFAULT_PADDING = '0 4px';\n\nexport const getStyles = memoizeFunction(\n  (theme: ITheme, customStyles?: IButtonStyles): IButtonStyles => {\n    const baseButtonStyles: IButtonStyles = getBaseButtonStyles(theme);\n    const actionButtonStyles: IButtonStyles = {\n      root: {\n        padding: DEFAULT_PADDING,\n        height: DEFAULT_BUTTON_HEIGHT,\n        color: theme.palette.neutralPrimary,\n        backgroundColor: 'transparent',\n        border: '1px solid transparent',\n      },\n\n      rootHovered: {\n        color: theme.palette.themePrimary,\n        selectors: {\n          [HighContrastSelector]: {\n            borderColor: 'Highlight',\n            color: 'Highlight',\n          },\n        },\n      },\n\n      iconHovered: {\n        color: theme.palette.themePrimary,\n      },\n\n      rootPressed: {\n        color: theme.palette.black,\n      },\n\n      rootExpanded: {\n        color: theme.palette.themePrimary,\n      },\n\n      iconPressed: {\n        color: theme.palette.themeDarker,\n      },\n\n      rootDisabled: {\n        color: theme.palette.neutralTertiary,\n        backgroundColor: 'transparent',\n        borderColor: 'transparent',\n      },\n\n      rootChecked: {\n        color: theme.palette.black,\n      },\n\n      iconChecked: {\n        color: theme.palette.themeDarker,\n      },\n\n      flexContainer: {\n        justifyContent: 'flex-start',\n      },\n\n      icon: {\n        color: theme.palette.themeDarkAlt,\n      },\n\n      iconDisabled: {\n        color: 'inherit',\n      },\n\n      menuIcon: {\n        color: theme.palette.neutralSecondary,\n      },\n\n      textContainer: {\n        flexGrow: 0,\n      },\n    };\n\n    return concatStyleSets(baseButtonStyles, actionButtonStyles, customStyles)!;\n  },\n);\n","import { ActionButton } from '../ActionButton/ActionButton';\n\n/**\n * {@docCategory Button}\n */\nexport const CommandButton = ActionButton;\n","import * as React from 'react';\nimport { BaseButton } from '../BaseButton';\nimport { customizable, nullRender } from '../../../Utilities';\nimport { IButtonProps } from '../Button.types';\nimport { getStyles } from './ActionButton.styles';\n\n/**\n * {@docCategory Button}\n */\n@customizable('ActionButton', ['theme', 'styles'], true)\nexport class ActionButton extends React.Component<IButtonProps, {}> {\n  public render(): JSX.Element {\n    const { styles, theme } = this.props;\n\n    return (\n      <BaseButton\n        {...this.props}\n        variantClassName=\"ms-Button--action ms-Button--command\"\n        styles={getStyles(theme!, styles)}\n        onRenderDescription={nullRender}\n      />\n    );\n  }\n}\n","import * as React from 'react';\nimport { PivotBase } from './Pivot.base';\nimport { IStyle, ITheme } from '../../Styling';\nimport { IRefObject, IStyleFunctionOrObject } from '../../Utilities';\nimport { PivotItem } from './PivotItem';\n\n/**\n * {@docCategory Pivot}\n */\nexport interface IPivot {\n  /**\n   * Sets focus to the first pivot tab.\n   */\n  focus(): void;\n}\n\n/**\n * {@docCategory Pivot}\n */\nexport interface IPivotProps extends React.ClassAttributes<PivotBase>, React.HTMLAttributes<HTMLDivElement> {\n  /**\n   * Optional callback to access the IPivot interface. Use this instead of ref for accessing\n   * the public methods and properties of the component.\n   */\n  componentRef?: IRefObject<IPivot>;\n\n  /**\n   * Call to provide customized styling that will layer on top of the variant rules.\n   */\n  styles?: IStyleFunctionOrObject<IPivotStyleProps, IPivotStyles>;\n\n  /**\n   * Theme provided by High-Order Component.\n   */\n  theme?: ITheme;\n\n  /**\n   * Additional css class to apply to the Pivot\n   * @defaultvalue undefined\n   */\n  className?: string;\n\n  /**\n   * Default selected key for the pivot. Only provide this if the pivot is an uncontrolled component;\n   * otherwise, use the `selectedKey` property.\n   *\n   * This property is also mutually exclusive with `defaultSelectedIndex`.\n   */\n  defaultSelectedKey?: string;\n\n  /**\n   * Default selected index for the pivot. Only provide this if the pivot is an uncontrolled component;\n   * otherwise, use the `selectedKey` property.\n   *\n   * This property is also mutually exclusive with `defaultSelectedKey`.\n   */\n  defaultSelectedIndex?: number;\n\n  /**\n   * Index of the pivot item initially selected. Mutually exclusive with `initialSelectedKey`.\n   * Only provide this if the pivot is an uncontrolled component; otherwise, use `selectedKey`.\n   *\n   * @deprecated Use `defaultSelectedIndex`\n   */\n  initialSelectedIndex?: number;\n\n  /**\n   * Key of the pivot item initially selected. Mutually exclusive with `initialSelectedIndex`.\n   * Only provide this if the pivot is an uncontrolled component; otherwise, use `selectedKey`.\n   *\n   * @deprecated Use `defaultSelectedKey`\n   */\n  initialSelectedKey?: string;\n\n  /**\n   * Key of the selected pivot item. Updating this will override the Pivot's selected item state.\n   * Only provide this if the pivot is a controlled component where you are maintaining the\n   * current state; otherwise, use `defaultSelectedKey`.\n   */\n  selectedKey?: string | null;\n\n  /**\n   * Callback for when the selected pivot item is changed.\n   */\n  onLinkClick?: (item?: PivotItem, ev?: React.MouseEvent<HTMLElement>) => void;\n\n  /**\n   * PivotLinkSize to use (normal, large)\n   */\n  linkSize?: PivotLinkSize;\n\n  /**\n   * PivotLinkFormat to use (links, tabs)\n   */\n  linkFormat?: PivotLinkFormat;\n\n  /**\n   * Whether to skip rendering the tabpanel with the content of the selected tab.\n   * Use this prop if you plan to separately render the tab content\n   * and don't want to leave an empty tabpanel in the page that may confuse Screen Readers.\n   */\n  headersOnly?: boolean;\n\n  /**\n   * Callback to customize how IDs are generated for each tab header.\n   * Useful if you're rendering content outside and need to connect aria-labelledby.\n   */\n  getTabId?: (itemKey: string, index: number) => string;\n}\n\n/**\n * {@docCategory Pivot}\n */\nexport type IPivotStyleProps = Required<Pick<IPivotProps, 'theme'>> &\n  Pick<IPivotProps, 'className'> & {\n    /** Indicates whether Pivot has large format. */\n    rootIsLarge?: boolean;\n    /** Indicates whether Pivot has tabbed format. */\n    rootIsTabs?: boolean;\n    /**\n     * Indicates whether Pivot link is selected.\n     * @deprecated Is not populated with valid value. Specify `linkIsSelected` styling instead.\n     */\n    linkIsSelected?: boolean;\n  };\n\n/**\n * {@docCategory Pivot}\n */\nexport interface IPivotStyles {\n  /**\n   * Style for the root element.\n   */\n  root: IStyle;\n  link: IStyle;\n  linkContent: IStyle;\n  linkIsSelected: IStyle;\n  text: IStyle;\n  count: IStyle;\n  icon: IStyle;\n  itemContainer?: IStyle;\n}\n\n/**\n * {@docCategory Pivot}\n */\nexport enum PivotLinkFormat {\n  /**\n   * Display Pivot Links as links\n   */\n  links = 0,\n\n  /**\n   * Display Pivot Links as Tabs\n   */\n  tabs = 1,\n}\n\n/**\n * {@docCategory Pivot}\n */\nexport enum PivotLinkSize {\n  /**\n   * Display Link using normal font size\n   */\n  normal = 0,\n\n  /**\n   * Display links using large font size\n   */\n  large = 1,\n}\n","import * as React from 'react';\nimport { getNativeProps, divProperties, initializeComponentRef, warnDeprecations } from '../../Utilities';\nimport { IPivotItemProps } from './PivotItem.types';\n\nconst COMPONENT_NAME = 'PivotItem';\n\nexport class PivotItem extends React.Component<IPivotItemProps, {}> {\n  constructor(props: IPivotItemProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    warnDeprecations(COMPONENT_NAME, props, {\n      linkText: 'headerText',\n    });\n  }\n\n  public render(): JSX.Element {\n    return <div {...getNativeProps(this.props, divProperties)}>{this.props.children}</div>;\n  }\n}\n","import * as React from 'react';\nimport {\n  warnDeprecations,\n  KeyCodes,\n  getId,\n  getNativeProps,\n  divProperties,\n  classNamesFunction,\n  warn,\n  initializeComponentRef,\n} from '../../Utilities';\nimport { CommandButton } from '../../Button';\nimport { IPivotProps, IPivotStyleProps, IPivotStyles } from './Pivot.types';\nimport { IPivotItemProps } from './PivotItem.types';\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport { PivotItem } from './PivotItem';\nimport { PivotLinkFormat } from './Pivot.types';\nimport { PivotLinkSize } from './Pivot.types';\nimport { Icon } from '../../Icon';\n\nconst getClassNames = classNamesFunction<IPivotStyleProps, IPivotStyles>();\nconst PivotName = 'Pivot';\n\nexport interface IPivotState {\n  selectedKey: string | undefined;\n}\n\ntype PivotLinkCollection = {\n  links: IPivotItemProps[];\n  keyToIndexMapping: { [key: string]: number };\n  keyToTabIdMapping: { [key: string]: string };\n};\n\n/**\n *  Usage:\n *\n *     <Pivot>\n *       <PivotItem headerText=\"Foo\">\n *         <Label>Pivot #1</Label>\n *       </PivotItem>\n *       <PivotItem headerText=\"Bar\">\n *         <Label>Pivot #2</Label>\n *       </PivotItem>\n *       <PivotItem headerText=\"Bas\">\n *         <Label>Pivot #3</Label>\n *       </PivotItem>\n *     </Pivot>\n */\nexport class PivotBase extends React.Component<IPivotProps, IPivotState> {\n  private _pivotId: string;\n  private _focusZone = React.createRef<FocusZone>();\n  private _classNames: { [key in keyof IPivotStyles]: string };\n\n  constructor(props: IPivotProps) {\n    super(props);\n\n    initializeComponentRef(this);\n\n    if (process.env.NODE_ENV !== 'production') {\n      warnDeprecations(PivotName, props, {\n        initialSelectedKey: 'defaultSelectedKey',\n        initialSelectedIndex: 'defaultSelectedIndex',\n      });\n    }\n\n    this._pivotId = getId(PivotName);\n    const links: IPivotItemProps[] = this._getPivotLinks(props).links;\n\n    // tslint:disable-next-line:deprecation\n    const { defaultSelectedKey = props.initialSelectedKey, defaultSelectedIndex = props.initialSelectedIndex } = props;\n\n    let selectedKey: string | undefined;\n\n    if (defaultSelectedKey) {\n      selectedKey = defaultSelectedKey;\n    } else if (typeof defaultSelectedIndex === 'number') {\n      selectedKey = links[defaultSelectedIndex].itemKey!;\n    } else if (links.length) {\n      selectedKey = links[0].itemKey!;\n    }\n\n    this.state = {\n      selectedKey,\n    };\n  }\n\n  /**\n   * Sets focus to the first pivot tab.\n   */\n  public focus(): void {\n    if (this._focusZone.current) {\n      this._focusZone.current.focus();\n    }\n  }\n\n  public render(): JSX.Element {\n    const linkCollection = this._getPivotLinks(this.props);\n    const selectedKey = this._getSelectedKey(linkCollection);\n\n    const divProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(this.props, divProperties);\n\n    this._classNames = this._getClassNames(this.props);\n\n    return (\n      <div role=\"toolbar\" {...divProps}>\n        {this._renderPivotLinks(linkCollection, selectedKey)}\n        {selectedKey && this._renderPivotItem(linkCollection, selectedKey)}\n      </div>\n    );\n  }\n\n  private _getSelectedKey(linkCollection: PivotLinkCollection) {\n    const { selectedKey: propsSelectedKey } = this.props;\n\n    if (this._isKeyValid(linkCollection, propsSelectedKey) || propsSelectedKey === null) {\n      return propsSelectedKey;\n    }\n\n    const { selectedKey: stateSelectedKey } = this.state;\n    if (this._isKeyValid(linkCollection, stateSelectedKey)) {\n      return stateSelectedKey;\n    }\n\n    if (linkCollection.links.length) {\n      return linkCollection.links[0].itemKey;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Renders the set of links to route between pivots\n   */\n  private _renderPivotLinks(linkCollection: PivotLinkCollection, selectedKey: string | null | undefined): JSX.Element {\n    const items = linkCollection.links.map(l => this._renderPivotLink(linkCollection, l, selectedKey));\n\n    return (\n      <FocusZone\n        className={this._classNames.root}\n        role=\"tablist\"\n        componentRef={this._focusZone}\n        direction={FocusZoneDirection.horizontal}\n      >\n        {items}\n      </FocusZone>\n    );\n  }\n\n  private _renderPivotLink = (\n    linkCollection: PivotLinkCollection,\n    link: IPivotItemProps,\n    selectedKey: string | null | undefined,\n  ): JSX.Element => {\n    const { itemKey, headerButtonProps } = link;\n    const tabId = linkCollection.keyToTabIdMapping[itemKey!];\n    const { onRenderItemLink } = link;\n    let linkContent: JSX.Element | null;\n    const isSelected: boolean = selectedKey === itemKey;\n\n    if (onRenderItemLink) {\n      linkContent = onRenderItemLink(link, this._renderLinkContent);\n    } else {\n      linkContent = this._renderLinkContent(link);\n    }\n\n    let contentString = link.headerText || '';\n    contentString += link.itemCount ? ' (' + link.itemCount + ')' : '';\n    // Adding space supplementary for icon\n    contentString += link.itemIcon ? ' xx' : '';\n\n    return (\n      <CommandButton\n        {...headerButtonProps}\n        id={tabId}\n        key={itemKey}\n        className={isSelected ? this._classNames.linkIsSelected : this._classNames.link}\n        onClick={this._onLinkClick.bind(this, itemKey)}\n        onKeyPress={this._onKeyPress.bind(this, itemKey)}\n        ariaLabel={link.ariaLabel}\n        role=\"tab\"\n        aria-selected={isSelected}\n        name={link.headerText}\n        keytipProps={link.keytipProps}\n        data-content={contentString}\n      >\n        {linkContent}\n      </CommandButton>\n    );\n  };\n\n  private _renderLinkContent = (link: IPivotItemProps): JSX.Element => {\n    const { itemCount, itemIcon, headerText } = link;\n    const classNames = this._classNames;\n\n    return (\n      <span className={classNames.linkContent}>\n        {itemIcon !== undefined && (\n          <span className={classNames.icon}>\n            <Icon iconName={itemIcon} />\n          </span>\n        )}\n        {headerText !== undefined && <span className={classNames.text}> {link.headerText}</span>}\n        {itemCount !== undefined && <span className={classNames.count}> ({itemCount})</span>}\n      </span>\n    );\n  };\n\n  /**\n   * Renders the current Pivot Item\n   */\n  private _renderPivotItem(linkCollection: PivotLinkCollection, itemKey: string | undefined): JSX.Element | null {\n    if (this.props.headersOnly || !itemKey) {\n      return null;\n    }\n\n    const index = linkCollection.keyToIndexMapping[itemKey];\n    const selectedTabId = linkCollection.keyToTabIdMapping[itemKey];\n\n    return (\n      <div role=\"tabpanel\" aria-labelledby={selectedTabId} className={this._classNames.itemContainer}>\n        {React.Children.toArray(this.props.children)[index]}\n      </div>\n    );\n  }\n\n  /**\n   * Gets the set of PivotLinks as array of IPivotItemProps\n   * The set of Links is determined by child components of type PivotItem\n   */\n  private _getPivotLinks(props: IPivotProps): PivotLinkCollection {\n    const result: PivotLinkCollection = {\n      links: [],\n      keyToIndexMapping: {},\n      keyToTabIdMapping: {},\n    };\n\n    React.Children.map(React.Children.toArray(props.children), (child: React.ReactChild, index: number) => {\n      if (_isPivotItem(child)) {\n        const pivotItem = child;\n        const { linkText, ...pivotItemProps } = pivotItem.props;\n        const itemKey = pivotItem.props.itemKey || index.toString();\n\n        result.links.push({\n          // Use linkText (deprecated) if headerText is not provided\n          headerText: linkText,\n          ...pivotItemProps,\n          itemKey: itemKey,\n        });\n        result.keyToIndexMapping[itemKey] = index;\n        result.keyToTabIdMapping[itemKey] = this._getTabId(itemKey, index);\n      } else {\n        warn('The children of a Pivot component must be of type PivotItem to be rendered.');\n      }\n    });\n\n    return result;\n  }\n\n  /**\n   * Generates the Id for the tab button.\n   */\n  private _getTabId(itemKey: string, index: number): string {\n    if (this.props.getTabId) {\n      return this.props.getTabId(itemKey, index);\n    }\n\n    return this._pivotId + `-Tab${index}`;\n  }\n\n  /**\n   * whether the key exists in the pivot items.\n   */\n  private _isKeyValid(linkCollection: PivotLinkCollection, itemKey: string | null | undefined): boolean {\n    return itemKey !== undefined && itemKey !== null && linkCollection.keyToIndexMapping[itemKey] !== undefined;\n  }\n\n  /**\n   * Handles the onClick event on PivotLinks\n   */\n  private _onLinkClick(itemKey: string, ev: React.MouseEvent<HTMLElement>): void {\n    ev.preventDefault();\n    this._updateSelectedItem(itemKey, ev);\n  }\n\n  /**\n   * Handle the onKeyPress event on the PivotLinks\n   */\n  private _onKeyPress(itemKey: string, ev: React.KeyboardEvent<HTMLElement>): void {\n    if (ev.which === KeyCodes.enter) {\n      ev.preventDefault();\n      this._updateSelectedItem(itemKey);\n    }\n  }\n\n  /**\n   * Updates the state with the new selected index\n   */\n  private _updateSelectedItem(itemKey: string, ev?: React.MouseEvent<HTMLElement>): void {\n    this.setState({\n      selectedKey: itemKey,\n    });\n\n    const linkCollection = this._getPivotLinks(this.props);\n\n    if (this.props.onLinkClick && linkCollection.keyToIndexMapping[itemKey] >= 0) {\n      const index = linkCollection.keyToIndexMapping[itemKey];\n\n      // React.Element<any> cannot directly convert to PivotItem.\n      const item = React.Children.toArray(this.props.children)[index];\n\n      if (_isPivotItem(item)) {\n        this.props.onLinkClick(item, ev);\n      }\n    }\n  }\n\n  private _getClassNames(props: IPivotProps): { [key in keyof IPivotStyles]: string } {\n    const { theme } = props;\n    const rootIsLarge: boolean = props.linkSize === PivotLinkSize.large;\n    const rootIsTabs: boolean = props.linkFormat === PivotLinkFormat.tabs;\n\n    return getClassNames(props.styles!, {\n      theme: theme!,\n      rootIsLarge,\n      rootIsTabs,\n    });\n  }\n}\n\nfunction _isPivotItem(item: React.ReactNode): item is PivotItem {\n  // In theory, we should be able to just check item.type === PivotItem.\n  // However, under certain unclear circumstances (see https://github.com/microsoft/fluentui/issues/10785),\n  // the object identity is different despite the function implementation being the same.\n  return (\n    !!item &&\n    typeof item === 'object' &&\n    !!(item as React.ReactElement).type &&\n    ((item as React.ReactElement).type as React.ComponentType).name === PivotItem.name\n  );\n}\n","import { IPivotStyleProps, IPivotStyles } from './Pivot.types';\nimport {\n  AnimationVariables,\n  getGlobalClassNames,\n  HighContrastSelector,\n  IStyle,\n  normalize,\n  FontWeights,\n} from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\n\nconst globalClassNames = {\n  count: 'ms-Pivot-count',\n  icon: 'ms-Pivot-icon',\n  linkIsSelected: 'is-selected',\n  link: 'ms-Pivot-link',\n  linkContent: 'ms-Pivot-linkContent',\n  root: 'ms-Pivot',\n  rootIsLarge: 'ms-Pivot--large',\n  rootIsTabs: 'ms-Pivot--tabs',\n  text: 'ms-Pivot-text',\n};\n\nconst linkStyles = (props: IPivotStyleProps): IStyle[] => {\n  const { rootIsLarge, rootIsTabs } = props;\n  const { semanticColors, fonts } = props.theme;\n  return [\n    fonts.medium,\n    {\n      color: semanticColors.actionLink,\n      display: 'inline-block',\n      lineHeight: 44,\n      height: 44,\n      marginRight: 8,\n      padding: '0 8px',\n      textAlign: 'center',\n      position: 'relative',\n      backgroundColor: 'transparent',\n      border: 0,\n      borderRadius: 0,\n      selectors: {\n        ':before': {\n          backgroundColor: 'transparent',\n          bottom: 0,\n          content: '\"\"',\n          height: 2,\n          left: 8,\n          position: 'absolute',\n          right: 8,\n          transition: `left ${AnimationVariables.durationValue2} ${AnimationVariables.easeFunction2},\n                      right ${AnimationVariables.durationValue2} ${AnimationVariables.easeFunction2}`,\n        },\n        ':after': {\n          color: 'transparent',\n          content: 'attr(data-content)',\n          display: 'block',\n          fontWeight: FontWeights.bold,\n          height: 1,\n          overflow: 'hidden',\n          visibility: 'hidden',\n        },\n        ':hover': {\n          backgroundColor: semanticColors.buttonBackgroundHovered,\n          color: semanticColors.buttonTextHovered,\n          cursor: 'pointer',\n        },\n        ':active': {\n          backgroundColor: semanticColors.buttonBackgroundPressed,\n          color: semanticColors.buttonTextHovered,\n        },\n        ':focus': {\n          outline: 'none',\n        },\n        [`.${IsFocusVisibleClassName} &:focus`]: {\n          outline: `1px solid ${semanticColors.focusBorder}`,\n        },\n        [`.${IsFocusVisibleClassName} &:focus:after`]: {\n          content: 'attr(data-content)',\n          position: 'relative',\n          border: 0,\n        },\n      },\n    },\n    rootIsLarge && {\n      fontSize: fonts.large.fontSize,\n    },\n    rootIsTabs && [\n      {\n        marginRight: 0,\n        height: 44,\n        lineHeight: 44,\n        backgroundColor: semanticColors.buttonBackground,\n        padding: '0 10px',\n        verticalAlign: 'top',\n        selectors: {\n          ':focus': {\n            outlineOffset: '-1px',\n          },\n          [`.${IsFocusVisibleClassName} &:focus::before`]: {\n            height: 'auto',\n            background: 'transparent',\n            transition: 'none',\n          },\n        },\n      },\n    ],\n  ];\n};\n\nexport const getStyles = (props: IPivotStyleProps): IPivotStyles => {\n  const { className, rootIsLarge, rootIsTabs, theme } = props;\n  const { semanticColors, fonts } = theme;\n\n  const classNames = getGlobalClassNames(globalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      fonts.medium,\n      normalize,\n      {\n        position: 'relative',\n        color: semanticColors.link,\n        whiteSpace: 'nowrap',\n      },\n      rootIsLarge && classNames.rootIsLarge,\n      rootIsTabs && classNames.rootIsTabs,\n      className,\n    ],\n    link: [\n      classNames.link,\n      ...linkStyles(props),\n      rootIsTabs && {\n        selectors: {\n          '&:hover, &:focus': {\n            color: semanticColors.buttonTextCheckedHovered,\n          },\n          '&:active, &:hover': {\n            color: semanticColors.primaryButtonText,\n            backgroundColor: semanticColors.primaryButtonBackground,\n          },\n        },\n      },\n    ],\n    linkIsSelected: [\n      classNames.link,\n      classNames.linkIsSelected,\n      ...linkStyles(props),\n      {\n        fontWeight: FontWeights.semibold,\n        selectors: {\n          ':before': {\n            backgroundColor: semanticColors.inputBackgroundChecked,\n            selectors: {\n              [HighContrastSelector]: {\n                backgroundColor: 'Highlight',\n              },\n            },\n          },\n          ':hover::before': {\n            left: 0,\n            right: 0,\n          },\n          [HighContrastSelector]: {\n            color: 'Highlight',\n          },\n        },\n      },\n      rootIsTabs && {\n        backgroundColor: semanticColors.primaryButtonBackground,\n        color: semanticColors.primaryButtonText,\n        fontWeight: FontWeights.regular,\n        selectors: {\n          ':before': {\n            backgroundColor: 'transparent',\n            transition: 'none',\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            content: '\"\"',\n            height: 'auto',\n          },\n          ':hover': {\n            backgroundColor: semanticColors.primaryButtonBackgroundHovered,\n            color: semanticColors.primaryButtonText,\n          },\n          '&:active': {\n            backgroundColor: semanticColors.primaryButtonBackgroundPressed,\n            color: semanticColors.primaryButtonText,\n          },\n          [HighContrastSelector]: {\n            fontWeight: FontWeights.semibold,\n            color: 'HighlightText',\n            background: 'Highlight',\n            MsHighContrastAdjust: 'none',\n          },\n        },\n      },\n    ],\n    linkContent: [\n      classNames.linkContent,\n      {\n        flex: '0 1 100%',\n        selectors: {\n          '& > * ': {\n            marginLeft: 4,\n          },\n          '& > *:first-child': {\n            marginLeft: 0,\n          },\n        },\n      },\n    ],\n    text: [\n      classNames.text,\n      {\n        display: 'inline-block',\n        verticalAlign: 'top',\n      },\n    ],\n    count: [\n      classNames.count,\n      {\n        display: 'inline-block',\n        verticalAlign: 'top',\n      },\n    ],\n    icon: classNames.icon,\n  };\n};\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { IPivotProps, IPivotStyleProps, IPivotStyles } from './Pivot.types';\nimport { PivotBase } from './Pivot.base';\nimport { getStyles } from './Pivot.styles';\n\n/**\n * The Pivot control and related tabs pattern are used for navigating frequently accessed,\n * distinct content categories. Pivots allow for navigation between two or more content\n * views and relies on text headers to articulate the different sections of content.\n */\nexport const Pivot: React.FunctionComponent<IPivotProps> = styled<IPivotProps, IPivotStyleProps, IPivotStyles>(\n  PivotBase,\n  getStyles,\n  undefined,\n  {\n    scope: 'Pivot',\n  },\n);\n","import * as React from 'react';\nimport { classNamesFunction } from '../../Utilities';\nimport { ISeparatorProps, ISeparatorStyles, ISeparatorStyleProps } from './Separator.types';\n\nconst getClassNames = classNamesFunction<ISeparatorStyleProps, ISeparatorStyles>();\n\nexport const SeparatorBase: React.FunctionComponent<ISeparatorProps> = (props: ISeparatorProps): JSX.Element => {\n  const { styles, theme, className, vertical, alignContent } = props;\n\n  const _classNames = getClassNames(styles!, {\n    theme: theme!,\n    className,\n    alignContent: alignContent,\n    vertical: vertical,\n  });\n\n  return (\n    <div className={_classNames.root}>\n      <div className={_classNames.content} role=\"separator\" aria-orientation={vertical ? 'vertical' : 'horizontal'}>\n        {props.children}\n      </div>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { ISeparatorProps, ISeparatorStyleProps, ISeparatorStyles } from './Separator.types';\nimport { getStyles } from './Separator.styles';\nimport { SeparatorBase } from './Separator.base';\n\nexport const Separator: React.FunctionComponent<ISeparatorProps> = styled<\n  ISeparatorProps,\n  ISeparatorStyleProps,\n  ISeparatorStyles\n>(SeparatorBase, getStyles, undefined, {\n  scope: 'Separator',\n});\n","import { ISeparatorStyleProps, ISeparatorStyles } from './Separator.types';\n\nexport const getStyles = (props: ISeparatorStyleProps): ISeparatorStyles => {\n  const { theme, alignContent, vertical, className } = props;\n\n  const alignStart = alignContent === 'start';\n  const alignCenter = alignContent === 'center';\n  const alignEnd = alignContent === 'end';\n\n  return {\n    root: [\n      theme.fonts.medium,\n      {\n        position: 'relative',\n      },\n      alignContent && {\n        textAlign: alignContent,\n      },\n      !alignContent && {\n        textAlign: 'center',\n      },\n      vertical &&\n        (alignCenter || !alignContent) && {\n          verticalAlign: 'middle',\n        },\n      vertical &&\n        alignStart && {\n          verticalAlign: 'top',\n        },\n      vertical &&\n        alignEnd && {\n          verticalAlign: 'bottom',\n        },\n      vertical && {\n        padding: '0 4px',\n        height: 'inherit',\n        display: 'table-cell',\n        zIndex: 1,\n        selectors: {\n          ':after': {\n            backgroundColor: theme.palette.neutralLighter,\n            width: '1px',\n            content: '\"\"',\n            position: 'absolute',\n            top: '0',\n            bottom: '0',\n            left: '50%',\n            right: '0',\n            zIndex: -1,\n          },\n        },\n      },\n      !vertical && {\n        padding: '4px 0',\n        selectors: {\n          ':before': {\n            backgroundColor: theme.palette.neutralLighter,\n            height: '1px',\n            content: '\"\"',\n            display: 'block',\n            position: 'absolute',\n            top: '50%',\n            bottom: '0',\n            left: '0',\n            right: '0',\n          },\n        },\n      },\n      className,\n    ],\n    content: [\n      {\n        position: 'relative',\n        display: 'inline-block',\n        padding: '0 12px',\n        color: theme.semanticColors.bodyText,\n        background: theme.semanticColors.bodyBackground,\n      },\n      vertical && {\n        padding: '12px 0',\n      },\n    ],\n  };\n};\n","import React, { useEffect, useState } from 'react'\nimport { Pivot, PivotItem } from 'office-ui-fabric-react/lib/Pivot';\nimport { Label } from 'office-ui-fabric-react/lib/Label';\nimport { Separator } from 'office-ui-fabric-react/lib/Separator';\nimport { Image } from 'office-ui-fabric-react/lib/Image';\nimport { DetailsList, IColumn } from 'office-ui-fabric-react/lib/DetailsList';\nimport { PrimaryButton, DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport { Dropdown } from 'office-ui-fabric-react/lib/Dropdown';\nimport { connect } from 'react-redux';\nimport { Stack, IStackStyles, IStackProps } from 'office-ui-fabric-react/lib/Stack';\n\nimport { setUser } from '../../actions/userAction'\nimport api from '../../utils/api';\n\nexport interface ProfileProps {\n  id: string;\n  user: any;\n  setUser: any;\n};\nexport interface User {\n  role: string;\n  avatar: any,\n  availableTimeBlock: any[],\n  _id: string,\n  username: string,\n  password: string,\n  fullName: string,\n}\nexport interface TimeItem {\n  key: string,\n  name: string,\n  startTime: string,\n  endTime: string,\n} \n\nconst Profile: React.FC <ProfileProps> = (props: ProfileProps) => {\n  \n  const initialGroups = [\n    { key: 'sun', name: 'Chủ nhật', startIndex: 0, count: 0, level: 0 },\n    { key: 'mon', name: 'Thứ hai', startIndex: 0, count: 0, level: 0 },\n    { key: 'tue', name: 'Thứ ba', startIndex: 0, count: 0, level: 0 },\n    { key: 'wed', name: 'Thứ tư', startIndex: 0, count: 0, level: 0 },\n    { key: 'thu', name: 'Thứ năm', startIndex: 0, count: 0, level: 0 },\n    { key: 'fri', name: 'Thứ sáu', startIndex: 0, count: 0, level: 0 },\n    { key: 'sat', name: 'Thứ bảy', startIndex: 0, count: 0, level: 0 },\n  ]\n  \n  let [rand, setRand] = useState(0);\n  let [user, setUser] = useState({\n    role: '',\n    avatar: null,\n    availableTimeBlock: [],\n    _id: \"\",\n    username: \"\",\n    password: \"\",\n    fullName: \"\"\n  } as User);\n\n  const forceReRender = () => setRand(Math.round(Math.random() * 1000000000));\n\n  let groups = initialGroups;\n  let curInd = 0;\n  if (user.availableTimeBlock) \n    user.availableTimeBlock.forEach((day: any, index: number) => {\n      groups[index].startIndex = curInd;\n      groups[index].count = day.length;\n      curInd += day.length;\n    })\n\n  useEffect(() => {\n    if (props.id) {\n      // Admin only\n    }\n    else {\n      const user = props.user;\n      if (!user.hasOwnProperty('_id')) api.getSession().then((res: any) => {\n        if (res.success) {\n          props.setUser(res.data);\n          setUser(res.data);\n          forceReRender();\n        }\n      })\n      else \n        setUser(user);\n    }\n  }, [user._id])\n\n  const _columns = [ \n    { key: 'time', name: 'Thời gian', fieldName: 'time', minWidth: 200, maxWidth: 200, isResizable: true },\n    { key: 'startTime', name: 'Bắt đầu', fieldName: 'startTime', minWidth: 150, maxWidth: 200 },\n    { key: 'endTime', name: 'Kết thúc', fieldName: 'endTime', minWidth: 150, maxWidth: 200 },\n    { key: 'delete', name: '', fieldName: 'delete', minWidth: 200, maxWidth: 200 },\n  ]\n\n  const deleteRow = (index) => {\n    let cur = 0;\n    while (index >= user.availableTimeBlock[cur].length) {\n      index -= user.availableTimeBlock[cur].length;\n      cur++;\n    }\n    user.availableTimeBlock[cur].splice(index, 1);\n    setUser(user);\n    forceReRender();\n  }\n\n  const addRow = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    console.log(event);\n  }\n\n  const chooseTime = (index) => {\n    return (event, target, value) => {\n      let cur = 0;\n      while (index >= user.availableTimeBlock[cur].length) {\n        index -= user.availableTimeBlock[cur].length;\n        cur++;\n      }\n      user.availableTimeBlock[cur][index] = value;\n      setUser(user);\n      forceReRender();\n    }\n    \n  }\n\n  let startTimeGroups = [], endTimeGroups = [];\n  let curTime = 0;\n  for (var i = 0; i < 96; i++) {\n    let start = (new Date(curTime)).toISOString().slice(11, 19),\n        end = (new Date(curTime + 15 * 60000)).toISOString().slice(11, 19);\n    startTimeGroups.push({\n      key: i,\n      text: start,\n      value: i,\n    })\n    endTimeGroups.push({\n      key: i,\n      text: end,\n      value: i,\n    })\n    curTime += 15 * 60000;\n  }\n\n  const _onRenderItemColumnTime = (item: number, index: number, column: IColumn) => {\n    switch (column.key) {\n      case 'startTime':\n        return <Dropdown onChange={chooseTime(index)} selectedKey={item} options={startTimeGroups} placeholder=\"Nhập thời gian bắt đầu\"/>;\n      case 'endTime':\n        return <Dropdown onChange={chooseTime(index)} selectedKey={item} options={endTimeGroups} placeholder=\"Nhập thời gian kết thúc\"/>;\n      case 'delete':\n        return <DefaultButton styles={{ root: { margin: 'auto' } }} onClick={() => deleteRow(index)} text=\"Xoá thời gian\"/>\n      default:\n        return <Label>{`Ca thứ ${index}`}</Label>;\n    }\n  }\n\n  const changeTime = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    user.availableTimeBlock.forEach(day => day.sort((a, b) => a - b));\n    api.updateTimeBlock({ availableTimeBlock: user.availableTimeBlock }).then((res: any) => {\n      if (res.success) {\n        forceReRender();\n      }\n      else {\n        // error\n      }\n    })\n  }\n\n  let [form, setForm] = useState([]);\n\n  const _onChange = (value: any, type: number) => {\n    if (value.hasOwnProperty('value')) value = value.value\n    form[type] = value;\n    setForm(form);\n    forceReRender();\n  }\n\n  let [error, setError] = useState(\"\");\n\n  const checkMatch = () => {\n    setError(form[1] === form[2] ? \"\" : \"Mật khẩu không trùng khớp\");\n  }\n\n  const changePassword = () => {\n    api.changePassword({ password: form[1] }).then((res: any) => {\n      if (res.success) {\n        // success\n      }\n      else {\n        // error\n      }\n    })\n  }\n\n  let [groupItems, setGroupItems] = useState([]);\n  \n  useEffect(() => {\n    api.getGroups().then((res: any) => {\n      if (res.data) {\n        res = res.data.map(g => ({\n          id: g._id,\n          name: g.name,\n          desc: g.description\n        }))\n        console.log(res)\n        setGroupItems(res);\n      }\n    })\n  }, [groupItems.length])\n\n  const groupColumns = [\n    { key: 'name', name: 'Tên khoa', fieldName: 'name', minWidth: 200, maxWidth: 300, isResizable: true },\n    { key: 'desc', name: 'Mô tả', fieldName: 'desc', minWidth: 200, maxWidth: 300, isResizable: true },\n    { key: 'delete', name: '', minWidth: 150, maxWidth: 200, isResizable: true}\n  ]\n\n  const deleteGroup = (index) => {\n    api.deleteGroup(groupItems[index].id).then((res: any) => {\n      if (res.success) {\n        // success\n      }\n      else {\n        // error\n      }\n    })\n  }\n\n  const _onRenderItemColumnGroup = (item: number, index: number, column: IColumn) => {\n    console.log(item, column);\n    switch (column.key) {\n      case 'delete':\n        return <DefaultButton onClick={() => deleteGroup(index)} text=\"Xoá khoa\"/>\n      default:\n        return <Label>{item[column.fieldName]}</Label>;\n    }\n  }\n\n  const createGroup = () => {\n    if (form[3].length === 0 || form[4].length === 0) return;\n    const body = {\n      name: form[3],\n      description: form[4]\n    }\n    api.createGroup(body).then((res: any) => {\n      if (res.success) {\n        // success\n        api.getGroups().then((res: any) => {\n          if (res.data) {\n            res = res.data.map(g => ({\n              name: g.name\n            }))\n            setGroupItems(res);\n          }\n        })\n      }\n      else {\n        // error\n      }\n    })\n  }\n\n  let [doctorItems, setDoctorItems] = useState([]);\n  \n  useEffect(() => {\n    api.getAllUsers().then((res: any) => {\n      if (res.data) {\n        res = res.data.filter(u => u.role !== 'admin').map(d => ({\n          id: d._id,\n          name: d.fullName,\n          group: d.group.name\n        }))\n        setDoctorItems(res);\n      }\n    })\n  }, [doctorItems.length])\n\n  const doctorColumns = [\n    { key: 'name', name: 'Tên bác sĩ', fieldName: 'name', minWidth: 200, maxWidth: 300, isResizable: true },\n    { key: 'group', name: 'Tên khoa', fieldName: 'group', minWidth: 200, maxWidth: 300, isResizable: true },\n    { key: 'delete', name: '', minWidth: 150, maxWidth: 200, isResizable: true}\n  ]\n\n  const deleteDoctor = (index) => {\n    api.deleteUser(groupItems[index].id).then((res: any) => {\n      if (res.success) {\n        // success\n      }\n      else {\n        // error\n      }\n    })\n  }\n\n  const _onRenderItemColumnDoctor = (item: number, index: number, column: IColumn) => {\n    console.log(item, column);\n    switch (column.key) {\n      case 'delete':\n        return <DefaultButton onClick={() => deleteDoctor(index)} text=\"Xoá khoa\"/>\n      default:\n        return <Label>{item[column.fieldName]}</Label>;\n    }\n  }\n\n  const createDoctor = () => {\n    const body = {\n      fullName: form[5],\n      username: form[6],\n      password: form[7],\n      phoneNumber: form[8],\n      email: form[9],\n      passportNumber: form[10],\n      groupId: form[11],\n    }\n    api.createUser(body).then((res: any) => {\n      if (res.success) {\n        // success\n        api.getAllUsers().then((res: any) => {\n          if (res.data) {\n            res = res.data.filter(u => u.role !== 'admin').map(d => ({\n              id: d._id,\n              name: d.fullName,\n              group: d.group.name\n            }))\n            setDoctorItems(res);\n          }\n        })\n      }\n      else {\n        // error\n      }\n    })\n  }\n  \n  const stackStyles: Partial<IStackStyles> = { root: { width: 900, margin: 'auto' } };\n\n  const columnProps: Partial<IStackProps> = {\n    tokens: { childrenGap: 15 },\n    styles: { root: { width: 350, float: 'left' } },\n  };\n\n  return (\n    <div className=\"profile\">\n      <Pivot styles={{root: { marginBottom: 20 } } }>\n        <PivotItem headerText=\"Thông tin\">\n          <Separator><h3>Thông tin cá nhân</h3></Separator>\n          <Label>{user.fullName}</Label>\n          <Label>{user.role}</Label>\n          <Image src={user.avatar || \"\"}/>\n        </PivotItem>\n        <PivotItem headerText=\"Thời gian làm việc\">\n          <form onSubmit={changeTime}>\n            <Separator><h3>Thời gian làm việc trong tuần này</h3></Separator>\n            <Stack horizontal tokens={{ childrenGap: 100 }} styles={stackStyles}>\n              {user.availableTimeBlock && <DetailsList\n                onRenderItemColumn={_onRenderItemColumnTime}\n                items={user.availableTimeBlock.flat()}\n                groups={groups}\n                columns={_columns}\n                groupProps={{\n                  showEmptyGroups: true,\n                }}\n                compact={true}\n                checkboxVisibility={2}\n                styles={{ root: { marginBottom: 20 } }}\n              />}\n            </Stack>\n            <PrimaryButton type=\"submit\" text=\"Thay đổi thời gian làm việc\"/>\n          </form>\n        </PivotItem>\n        <PivotItem headerText=\"Đổi mật khẩu\">\n          <form onSubmit={changePassword}>\n            <Separator><h3>Đổi mật khẩu</h3></Separator>\n            <Stack styles={stackStyles}>\n              <TextField type=\"password\" onChange={(e, value) => _onChange(value, 0)} value={form[0]} label=\"Nhập mật khẩu cũ\"/>\n              <TextField type=\"password\" onChange={(e, value) => _onChange(value, 1)} onBlur={checkMatch} value={form[1]} label=\"Nhập mật khẩu mới\"/>\n              <TextField type=\"password\" onChange={(e, value) => _onChange(value, 2)} onBlur={checkMatch} errorMessage={error} value={form[2]} styles={{ root: { marginBottom: 20 } }} label=\"Nhập lại mật khẩu mới\"/>\n              <PrimaryButton type=\"submit\" text=\"Thay đổi mật khẩu\"/>\n            </Stack>\n          </form>\n        </PivotItem>\n        <PivotItem headerText=\"[Admin] Quản lý khoa\">\n          <div>\n              <Separator><h3>Quản lý các khoa của bệnh viện</h3></Separator>\n              <Stack horizontal tokens={{ childrenGap: 100 }} styles={stackStyles}>\n                <Stack {...columnProps}>\n                  <DetailsList\n                    items={groupItems}\n                    columns={groupColumns}\n                    onRenderItemColumn={_onRenderItemColumnGroup}\n                    checkboxVisibility={2}\n                  />\n                </Stack>\n                <Stack {...columnProps}>\n                  <TextField onChange={(e, value) => _onChange(value, 3)} label=\"Tạo khoa mới\"/>\n                  <TextField onChange={(e, value) => _onChange(value, 4)} label=\"Mô tả khoa\"/>\n                  <PrimaryButton onClick={createGroup} text=\"Tạo khoa\"/>\n                </Stack>\n              </Stack>\n          </div>\n        </PivotItem>\n        <PivotItem headerText=\"[Admin] Quản lý bác sĩ\">\n          <div>\n              <Separator><h3>Quản lý các bác sĩ của bệnh viện</h3></Separator>\n              <Stack horizontal tokens={{ childrenGap: 100 }} styles={stackStyles}>\n                <Stack {...columnProps}>\n                  <DetailsList\n                    items={doctorItems}\n                    columns={doctorColumns}\n                    onRenderItemColumn={_onRenderItemColumnDoctor}\n                    checkboxVisibility={2}\n                  />\n                </Stack>\n                <Stack {...columnProps}>\n                  <TextField onChange={(e, value) => _onChange(value, 5)} label=\"Tạo bác sĩ mới\"/>\n                  <TextField onChange={(e, value) => _onChange(value, 6)} label=\"Tài khoản\"/>\n                  <TextField onChange={(e, value) => _onChange(value, 7)} label=\"Mật khẩu\"/>\n                  <TextField onChange={(e, value) => _onChange(value, 8)} label=\"Số điện thoại\"/>\n                  <TextField onChange={(e, value) => _onChange(value, 9)} type=\"email\" label=\"Email\"/>\n                  <TextField onChange={(e, value) => _onChange(value, 10)} label=\"CMND\"/>\n                  <Dropdown  \n                    onChange={(e, value) => _onChange(value, 11)} \n                    options={groupItems.map(g => ({\n                      key: g.id,\n                      value: g.id,\n                      text: g.name + ' - ' + g.desc\n                    }))} \n                    label=\"Chọn khoa\" required/>\n                  <PrimaryButton onClick={createDoctor} text=\"Tạo bác sĩ\"/>\n                </Stack>\n              </Stack>\n          </div>\n        </PivotItem>\n      </Pivot>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  user: state.user\n})\n\nconst mapDispatchtoProps = dispatch => ({\n  setUser: payload => dispatch(setUser(payload))\n})\n\nexport default connect(mapStateToProps, mapDispatchtoProps)(Profile);","import axios from 'axios'\n\nconst baseURL = 'http://35.240.224.152:8081/api/'\nconst request = {\n  get: (url) => axios.get(baseURL + url, {\n    method: 'GET',\n    headers: {\n      \"Authorization\": localStorage.getItem('token')\n    }\n  }),\n  post: (url, body) => axios.post(baseURL + url, { ...body }, {\n    method: 'POST',\n    headers: {\n      \"Authorization\": localStorage.getItem('token')\n    },\n  }),\n  delete: (url) => axios.delete(baseURL + url, {\n    method: 'DELETE',\n    headers: {\n      \"Authorization\": localStorage.getItem('token')\n    }\n  }),\n  patch: (url, body) => axios.patch(baseURL + url, { ...body }, {\n    method: 'PATCH',\n    headers: {\n      \"Authorization\": localStorage.getItem('token')\n    },\n  }),\n}\n\nconst api = {\n  getSession: () => new Promise(resolve => request.get(\"user/me\").then((res: any) => resolve(res.data))),\n  getBooking: (id: any) => new Promise(resolve => request.get(\"booking/\" + id).then((res: any) => resolve(res.data))),\n  signIn: (body: any) => new Promise(resolve => request.post(\"auth/sign-in\", { ...body }).then((res: any) => resolve(res.data))),\n  book: (body: any) => new Promise(resolve => request.post(\"booking/new\", { ...body }).then((res: any) => resolve(res.data))),\n  updateUser: (body: any) => new Promise(resolve => request.post(\"\", { ...body }).then((res: any) => resolve(res.data))),\n  changePassword: (body: any) => new Promise(resolve => request.patch(\"user/me/password\", { ...body }).then((res: any) => resolve(res.data))),\n  searchBooking: (query: any) => new Promise(resolve => request.get(\"booking/phone/\" + query).then((res: any) => resolve(res.data))),\n  getUser: (query: any) => new Promise(resolve => request.get(\"user/\" + query).then((res: any) => resolve(res.data))),\n  getDoctors: (query: any) => new Promise(resolve => request.get(\"user/group/\" + query).then((res: any) => resolve(res.data))),\n  getGroups: () => new Promise(resolve => request.get(\"groups\").then((res: any) => resolve(res.data))),\n  createGroup: (body: any) => new Promise(resolve => request.post(\"group/new\", { ...body }).then((res: any) => resolve(res.data))),\n  deleteGroup: (query: any) => new Promise(resolve => request.delete(\"group/delete/\" + query).then((res: any) => resolve(res.data))),\n  createUser: (body: any) => new Promise(resolve => request.post(\"user/new\", { ...body }).then((res: any) => resolve(res.data))),\n  deleteUser: (query: any) => new Promise(resolve => request.delete(\"user/delete/\" + query).then((res: any) => resolve(res.data))),\n  getAllUsers: () => new Promise(resolve => request.get(\"users\").then((res: any) => resolve(res.data))),\n  updateTimeBlock: (body: any) => new Promise(resolve => request.patch(\"user/me/available-time\", { ...body }).then((res: any) => resolve(res.data))),\n  generateSignedUrl: (body: any) => new Promise(resolve => request.post(\"aws/generate-signed-url\", { ...body }).then((res: any) => resolve(res.data))),\n  uploadImage: (config: any) => new Promise(resolve => axios(config). then((res: any) => resolve(res))),\n  // getGroups: () => new Promise(resolve => resolve({\n  //   success: true,\n  //   data: [\n  //     { key: '1', value: 1, text: 'Khoa Nhi' },\n  //     { key: '2', value: 2, text: 'Khoa Ngoại tổng hợp' },\n  //     { key: '3', value: 3, text: 'Khoa Tim mạch' },\n  //     { key: '4', value: 4, text: 'Khoa Tai mũi họng' },\n  //     { key: '5', value: 5, text: 'Khoa gì đó' },\n  //   ]\n  // })),\n  // getDoctors: (query: any) => new Promise(resolve => resolve({\n  //   success: true,\n  //   data: [\n  //     { key: '1', value: 1, text: 'Hải đẹp trai' },\n  //     { key: '2', value: 2, text: 'Lê Đình Hải' },\n  //     { key: '3', value: 3, text: 'Hải' },\n  //     { key: '4', value: 4, text: 'Minh Thư :<' },\n  //     { key: '5', value: 5, text: 'Ai đó' },\n  //   ]\n  // })),\n  // searchBooking: (query: any) => new Promise(resolve => {\n  //   setTimeout(() => resolve(\n  //     {\n  //       success: true,\n  //       data: [\n  //         {  \n  //           _id: \"5ea2ec9710a79c6ec8a0e4ef\",\n  //           name: \"Nguyễn Minh Huy\",\n  //           description: \"Em bị đau bụng bác sĩ ạ\",\n  //           symptom: [\"đau bụng\", \"tiêu chảy\", \"ho\"],\n  //           gender: \"male\",\n  //           dob: \"12/12/2001\",\n  //           address: \"186/5 Hùng Vương, Nha Trang\",\n  //           phoneNumber: \"0397612666\",\n  //           passportNumber: \"225923301\",\n  //           healthCareId: \"ABCABC00011\",\n  //           doctorId: \"5ea2ec9710a79c6ec8a0e4ef\",\n  //           bookingDateTimestamp: 1587772800000,\n  //           startBlockTimeIndex: 7,\n  //           endBlockTimeIndex: 8\n  //         }\n  //       ]\n  //     }\n  //   ), 1000);\n  // }),\n}\n\nexport default api;","export const setUser = (payload: any) => ({ type: \"SET_USER\", payload: payload });"],"sourceRoot":""}