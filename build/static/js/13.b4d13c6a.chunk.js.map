{"version":3,"sources":["components/Navbar/Navbar.tsx","utils/api.ts","actions/userAction.ts"],"names":["connect","state","user","dispatch","setUser","payload","props","useEffect","localStorage","getItem","api","getSession","then","res","success","data","_id","ProfileNav","hasOwnProperty","Nav","Link","onClick","history","push","fullName","removeItem","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","className","baseURL","request","url","axios","get","method","headers","body","post","delete","patch","Promise","resolve","getBooking","signIn","book","updateUser","changePassword","searchBooking","query","getUser","getDoctors","getGroups","createGroup","deleteGroup","createUser","deleteUser","getAllUsers","getMyBookings","updateTimeBlock","generateSignedUrl","uploadImage","config","imageLabel","type"],"mappings":"0NAwDeA,eARS,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAMC,SAGa,SAACC,GAAD,MAAe,CACxCC,QAAS,SAACC,GAAD,OAAaF,EAASC,YAAQC,QAG1BL,EAjDW,SAACM,GACzBC,qBAAU,WACJC,aAAaC,QAAQ,UACvBC,IAAIC,aAAaC,MAAK,SAACC,GACjBA,EAAIC,SACNR,EAAMF,QAAQS,EAAIE,WAGvB,CAACT,EAAMJ,KAAKc,MAEf,IAMMC,EAAaX,EAAMJ,KAAKgB,eAAe,OAC3C,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAIC,KAAL,CAAUC,QAAS,kBAAMC,IAAQC,KAAK,cACnCjB,EAAMJ,KAAKsB,UAEd,kBAACL,EAAA,EAAIC,KAAL,CAAUC,QAAS,kBAVrBf,EAAMF,QAAQ,IACdI,aAAaiB,WAAW,cACxBH,IAAQC,KAAK,OAQX,aAEA,KAEJ,OACE,kBAACG,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,MACxB,kBAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,KAAnB,cACA,kBAACJ,EAAA,EAAOK,OAAR,CAAeC,gBAAc,qBAC7B,kBAACN,EAAA,EAAOO,SAAR,CAAiBC,GAAG,oBAClB,kBAACf,EAAA,EAAD,CAAKgB,UAAU,WACb,kBAAChB,EAAA,EAAIC,KAAL,CAAUC,QAAS,kBAAMC,IAAQC,KAAK,OAAtC,QACA,kBAACJ,EAAA,EAAIC,KAAL,CAAUC,QAAS,kBAAMC,IAAQC,KAAK,WAAtC,WACA,kBAACJ,EAAA,EAAIC,KAAL,CAAUC,QAAS,kBAAMC,IAAQC,KAAK,aAAtC,YAEDN,Q,6DCxCHmB,EAAU,kCACVC,EACC,SAACC,GAAD,OAASC,IAAMC,IAAIJ,EAAUE,EAAK,CACrCG,OAAQ,MACRC,QAAS,CACP,cAAiBlC,aAAaC,QAAQ,aAJtC4B,EAOE,SAACC,EAAKK,GAAN,OAAeJ,IAAMK,KAAKR,EAAUE,EAArB,eAA+BK,GAAQ,CAC1DF,OAAQ,OACRC,QAAS,CACP,cAAiBlC,aAAaC,QAAQ,aAVtC4B,EAaI,SAACC,GAAD,OAASC,IAAMM,OAAOT,EAAUE,EAAK,CAC3CG,OAAQ,SACRC,QAAS,CACP,cAAiBlC,aAAaC,QAAQ,aAhBtC4B,EAmBG,SAACC,EAAKK,GAAN,OAAeJ,IAAMO,MAAMV,EAAUE,EAAtB,eAAgCK,GAAQ,CAC5DF,OAAQ,QACRC,QAAS,CACP,cAAiBlC,aAAaC,QAAQ,aAKtCC,EAAM,CACVC,WAAY,kBAAM,IAAIoC,SAAQ,SAAAC,GAAO,OAAIX,EAAY,WAAWzB,MAAK,SAACC,GAAD,OAAcmC,EAAQnC,EAAIE,aAC/FkC,WAAY,SAACf,GAAD,OAAa,IAAIa,SAAQ,SAAAC,GAAO,OAAIX,EAAY,WAAaH,GAAItB,MAAK,SAACC,GAAD,OAAcmC,EAAQnC,EAAIE,aAC5GmC,OAAQ,SAACP,GAAD,OAAe,IAAII,SAAQ,SAAAC,GAAO,OAAIX,EAAa,eAAb,eAAkCM,IAAQ/B,MAAK,SAACC,GAAD,OAAcmC,EAAQnC,EAAIE,aACvHoC,KAAM,SAACR,GAAD,OAAe,IAAII,SAAQ,SAAAC,GAAO,OAAIX,EAAa,cAAb,eAAiCM,IAAQ/B,MAAK,SAACC,GAAD,OAAcmC,EAAQnC,EAAIE,aACpHqC,WAAY,SAACT,GAAD,OAAe,IAAII,SAAQ,SAAAC,GAAO,OAAIX,EAAa,GAAb,eAAsBM,IAAQ/B,MAAK,SAACC,GAAD,OAAcmC,EAAQnC,EAAIE,aAC/GsC,eAAgB,SAACV,GAAD,OAAe,IAAII,SAAQ,SAAAC,GAAO,OAAIX,EAAc,mBAAd,eAAuCM,IAAQ/B,MAAK,SAACC,GAAD,OAAcmC,EAAQnC,EAAIE,aACpIuC,cAAe,SAACC,GAAD,OAAgB,IAAIR,SAAQ,SAAAC,GAAO,OAAIX,EAAY,iBAAmBkB,GAAO3C,MAAK,SAACC,GAAD,OAAcmC,EAAQnC,EAAIE,aAC3HyC,QAAS,SAACD,GAAD,OAAgB,IAAIR,SAAQ,SAAAC,GAAO,OAAIX,EAAY,QAAUkB,GAAO3C,MAAK,SAACC,GAAD,OAAcmC,EAAQnC,EAAIE,aAC5G0C,WAAY,SAACF,GAAD,OAAgB,IAAIR,SAAQ,SAAAC,GAAO,OAAIX,EAAY,cAAgBkB,GAAO3C,MAAK,SAACC,GAAD,OAAcmC,EAAQnC,EAAIE,aACrH2C,UAAW,kBAAM,IAAIX,SAAQ,SAAAC,GAAO,OAAIX,EAAY,UAAUzB,MAAK,SAACC,GAAD,OAAcmC,EAAQnC,EAAIE,aAC7F4C,YAAa,SAAChB,GAAD,OAAe,IAAII,SAAQ,SAAAC,GAAO,OAAIX,EAAa,YAAb,eAA+BM,IAAQ/B,MAAK,SAACC,GAAD,OAAcmC,EAAQnC,EAAIE,aACzH6C,YAAa,SAACL,GAAD,OAAgB,IAAIR,SAAQ,SAAAC,GAAO,OAAIX,EAAe,gBAAkBkB,GAAO3C,MAAK,SAACC,GAAD,OAAcmC,EAAQnC,EAAIE,aAC3H8C,WAAY,SAAClB,GAAD,OAAe,IAAII,SAAQ,SAAAC,GAAO,OAAIX,EAAa,WAAb,eAA8BM,IAAQ/B,MAAK,SAACC,GAAD,OAAcmC,EAAQnC,EAAIE,aACvH+C,WAAY,SAACP,GAAD,OAAgB,IAAIR,SAAQ,SAAAC,GAAO,OAAIX,EAAe,eAAiBkB,GAAO3C,MAAK,SAACC,GAAD,OAAcmC,EAAQnC,EAAIE,aACzHgD,YAAa,kBAAM,IAAIhB,SAAQ,SAAAC,GAAO,OAAIX,EAAY,SAASzB,MAAK,SAACC,GAAD,OAAcmC,EAAQnC,EAAIE,aAC9FiD,cAAe,kBAAM,IAAIjB,SAAQ,SAAAC,GAAO,OAAIX,EAAY,cAAczB,MAAK,SAACC,GAAD,OAAcmC,EAAQnC,EAAIE,aACrGkD,gBAAiB,SAACtB,GAAD,OAAe,IAAII,SAAQ,SAAAC,GAAO,OAAIX,EAAc,yBAAd,eAA6CM,IAAQ/B,MAAK,SAACC,GAAD,OAAcmC,EAAQnC,EAAIE,aAC3ImD,kBAAmB,SAACvB,GAAD,OAAe,IAAII,SAAQ,SAAAC,GAAO,OAAIX,EAAa,0BAAb,eAA6CM,IAAQ/B,MAAK,SAACC,GAAD,OAAcmC,EAAQnC,EAAIE,aAC7IoD,YAAa,SAACC,GAAD,OAAiB,IAAIrB,SAAQ,SAAAC,GAAO,OAAIT,IAAM6B,GAASxD,MAAK,SAACC,GAAD,OAAcmC,EAAQnC,UAC/FwD,WAAY,SAAC1B,GAAD,OAAe,IAAII,SAAQ,SAAAC,GAAO,OAAIX,EAAa,aAAb,eAAgCM,IAAQ/B,MAAK,SAACC,GAAD,OAAcmC,EAAQnC,EAAIE,cAgD5GL,O,gCClGf,kCAAO,IAAMN,EAAU,SAACC,GAAD,MAAmB,CAAEiE,KAAM,WAAYjE,QAASA","file":"static/js/13.b4d13c6a.chunk.js","sourcesContent":["import api from \"../../utils/api\";\nimport { connect } from \"react-redux\";\nimport React, { useEffect } from \"react\";\nimport history from \"../../utils/history\";\nimport { Nav, Navbar } from \"react-bootstrap\";\nimport { setUser } from \"../../actions/userAction\";\n\nconst _Navbar: React.FC = (props: any) => {\n  useEffect(() => {\n    if (localStorage.getItem(\"token\"))\n      api.getSession().then((res: any) => {\n        if (res.success) {\n          props.setUser(res.data);\n        }\n      });\n  }, [props.user._id]);\n\n  const signOut = () => {\n    props.setUser({});\n    localStorage.removeItem(\"token\");\n    history.push(\"/\");\n  };\n\n  const ProfileNav = props.user.hasOwnProperty(\"_id\") ? (\n    <Nav>\n      <Nav.Link onClick={() => history.push(\"/profile\")}>\n        {props.user.fullName}\n      </Nav.Link>\n      <Nav.Link onClick={() => signOut()}>Sign out</Nav.Link>\n    </Nav>\n  ) : null;\n\n  return (\n    <Navbar bg=\"white\" expand=\"lg\">\n      <Navbar.Brand href=\"/\">Homespital</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link onClick={() => history.push(\"/\")}>Home</Nav.Link>\n          <Nav.Link onClick={() => history.push(\"/book\")}>Booking</Nav.Link>\n          <Nav.Link onClick={() => history.push(\"/search\")}>Look up</Nav.Link>\n        </Nav>\n        {ProfileNav}\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nconst mapDispatchtoProps = (dispatch) => ({\n  setUser: (payload) => dispatch(setUser(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchtoProps)(_Navbar);\n","import axios from 'axios'\n\nconst baseURL = 'http://35.240.224.152:8081/api/'\nconst request = {\n  get: (url) => axios.get(baseURL + url, {\n    method: 'GET',\n    headers: {\n      \"Authorization\": localStorage.getItem('token')\n    }\n  }),\n  post: (url, body) => axios.post(baseURL + url, { ...body }, {\n    method: 'POST',\n    headers: {\n      \"Authorization\": localStorage.getItem('token')\n    },\n  }),\n  delete: (url) => axios.delete(baseURL + url, {\n    method: 'DELETE',\n    headers: {\n      \"Authorization\": localStorage.getItem('token')\n    }\n  }),\n  patch: (url, body) => axios.patch(baseURL + url, { ...body }, {\n    method: 'PATCH',\n    headers: {\n      \"Authorization\": localStorage.getItem('token')\n    },\n  }),\n}\n\nconst api = {\n  getSession: () => new Promise(resolve => request.get(\"user/me\").then((res: any) => resolve(res.data))),\n  getBooking: (id: any) => new Promise(resolve => request.get(\"booking/\" + id).then((res: any) => resolve(res.data))),\n  signIn: (body: any) => new Promise(resolve => request.post(\"auth/sign-in\", { ...body }).then((res: any) => resolve(res.data))),\n  book: (body: any) => new Promise(resolve => request.post(\"booking/new\", { ...body }).then((res: any) => resolve(res.data))),\n  updateUser: (body: any) => new Promise(resolve => request.post(\"\", { ...body }).then((res: any) => resolve(res.data))),\n  changePassword: (body: any) => new Promise(resolve => request.patch(\"user/me/password\", { ...body }).then((res: any) => resolve(res.data))),\n  searchBooking: (query: any) => new Promise(resolve => request.get(\"booking/phone/\" + query).then((res: any) => resolve(res.data))),\n  getUser: (query: any) => new Promise(resolve => request.get(\"user/\" + query).then((res: any) => resolve(res.data))),\n  getDoctors: (query: any) => new Promise(resolve => request.get(\"user/group/\" + query).then((res: any) => resolve(res.data))),\n  getGroups: () => new Promise(resolve => request.get(\"groups\").then((res: any) => resolve(res.data))),\n  createGroup: (body: any) => new Promise(resolve => request.post(\"group/new\", { ...body }).then((res: any) => resolve(res.data))),\n  deleteGroup: (query: any) => new Promise(resolve => request.delete(\"group/delete/\" + query).then((res: any) => resolve(res.data))),\n  createUser: (body: any) => new Promise(resolve => request.post(\"user/new\", { ...body }).then((res: any) => resolve(res.data))),\n  deleteUser: (query: any) => new Promise(resolve => request.delete(\"user/delete/\" + query).then((res: any) => resolve(res.data))),\n  getAllUsers: () => new Promise(resolve => request.get(\"users\").then((res: any) => resolve(res.data))),\n  getMyBookings: () => new Promise(resolve => request.get(\"booking/me\").then((res: any) => resolve(res.data))),\n  updateTimeBlock: (body: any) => new Promise(resolve => request.patch(\"user/me/available-time\", { ...body }).then((res: any) => resolve(res.data))),\n  generateSignedUrl: (body: any) => new Promise(resolve => request.post(\"aws/generate-signed-url\", { ...body }).then((res: any) => resolve(res.data))),\n  uploadImage: (config: any) => new Promise(resolve => axios(config). then((res: any) => resolve(res))),\n  imageLabel: (body: any) => new Promise(resolve => request.post(\"attachment\", { ...body }).then((res: any) => resolve(res.data))),\n  // getGroups: () => new Promise(resolve => resolve({\n  //   success: true,\n  //   data: [\n  //     { key: '1', value: 1, text: 'Khoa Nhi' },\n  //     { key: '2', value: 2, text: 'Khoa Ngoại tổng hợp' },\n  //     { key: '3', value: 3, text: 'Khoa Tim mạch' },\n  //     { key: '4', value: 4, text: 'Khoa Tai mũi họng' },\n  //     { key: '5', value: 5, text: 'Khoa gì đó' },\n  //   ]\n  // })),\n  // getDoctors: (query: any) => new Promise(resolve => resolve({\n  //   success: true,\n  //   data: [\n  //     { key: '1', value: 1, text: 'Hải đẹp trai' },\n  //     { key: '2', value: 2, text: 'Lê Đình Hải' },\n  //     { key: '3', value: 3, text: 'Hải' },\n  //     { key: '4', value: 4, text: 'Minh Thư :<' },\n  //     { key: '5', value: 5, text: 'Ai đó' },\n  //   ]\n  // })),\n  // searchBooking: (query: any) => new Promise(resolve => {\n  //   setTimeout(() => resolve(\n  //     {\n  //       success: true,\n  //       data: [\n  //         {  \n  //           _id: \"5ea2ec9710a79c6ec8a0e4ef\",\n  //           name: \"Nguyễn Minh Huy\",\n  //           description: \"Em bị đau bụng bác sĩ ạ\",\n  //           symptom: [\"đau bụng\", \"tiêu chảy\", \"ho\"],\n  //           gender: \"male\",\n  //           dob: \"12/12/2001\",\n  //           address: \"186/5 Hùng Vương, Nha Trang\",\n  //           phoneNumber: \"0397612666\",\n  //           passportNumber: \"225923301\",\n  //           healthCareId: \"ABCABC00011\",\n  //           doctorId: \"5ea2ec9710a79c6ec8a0e4ef\",\n  //           bookingDateTimestamp: 1587772800000,\n  //           startBlockTimeIndex: 7,\n  //           endBlockTimeIndex: 8\n  //         }\n  //       ]\n  //     }\n  //   ), 1000);\n  // }),\n}\n\nexport default api;","export const setUser = (payload: any) => ({ type: \"SET_USER\", payload: payload });"],"sourceRoot":""}